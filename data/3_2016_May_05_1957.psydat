ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/IRAP/IRAP.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/IRAP/data/3_2016_May_05_1957
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'IRAP'
p12
sS'dataNames'
p13
(lp14
S'stimulus1'
p15
aS'stimulus2'
p16
aS'img_stimulus1'
p17
aS'img_stimulus2'
p18
aS'response_option_left'
p19
aS'response_option_right'
p20
aS'required_response_A.keys'
p21
aS'required_response_A.corr'
p22
aS'required_response_A.rt'
p23
aS'feedback_response_A.keys'
p24
aS'feedback_response_A.corr'
p25
aS'feedback_response_A.rt'
p26
aS'required_response_B.keys'
p27
aS'required_response_B.corr'
p28
aS'required_response_B.rt'
p29
aS'feedback_response_B.keys'
p30
aS'feedback_response_B.corr'
p31
aS'feedback_response_B.rt'
p32
asS'autoLog'
p33
I01
sS'extraInfo'
p34
(dp35
Vparticipant
p36
V3
sVUseMonkey
p37
Vy
sVgender
p38
Vm
sVage
p39
V1
sS'frameRate'
p40
cnumpy.core.multiarray
scalar
p41
(cnumpy
dtype
p42
(S'f8'
I0
I1
tRp43
(I3
S'<'
NNNI-1
I-1
I0
tbS'[\xa7\xe4rc\xdaM@'
tRp44
sS'expName'
p45
g12
sS'date'
p46
V2016_May_05_1957
p47
sVStartingBlock
p48
Va
ssS'loopsUnfinished'
p49
(lp50
sS'saveWideText'
p51
I01
sS'thisEntry'
p52
(dp53
sS'version'
p54
S''
sS'_paramNamesSoFar'
p55
(lp56
Vresponse_option_left_location
p57
aVaccuracyCriterion
p58
aVresponse_option_right_location
p59
aVstimulus1_location
p60
aVseconds
p61
aVpercentCorrect
p62
aVend_message
p63
aVimage_stimulus1_location
p64
aVspeed
p65
aVaccuracy_feedback_location
p66
aVmoving_response_options
p67
aVrule_A
p68
aVimage_stimulus2_location
p69
aVrule_B
p70
aVpress_message
p71
aVintro_message
p72
aVaim
p73
aVresponse_option_B
p74
aVresponse_option_A
p75
aVlatencyCriterion
p76
aVstimulus2_location
p77
aVn_pairs_test_blocks
p78
aVmax_pairs_practice_blocks
p79
aVaccuracy
p80
aVtrialType
p81
aVstimulus1_category
p82
aVstimulus2_category
p83
asS'entries'
p84
(lp85
(dp86
g57
(lp87
F-0.29999999999999999
aF-0.59999999999999998
asg58
I0
sg59
(lp88
F0.29999999999999999
aF-0.59999999999999998
asS'practice_Afirst.thisTrialN'
p89
I0
sS'task.thisIndex'
p90
g41
(g42
(S'i4'
I0
I1
tRp91
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp92
sS'practice_Afirst.thisIndex'
p93
g41
(g91
S'\x00\x00\x00\x00'
tRp94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p95
NsS'task.thisN'
p96
I0
sg63
VEnd of task.
p97
sg81
I3
sg64
(lp98
I0
aF0.29999999999999999
asg15
Vmaggot
p99
sg16
Vfriendly
p100
sg65
VSpeed:
p101
sg24
Vi
sS'practice_blocks.thisTrialN'
p102
I0
sS'practice_trials_Afirst.thisIndex'
p103
g41
(g91
S'\x02\x00\x00\x00'
tRp104
sg68
VRespond AS IF flowers are positive and insects are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p105
sg20
VSimilar
p106
sg82
Vb
sg70
VRespond AS IF insects are positive and flowers are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p107
sg71
VPress 'e' or 'i' to continue
p108
sg17
Vblank.png
p109
sg18
g109
sg74
g106
sg75
VDifferent
p110
sg76
I0
sS'practice_blocks.thisN'
p111
I0
sg77
(lp112
I0
aF-0.20000000000000001
asg22
I1
sS'practice_blocks.thisRepN'
p113
I0
sg80
VAccuracy:
p114
sg19
g110
sS'task.thisTrialN'
p115
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p116
NsS'practice_blocks.thisIndex'
p117
g41
(g91
S'\x00\x00\x00\x00'
tRp118
sg62
Vpercent correct
p119
sS'practice_trials_Afirst.thisN'
p120
I0
sS'task.thisRepN'
p121
I0
sg72
VThis task will present you with pairs of words. \u000a\u000aYou will be given rules on how to respond to them. \u000a\u000aGo as quickly as you can while being accurate.\u000a\u000aPlace your fingers on the 'e' and 'i' keys. \u000aPress either one to continue.
p122
sS'practice_Afirst.thisN'
p123
I0
sS'practice_trials_Afirst.thisRepN'
p124
I0
sg46
g47
sg36
V3
sg66
(lp125
I0
aF-0.69999999999999996
asS'practice_Afirst.thisRepN'
p126
I0
sg26
F0.10483503341674805
sg67
VFalse
p127
sg45
g12
sg23
F0.10777115821838379
sg69
(lp128
I0
aF-0.29999999999999999
asg38
Vm
sg39
V1
sg83
Vc
sg73
VAim for >80% and <2 seconds
p129
sg60
(lp130
I0
aF0.20000000000000001
asS'practice_trials_Afirst.thisTrialN'
p131
I0
sg78
I3
sg79
I4
sa(dp132
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p133
I0
sS'task.thisIndex'
p134
g92
sS'practice_Afirst.thisIndex'
p135
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p136
NsS'task.thisN'
p137
I0
sg63
g97
sg81
I1
sg64
g98
sg15
Vlilly
p138
sg16
Vhappy
p139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p140
I0
sS'practice_trials_Afirst.thisIndex'
p141
g41
(g91
S'\x00\x00\x00\x00'
tRp142
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p143
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p144
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p145
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p146
NsS'practice_blocks.thisIndex'
p147
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p148
I1
sS'task.thisRepN'
p149
I0
sg72
g122
sS'practice_Afirst.thisN'
p150
I0
sS'practice_trials_Afirst.thisRepN'
p151
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p152
I0
sg26
F0.10858702659606934
sg67
g127
sg45
g12
sg23
F0.1088099479675293
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p153
I1
sg78
I3
sg79
I4
sa(dp154
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p155
I0
sS'task.thisIndex'
p156
g92
sS'practice_Afirst.thisIndex'
p157
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p158
NsS'task.thisN'
p159
I0
sg63
g97
sg81
I4
sg64
g98
sg15
Vbee
p160
sg16
Vpain
p161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p162
I0
sS'practice_trials_Afirst.thisIndex'
p163
g41
(g91
S'\x03\x00\x00\x00'
tRp164
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p165
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p166
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p167
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p168
NsS'practice_blocks.thisIndex'
p169
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p170
I2
sS'task.thisRepN'
p171
I0
sg72
g122
sS'practice_Afirst.thisN'
p172
I0
sS'practice_trials_Afirst.thisRepN'
p173
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p174
I0
sg26
F0.10402107238769531
sg67
g127
sg45
g12
sg23
F0.10435891151428223
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p175
I2
sg78
I3
sg79
I4
sa(dp176
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p177
I0
sS'task.thisIndex'
p178
g92
sS'practice_Afirst.thisIndex'
p179
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p180
NsS'task.thisN'
p181
I0
sg63
g97
sg81
I2
sg64
g98
sg15
Vrose
p182
sg16
Vhostile
p183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p184
I0
sS'practice_trials_Afirst.thisIndex'
p185
g41
(g91
S'\x01\x00\x00\x00'
tRp186
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p187
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p188
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p189
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p190
NsS'practice_blocks.thisIndex'
p191
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p192
I3
sS'task.thisRepN'
p193
I0
sg72
g122
sS'practice_Afirst.thisN'
p194
I0
sS'practice_trials_Afirst.thisRepN'
p195
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p196
I0
sg26
F0.099869966506958008
sg67
g127
sg45
g12
sg23
F0.10005593299865723
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p197
I3
sg78
I3
sg79
I4
sa(dp198
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p199
I0
sS'task.thisIndex'
p200
g92
sS'practice_Afirst.thisIndex'
p201
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p202
NsS'task.thisN'
p203
I0
sg63
g97
sg81
I4
sg64
g98
sg15
Vwasp
p204
sg16
Vmean
p205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p206
I0
sS'practice_trials_Afirst.thisIndex'
p207
g41
(g91
S'\x03\x00\x00\x00'
tRp208
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p209
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p210
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p211
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p212
NsS'practice_blocks.thisIndex'
p213
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p214
I4
sS'task.thisRepN'
p215
I0
sg72
g122
sS'practice_Afirst.thisN'
p216
I0
sS'practice_trials_Afirst.thisRepN'
p217
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p218
I0
sg26
F0.11313581466674805
sg67
g127
sg45
g12
sg23
F0.11320900917053223
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p219
I0
sg78
I3
sg79
I4
sa(dp220
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p221
I0
sS'task.thisIndex'
p222
g92
sS'practice_Afirst.thisIndex'
p223
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p224
NsS'task.thisN'
p225
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g138
sg16
Vgood
p226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p227
I0
sS'practice_trials_Afirst.thisIndex'
p228
g41
(g91
S'\x00\x00\x00\x00'
tRp229
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p230
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p231
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p232
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p233
NsS'practice_blocks.thisIndex'
p234
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p235
I5
sS'task.thisRepN'
p236
I0
sg72
g122
sS'practice_Afirst.thisN'
p237
I0
sS'practice_trials_Afirst.thisRepN'
p238
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p239
I0
sg26
F0.09661102294921875
sg67
g127
sg45
g12
sg23
F0.096927881240844727
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p240
I1
sg78
I3
sg79
I4
sa(dp241
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p242
I0
sS'task.thisIndex'
p243
g92
sS'practice_Afirst.thisIndex'
p244
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p245
NsS'task.thisN'
p246
I0
sg63
g97
sg81
I2
sg64
g98
sg15
Vdaisy
p247
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p248
I0
sS'practice_trials_Afirst.thisIndex'
p249
g41
(g91
S'\x01\x00\x00\x00'
tRp250
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p251
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p252
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p253
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p254
NsS'practice_blocks.thisIndex'
p255
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p256
I6
sS'task.thisRepN'
p257
I0
sg72
g122
sS'practice_Afirst.thisN'
p258
I0
sS'practice_trials_Afirst.thisRepN'
p259
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p260
I0
sg26
F0.11060595512390137
sg67
g127
sg45
g12
sg23
F0.11084389686584473
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p261
I2
sg78
I3
sg79
I4
sa(dp262
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p263
I0
sS'task.thisIndex'
p264
g92
sS'practice_Afirst.thisIndex'
p265
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p266
NsS'task.thisN'
p267
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g99
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p268
I0
sS'practice_trials_Afirst.thisIndex'
p269
g41
(g91
S'\x02\x00\x00\x00'
tRp270
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p271
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p272
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p273
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p274
NsS'practice_blocks.thisIndex'
p275
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p276
I7
sS'task.thisRepN'
p277
I0
sg72
g122
sS'practice_Afirst.thisN'
p278
I0
sS'practice_trials_Afirst.thisRepN'
p279
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p280
I0
sg26
F0.10560202598571777
sg67
g127
sg45
g12
sg23
F0.10581803321838379
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p281
I3
sg78
I3
sg79
I4
sa(dp282
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p283
I0
sS'task.thisIndex'
p284
g92
sS'practice_Afirst.thisIndex'
p285
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p286
NsS'task.thisN'
p287
I0
sg63
g97
sg81
I2
sg64
g98
sg15
Vdaffodil
p288
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p289
I0
sS'practice_trials_Afirst.thisIndex'
p290
g41
(g91
S'\x01\x00\x00\x00'
tRp291
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p292
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p293
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p294
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p295
NsS'practice_blocks.thisIndex'
p296
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p297
I8
sS'task.thisRepN'
p298
I0
sg72
g122
sS'practice_Afirst.thisN'
p299
I0
sS'practice_trials_Afirst.thisRepN'
p300
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p301
I0
sg26
F0.10239791870117188
sg67
g127
sg45
g12
sg23
F0.1025850772857666
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p302
I0
sg78
I3
sg79
I4
sa(dp303
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p304
I0
sS'task.thisIndex'
p305
g92
sS'practice_Afirst.thisIndex'
p306
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p307
NsS'task.thisN'
p308
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g160
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p309
I0
sS'practice_trials_Afirst.thisIndex'
p310
g41
(g91
S'\x03\x00\x00\x00'
tRp311
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p312
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p313
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p314
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p315
NsS'practice_blocks.thisIndex'
p316
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p317
I9
sS'task.thisRepN'
p318
I0
sg72
g122
sS'practice_Afirst.thisN'
p319
I0
sS'practice_trials_Afirst.thisRepN'
p320
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p321
I0
sg26
F0.10613799095153809
sg67
g127
sg45
g12
sg23
F0.10633611679077148
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p322
I1
sg78
I3
sg79
I4
sa(dp323
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p324
I0
sS'task.thisIndex'
p325
g92
sS'practice_Afirst.thisIndex'
p326
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p327
NsS'task.thisN'
p328
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g247
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p329
I0
sS'practice_trials_Afirst.thisIndex'
p330
g41
(g91
S'\x00\x00\x00\x00'
tRp331
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p332
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p333
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p334
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p335
NsS'practice_blocks.thisIndex'
p336
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p337
I10
sS'task.thisRepN'
p338
I0
sg72
g122
sS'practice_Afirst.thisN'
p339
I0
sS'practice_trials_Afirst.thisRepN'
p340
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p341
I0
sg26
F0.10068702697753906
sg67
g127
sg45
g12
sg23
F0.1009058952331543
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p342
I2
sg78
I3
sg79
I4
sa(dp343
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p344
I0
sS'task.thisIndex'
p345
g92
sS'practice_Afirst.thisIndex'
p346
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p347
NsS'task.thisN'
p348
I0
sg63
g97
sg81
I3
sg64
g98
sg15
Vspider
p349
sg16
Vpretty
p350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p351
I0
sS'practice_trials_Afirst.thisIndex'
p352
g41
(g91
S'\x02\x00\x00\x00'
tRp353
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p354
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p355
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p356
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p357
NsS'practice_blocks.thisIndex'
p358
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p359
I11
sS'task.thisRepN'
p360
I0
sg72
g122
sS'practice_Afirst.thisN'
p361
I0
sS'practice_trials_Afirst.thisRepN'
p362
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p363
I0
sg26
F0.10839700698852539
sg67
g127
sg45
g12
sg23
F0.10852909088134766
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p364
I3
sg78
I3
sg79
I4
sa(dp365
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p366
I0
sS'task.thisIndex'
p367
g92
sS'practice_Afirst.thisIndex'
p368
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p369
NsS'task.thisN'
p370
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g204
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p371
I0
sS'practice_trials_Afirst.thisIndex'
p372
g41
(g91
S'\x02\x00\x00\x00'
tRp373
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p374
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p375
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p376
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p377
NsS'practice_blocks.thisIndex'
p378
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p379
I12
sS'task.thisRepN'
p380
I0
sg72
g122
sS'practice_Afirst.thisN'
p381
I0
sS'practice_trials_Afirst.thisRepN'
p382
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p383
I0
sg26
F0.10550880432128906
sg67
g127
sg45
g12
sg23
F0.10573816299438477
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p384
I0
sg78
I3
sg79
I4
sa(dp385
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p386
I0
sS'task.thisIndex'
p387
g92
sS'practice_Afirst.thisIndex'
p388
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p389
NsS'task.thisN'
p390
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g349
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p391
I0
sS'practice_trials_Afirst.thisIndex'
p392
g41
(g91
S'\x03\x00\x00\x00'
tRp393
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p394
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p395
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p396
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p397
NsS'practice_blocks.thisIndex'
p398
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p399
I13
sS'task.thisRepN'
p400
I0
sg72
g122
sS'practice_Afirst.thisN'
p401
I0
sS'practice_trials_Afirst.thisRepN'
p402
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p403
I0
sg26
F0.103179931640625
sg67
g127
sg45
g12
sg23
F0.10336899757385254
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p404
I1
sg78
I3
sg79
I4
sa(dp405
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p406
I0
sS'task.thisIndex'
p407
g92
sS'practice_Afirst.thisIndex'
p408
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p409
NsS'task.thisN'
p410
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g247
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p411
I0
sS'practice_trials_Afirst.thisIndex'
p412
g41
(g91
S'\x00\x00\x00\x00'
tRp413
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p414
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p415
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p416
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p417
NsS'practice_blocks.thisIndex'
p418
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p419
I14
sS'task.thisRepN'
p420
I0
sg72
g122
sS'practice_Afirst.thisN'
p421
I0
sS'practice_trials_Afirst.thisRepN'
p422
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p423
I0
sg26
F0.10639214515686035
sg67
g127
sg45
g12
sg23
F0.10660195350646973
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p424
I2
sg78
I3
sg79
I4
sa(dp425
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p426
I0
sS'task.thisIndex'
p427
g92
sS'practice_Afirst.thisIndex'
p428
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p429
NsS'task.thisN'
p430
I0
sg63
g97
sg81
I2
sg64
g98
sg15
g288
sg16
Vhateful
p431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p432
I0
sS'practice_trials_Afirst.thisIndex'
p433
g41
(g91
S'\x01\x00\x00\x00'
tRp434
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p435
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p436
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p437
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p438
NsS'practice_blocks.thisIndex'
p439
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p440
I15
sS'task.thisRepN'
p441
I0
sg72
g122
sS'practice_Afirst.thisN'
p442
I0
sS'practice_trials_Afirst.thisRepN'
p443
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p444
I0
sg26
F0.10602307319641113
sg67
g127
sg45
g12
sg23
F0.1062009334564209
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p445
I3
sg78
I3
sg79
I4
sa(dp446
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p447
I0
sS'task.thisIndex'
p448
g92
sS'practice_Afirst.thisIndex'
p449
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p450
NsS'task.thisN'
p451
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g204
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p452
I0
sS'practice_trials_Afirst.thisIndex'
p453
g41
(g91
S'\x03\x00\x00\x00'
tRp454
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p455
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p456
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p457
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p458
NsS'practice_blocks.thisIndex'
p459
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p460
I16
sS'task.thisRepN'
p461
I0
sg72
g122
sS'practice_Afirst.thisN'
p462
I0
sS'practice_trials_Afirst.thisRepN'
p463
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p464
I0
sg26
F0.10570406913757324
sg67
g127
sg45
g12
sg23
F0.10606098175048828
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p465
I0
sg78
I3
sg79
I4
sa(dp466
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p467
I0
sS'task.thisIndex'
p468
g92
sS'practice_Afirst.thisIndex'
p469
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p470
NsS'task.thisN'
p471
I0
sg63
g97
sg81
I2
sg64
g98
sg15
g288
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p472
I0
sS'practice_trials_Afirst.thisIndex'
p473
g41
(g91
S'\x01\x00\x00\x00'
tRp474
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p475
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p476
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p477
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p478
NsS'practice_blocks.thisIndex'
p479
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p480
I17
sS'task.thisRepN'
p481
I0
sg72
g122
sS'practice_Afirst.thisN'
p482
I0
sS'practice_trials_Afirst.thisRepN'
p483
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p484
I0
sg26
F0.10525393486022949
sg67
g127
sg45
g12
sg23
F0.10559701919555664
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p485
I1
sg78
I3
sg79
I4
sa(dp486
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p487
I0
sS'task.thisIndex'
p488
g92
sS'practice_Afirst.thisIndex'
p489
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p490
NsS'task.thisN'
p491
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g182
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p492
I0
sS'practice_trials_Afirst.thisIndex'
p493
g41
(g91
S'\x00\x00\x00\x00'
tRp494
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p495
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p496
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p497
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p498
NsS'practice_blocks.thisIndex'
p499
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p500
I18
sS'task.thisRepN'
p501
I0
sg72
g122
sS'practice_Afirst.thisN'
p502
I0
sS'practice_trials_Afirst.thisRepN'
p503
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p504
I0
sg26
F0.10818600654602051
sg67
g127
sg45
g12
sg23
F0.10829305648803711
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p505
I2
sg78
I3
sg79
I4
sa(dp506
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p507
I0
sS'task.thisIndex'
p508
g92
sS'practice_Afirst.thisIndex'
p509
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p510
NsS'task.thisN'
p511
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g349
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p512
I0
sS'practice_trials_Afirst.thisIndex'
p513
g41
(g91
S'\x02\x00\x00\x00'
tRp514
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p515
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p516
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p517
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p518
NsS'practice_blocks.thisIndex'
p519
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p520
I19
sS'task.thisRepN'
p521
I0
sg72
g122
sS'practice_Afirst.thisN'
p522
I0
sS'practice_trials_Afirst.thisRepN'
p523
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p524
I0
sg26
F0.10743999481201172
sg67
g127
sg45
g12
sg23
F0.10764288902282715
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p525
I3
sg78
I3
sg79
I4
sa(dp526
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p527
I0
sS'task.thisIndex'
p528
g92
sS'practice_Afirst.thisIndex'
p529
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p530
NsS'task.thisN'
p531
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g138
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p532
I0
sS'practice_trials_Afirst.thisIndex'
p533
g41
(g91
S'\x00\x00\x00\x00'
tRp534
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p535
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p536
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p537
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p538
NsS'practice_blocks.thisIndex'
p539
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p540
I20
sS'task.thisRepN'
p541
I0
sg72
g122
sS'practice_Afirst.thisN'
p542
I0
sS'practice_trials_Afirst.thisRepN'
p543
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p544
I0
sg26
F0.10241007804870605
sg67
g127
sg45
g12
sg23
F0.10270881652832031
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p545
I0
sg78
I3
sg79
I4
sa(dp546
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p547
I0
sS'task.thisIndex'
p548
g92
sS'practice_Afirst.thisIndex'
p549
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p550
NsS'task.thisN'
p551
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g349
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p552
I0
sS'practice_trials_Afirst.thisIndex'
p553
g41
(g91
S'\x02\x00\x00\x00'
tRp554
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p555
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p556
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p557
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p558
NsS'practice_blocks.thisIndex'
p559
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p560
I21
sS'task.thisRepN'
p561
I0
sg72
g122
sS'practice_Afirst.thisN'
p562
I0
sS'practice_trials_Afirst.thisRepN'
p563
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p564
I0
sg26
F0.10635900497436523
sg67
g127
sg45
g12
sg23
F0.10657191276550293
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p565
I1
sg78
I3
sg79
I4
sa(dp566
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p567
I0
sS'task.thisIndex'
p568
g92
sS'practice_Afirst.thisIndex'
p569
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p570
NsS'task.thisN'
p571
I0
sg63
g97
sg81
I2
sg64
g98
sg15
g138
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p572
I0
sS'practice_trials_Afirst.thisIndex'
p573
g41
(g91
S'\x01\x00\x00\x00'
tRp574
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p575
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p576
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p577
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p578
NsS'practice_blocks.thisIndex'
p579
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p580
I22
sS'task.thisRepN'
p581
I0
sg72
g122
sS'practice_Afirst.thisN'
p582
I0
sS'practice_trials_Afirst.thisRepN'
p583
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p584
I0
sg26
F0.12549495697021484
sg67
g127
sg45
g12
sg23
F0.1256861686706543
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p585
I2
sg78
I3
sg79
I4
sa(dp586
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p587
I0
sS'task.thisIndex'
p588
g92
sS'practice_Afirst.thisIndex'
p589
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p590
NsS'task.thisN'
p591
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g99
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p592
I0
sS'practice_trials_Afirst.thisIndex'
p593
g41
(g91
S'\x03\x00\x00\x00'
tRp594
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p595
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p596
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p597
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p598
NsS'practice_blocks.thisIndex'
p599
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p600
I23
sS'task.thisRepN'
p601
I0
sg72
g122
sS'practice_Afirst.thisN'
p602
I0
sS'practice_trials_Afirst.thisRepN'
p603
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p604
I0
sg26
F0.10809111595153809
sg67
g127
sg45
g12
sg23
F0.10983610153198242
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p605
I3
sg78
I3
sg79
I4
sa(dp606
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p607
I0
sS'task.thisIndex'
p608
g92
sS'practice_Afirst.thisIndex'
p609
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p610
NsS'task.thisN'
p611
I0
sg63
g97
sg81
I2
sg64
g98
sg15
g288
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p612
I0
sS'practice_trials_Afirst.thisIndex'
p613
g41
(g91
S'\x01\x00\x00\x00'
tRp614
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p615
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p616
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p617
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p618
NsS'practice_blocks.thisIndex'
p619
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p620
I24
sS'task.thisRepN'
p621
I0
sg72
g122
sS'practice_Afirst.thisN'
p622
I0
sS'practice_trials_Afirst.thisRepN'
p623
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p624
I0
sg26
F0.13325810432434082
sg67
g127
sg45
g12
sg23
F0.13392305374145508
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p625
I0
sg78
I3
sg79
I4
sa(dp626
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p627
I0
sS'task.thisIndex'
p628
g92
sS'practice_Afirst.thisIndex'
p629
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p630
NsS'task.thisN'
p631
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g247
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p632
I0
sS'practice_trials_Afirst.thisIndex'
p633
g41
(g91
S'\x00\x00\x00\x00'
tRp634
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p635
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p636
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p637
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p638
NsS'practice_blocks.thisIndex'
p639
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p640
I25
sS'task.thisRepN'
p641
I0
sg72
g122
sS'practice_Afirst.thisN'
p642
I0
sS'practice_trials_Afirst.thisRepN'
p643
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p644
I0
sg26
F0.1030881404876709
sg67
g127
sg45
g12
sg23
F0.10344791412353516
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p645
I1
sg78
I3
sg79
I4
sa(dp646
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p647
I0
sS'task.thisIndex'
p648
g92
sS'practice_Afirst.thisIndex'
p649
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p650
NsS'task.thisN'
p651
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g204
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p652
I0
sS'practice_trials_Afirst.thisIndex'
p653
g41
(g91
S'\x02\x00\x00\x00'
tRp654
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p655
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p656
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p657
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p658
NsS'practice_blocks.thisIndex'
p659
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p660
I26
sS'task.thisRepN'
p661
I0
sg72
g122
sS'practice_Afirst.thisN'
p662
I0
sS'practice_trials_Afirst.thisRepN'
p663
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p664
I0
sg26
F0.1102910041809082
sg67
g127
sg45
g12
sg23
F0.11050796508789062
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p665
I2
sg78
I3
sg79
I4
sa(dp666
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p667
I0
sS'task.thisIndex'
p668
g92
sS'practice_Afirst.thisIndex'
p669
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p670
NsS'task.thisN'
p671
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g160
sg16
g431
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p672
I0
sS'practice_trials_Afirst.thisIndex'
p673
g41
(g91
S'\x03\x00\x00\x00'
tRp674
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p675
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p676
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p677
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p678
NsS'practice_blocks.thisIndex'
p679
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p680
I27
sS'task.thisRepN'
p681
I0
sg72
g122
sS'practice_Afirst.thisN'
p682
I0
sS'practice_trials_Afirst.thisRepN'
p683
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p684
I0
sg26
F0.10321903228759766
sg67
g127
sg45
g12
sg23
F0.10341501235961914
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p685
I3
sg78
I3
sg79
I4
sa(dp686
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p687
I0
sS'task.thisIndex'
p688
g92
sS'practice_Afirst.thisIndex'
p689
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p690
NsS'task.thisN'
p691
I0
sg63
g97
sg81
I1
sg64
g98
sg15
g182
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p692
I0
sS'practice_trials_Afirst.thisIndex'
p693
g41
(g91
S'\x00\x00\x00\x00'
tRp694
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p695
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p696
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p697
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p698
NsS'practice_blocks.thisIndex'
p699
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p700
I28
sS'task.thisRepN'
p701
I0
sg72
g122
sS'practice_Afirst.thisN'
p702
I0
sS'practice_trials_Afirst.thisRepN'
p703
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p704
I0
sg26
F0.10557079315185547
sg67
g127
sg45
g12
sg23
F0.1057591438293457
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p705
I0
sg78
I3
sg79
I4
sa(dp706
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p707
I0
sS'task.thisIndex'
p708
g92
sS'practice_Afirst.thisIndex'
p709
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p710
NsS'task.thisN'
p711
I0
sg63
g97
sg81
I2
sg64
g98
sg15
g182
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p712
I0
sS'practice_trials_Afirst.thisIndex'
p713
g41
(g91
S'\x01\x00\x00\x00'
tRp714
sg68
g105
sg20
g106
sg82
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p715
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p716
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p717
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p718
NsS'practice_blocks.thisIndex'
p719
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p720
I29
sS'task.thisRepN'
p721
I0
sg72
g122
sS'practice_Afirst.thisN'
p722
I0
sS'practice_trials_Afirst.thisRepN'
p723
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p724
I0
sg26
F0.10381984710693359
sg67
g127
sg45
g12
sg23
F0.10403108596801758
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p725
I1
sg78
I3
sg79
I4
sa(dp726
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p727
I0
sS'task.thisIndex'
p728
g92
sS'practice_Afirst.thisIndex'
p729
g94
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p730
NsS'task.thisN'
p731
I0
sg63
g97
sg81
I3
sg64
g98
sg15
g99
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p732
I0
sS'practice_trials_Afirst.thisIndex'
p733
g41
(g91
S'\x02\x00\x00\x00'
tRp734
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p735
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p736
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p737
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p738
NsS'practice_blocks.thisIndex'
p739
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p740
I30
sS'task.thisRepN'
p741
I0
sg72
g122
sS'practice_Afirst.thisN'
p742
I0
sS'practice_trials_Afirst.thisRepN'
p743
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p744
I0
sg26
F0.10572195053100586
sg67
g127
sg45
g12
sg23
F0.10589909553527832
sg69
g128
sg38
Vm
sg39
V1
sg83
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p745
I2
sg78
I3
sg79
I4
sa(dp746
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p747
I0
sS'task.thisIndex'
p748
g92
sS'practice_Afirst.thisIndex'
p749
g94
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p750
NsS'task.thisN'
p751
I0
sg63
g97
sg81
I4
sg64
g98
sg15
g160
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p752
I0
sS'practice_trials_Afirst.thisIndex'
p753
g41
(g91
S'\x03\x00\x00\x00'
tRp754
sg68
g105
sg20
g106
sg82
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p755
I0
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p756
I0
sg80
g114
sg19
g110
sS'task.thisTrialN'
p757
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p758
NsS'practice_blocks.thisIndex'
p759
g118
sg62
g119
sS'practice_trials_Afirst.thisN'
p760
I31
sS'task.thisRepN'
p761
I0
sg72
g122
sS'practice_Afirst.thisN'
p762
I0
sS'practice_trials_Afirst.thisRepN'
p763
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p764
I0
sg26
F0.10513401031494141
sg67
g127
sg45
g12
sg23
F0.10531187057495117
sg69
g128
sg38
Vm
sg39
V1
sg83
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p765
I3
sg78
I3
sg79
I4
sa(dp766
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p767
g92
sg40
g44
sS'task.thisN'
p768
I0
sS'practice_trials_B.thisIndex'
p769
g41
(g91
S'\x03\x00\x00\x00'
tRp770
sg28
I1
sVtrialType
p771
I4
sg64
g98
sg15
g349
sg32
F0.096014022827148438
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p772
I0
sg68
g105
sg20
g106
sVstimulus1_category
p773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p774
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p775
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p776
NsS'practice_blocks.thisIndex'
p777
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p778
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p779
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p780
I0
sS'task.thisRepN'
p781
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p783
I0
sg29
F0.096210002899169922
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp784
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p785
g92
sg40
g44
sS'task.thisN'
p786
I0
sS'practice_trials_B.thisIndex'
p787
g41
(g91
S'\x00\x00\x00\x00'
tRp788
sg28
I1
sg771
I1
sg64
g98
sg15
g247
sg32
F0.10636401176452637
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p789
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p790
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p791
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p792
NsS'practice_blocks.thisIndex'
p793
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p794
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p795
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p796
I1
sS'task.thisRepN'
p797
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p798
I1
sg29
F0.10665297508239746
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp799
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p800
g92
sg40
g44
sS'task.thisN'
p801
I0
sS'practice_trials_B.thisIndex'
p802
g41
(g91
S'\x01\x00\x00\x00'
tRp803
sg28
I1
sg771
I2
sg64
g98
sg15
g247
sg32
F0.10480690002441406
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p804
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p805
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p806
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p807
NsS'practice_blocks.thisIndex'
p808
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p809
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p810
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p811
I2
sS'task.thisRepN'
p812
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p813
I2
sg29
F0.10514092445373535
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp814
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p815
g92
sg40
g44
sS'task.thisN'
p816
I0
sS'practice_trials_B.thisIndex'
p817
g41
(g91
S'\x02\x00\x00\x00'
tRp818
sg28
I1
sg771
I3
sg64
g98
sg15
g204
sg32
F0.10465312004089355
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p819
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p820
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p821
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p822
NsS'practice_blocks.thisIndex'
p823
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p824
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p825
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p826
I3
sS'task.thisRepN'
p827
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p828
I3
sg29
F0.10475993156433105
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp829
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p830
g92
sg40
g44
sS'task.thisN'
p831
I0
sS'practice_trials_B.thisIndex'
p832
g41
(g91
S'\x03\x00\x00\x00'
tRp833
sg28
I1
sg771
I4
sg64
g98
sg15
g160
sg32
F0.10496091842651367
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p834
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p835
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p836
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p837
NsS'practice_blocks.thisIndex'
p838
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p839
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p840
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p841
I0
sS'task.thisRepN'
p842
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p843
I4
sg29
F0.10510611534118652
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp844
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p845
g92
sg40
g44
sS'task.thisN'
p846
I0
sS'practice_trials_B.thisIndex'
p847
g41
(g91
S'\x02\x00\x00\x00'
tRp848
sg28
I1
sg771
I3
sg64
g98
sg15
g160
sg32
F0.10777711868286133
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p849
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p850
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p851
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p852
NsS'practice_blocks.thisIndex'
p853
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p854
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p855
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p856
I1
sS'task.thisRepN'
p857
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p858
I5
sg29
F0.10820817947387695
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp859
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p860
g92
sg40
g44
sS'task.thisN'
p861
I0
sS'practice_trials_B.thisIndex'
p862
g41
(g91
S'\x00\x00\x00\x00'
tRp863
sg28
I1
sg771
I1
sg64
g98
sg15
g182
sg32
F0.10431504249572754
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p864
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p865
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p866
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p867
NsS'practice_blocks.thisIndex'
p868
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p869
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p870
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p871
I2
sS'task.thisRepN'
p872
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p873
I6
sg29
F0.1045069694519043
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp874
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p875
g92
sg40
g44
sS'task.thisN'
p876
I0
sS'practice_trials_B.thisIndex'
p877
g41
(g91
S'\x01\x00\x00\x00'
tRp878
sg28
I1
sg771
I2
sg64
g98
sg15
g182
sg32
F0.10555791854858398
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p879
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p880
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p881
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p882
NsS'practice_blocks.thisIndex'
p883
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p884
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p885
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p886
I3
sS'task.thisRepN'
p887
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p888
I7
sg29
F0.1057591438293457
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp889
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p890
g92
sg40
g44
sS'task.thisN'
p891
I0
sS'practice_trials_B.thisIndex'
p892
g41
(g91
S'\x03\x00\x00\x00'
tRp893
sg28
I1
sg771
I4
sg64
g98
sg15
g160
sg32
F0.097074031829833984
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p894
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p895
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p896
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p897
NsS'practice_blocks.thisIndex'
p898
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p899
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p900
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p901
I0
sS'task.thisRepN'
p902
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p903
I8
sg29
F0.097251176834106445
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp904
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p905
g92
sg40
g44
sS'task.thisN'
p906
I0
sS'practice_trials_B.thisIndex'
p907
g41
(g91
S'\x02\x00\x00\x00'
tRp908
sg28
I1
sg771
I3
sg64
g98
sg15
g99
sg32
F0.10410881042480469
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p909
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p910
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p911
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p912
NsS'practice_blocks.thisIndex'
p913
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p914
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p915
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p916
I1
sS'task.thisRepN'
p917
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p918
I9
sg29
F0.10439515113830566
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp919
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p920
g92
sg40
g44
sS'task.thisN'
p921
I0
sS'practice_trials_B.thisIndex'
p922
g41
(g91
S'\x00\x00\x00\x00'
tRp923
sg28
I1
sg771
I1
sg64
g98
sg15
g138
sg32
F0.1025240421295166
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p924
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p925
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p926
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p927
NsS'practice_blocks.thisIndex'
p928
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p929
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p930
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p931
I2
sS'task.thisRepN'
p932
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p933
I10
sg29
F0.10270881652832031
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp934
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p935
g92
sg40
g44
sS'task.thisN'
p936
I0
sS'practice_trials_B.thisIndex'
p937
g41
(g91
S'\x01\x00\x00\x00'
tRp938
sg28
I1
sg771
I2
sg64
g98
sg15
g288
sg32
F0.10405898094177246
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p939
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p940
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p941
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p942
NsS'practice_blocks.thisIndex'
p943
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p944
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p945
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p946
I3
sS'task.thisRepN'
p947
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p948
I11
sg29
F0.10439610481262207
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp949
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p950
g92
sg40
g44
sS'task.thisN'
p951
I0
sS'practice_trials_B.thisIndex'
p952
g41
(g91
S'\x00\x00\x00\x00'
tRp953
sg28
I1
sg771
I1
sg64
g98
sg15
g138
sg32
F0.1047060489654541
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p954
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p955
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p956
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p957
NsS'practice_blocks.thisIndex'
p958
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p959
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p960
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p961
I0
sS'task.thisRepN'
p962
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p963
I12
sg29
F0.10490703582763672
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp964
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p965
g92
sg40
g44
sS'task.thisN'
p966
I0
sS'practice_trials_B.thisIndex'
p967
g41
(g91
S'\x02\x00\x00\x00'
tRp968
sg28
I1
sg771
I3
sg64
g98
sg15
g99
sg32
F0.098417997360229492
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p969
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p970
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p971
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p972
NsS'practice_blocks.thisIndex'
p973
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p974
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p975
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p976
I1
sS'task.thisRepN'
p977
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p978
I13
sg29
F0.098868846893310547
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp979
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p980
g92
sg40
g44
sS'task.thisN'
p981
I0
sS'practice_trials_B.thisIndex'
p982
g41
(g91
S'\x03\x00\x00\x00'
tRp983
sg28
I1
sg771
I4
sg64
g98
sg15
g160
sg32
F0.13283610343933105
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p984
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p985
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p986
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p987
NsS'practice_blocks.thisIndex'
p988
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p989
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p990
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p991
I2
sS'task.thisRepN'
p992
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p993
I14
sg29
F0.13366603851318359
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp994
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p995
g92
sg40
g44
sS'task.thisN'
p996
I0
sS'practice_trials_B.thisIndex'
p997
g41
(g91
S'\x01\x00\x00\x00'
tRp998
sg28
I1
sg771
I2
sg64
g98
sg15
g288
sg32
F0.10379505157470703
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p999
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1000
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1001
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1002
NsS'practice_blocks.thisIndex'
p1003
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1004
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1005
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1006
I3
sS'task.thisRepN'
p1007
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1008
I15
sg29
F0.10463118553161621
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1009
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1010
g92
sg40
g44
sS'task.thisN'
p1011
I0
sS'practice_trials_B.thisIndex'
p1012
g41
(g91
S'\x02\x00\x00\x00'
tRp1013
sg28
I1
sg771
I3
sg64
g98
sg15
g99
sg32
F0.094747066497802734
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p1014
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1015
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1016
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1017
NsS'practice_blocks.thisIndex'
p1018
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1019
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1020
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1021
I0
sS'task.thisRepN'
p1022
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1023
I16
sg29
F0.095045804977416992
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1024
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1025
g92
sg40
g44
sS'task.thisN'
p1026
I0
sS'practice_trials_B.thisIndex'
p1027
g41
(g91
S'\x01\x00\x00\x00'
tRp1028
sg28
I1
sg771
I2
sg64
g98
sg15
g247
sg32
F0.10857486724853516
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p1029
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1030
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1031
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1032
NsS'practice_blocks.thisIndex'
p1033
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1034
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1035
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1036
I1
sS'task.thisRepN'
p1037
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1038
I17
sg29
F0.10879802703857422
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1039
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1040
g92
sg40
g44
sS'task.thisN'
p1041
I0
sS'practice_trials_B.thisIndex'
p1042
g41
(g91
S'\x03\x00\x00\x00'
tRp1043
sg28
I1
sg771
I4
sg64
g98
sg15
g99
sg32
F0.10212016105651855
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p1044
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1045
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1046
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1047
NsS'practice_blocks.thisIndex'
p1048
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1049
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1050
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1051
I2
sS'task.thisRepN'
p1052
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1053
I18
sg29
F0.10252618789672852
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1054
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1055
g92
sg40
g44
sS'task.thisN'
p1056
I0
sS'practice_trials_B.thisIndex'
p1057
g41
(g91
S'\x00\x00\x00\x00'
tRp1058
sg28
I1
sg771
I1
sg64
g98
sg15
g138
sg32
F0.10075902938842773
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p1059
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1060
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1061
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1062
NsS'practice_blocks.thisIndex'
p1063
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1064
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1065
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1066
I3
sS'task.thisRepN'
p1067
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1068
I19
sg29
F0.10160303115844727
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1069
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1070
g92
sg40
g44
sS'task.thisN'
p1071
I0
sS'practice_trials_B.thisIndex'
p1072
g41
(g91
S'\x01\x00\x00\x00'
tRp1073
sg28
I1
sg771
I2
sg64
g98
sg15
g247
sg32
F0.10303902626037598
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p1074
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1075
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1076
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1077
NsS'practice_blocks.thisIndex'
p1078
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1079
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1080
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1081
I0
sS'task.thisRepN'
p1082
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1083
I20
sg29
F0.10323905944824219
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1084
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1085
g92
sg40
g44
sS'task.thisN'
p1086
I0
sS'practice_trials_B.thisIndex'
p1087
g41
(g91
S'\x02\x00\x00\x00'
tRp1088
sg28
I1
sg771
I3
sg64
g98
sg15
g204
sg32
F0.10909509658813477
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p1089
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1090
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1091
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1092
NsS'practice_blocks.thisIndex'
p1093
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1094
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1095
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1096
I1
sS'task.thisRepN'
p1097
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1098
I21
sg29
F0.10937809944152832
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1099
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1100
g92
sg40
g44
sS'task.thisN'
p1101
I0
sS'practice_trials_B.thisIndex'
p1102
g41
(g91
S'\x03\x00\x00\x00'
tRp1103
sg28
I1
sg771
I4
sg64
g98
sg15
g349
sg32
F0.10699701309204102
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p1104
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1105
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1106
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1107
NsS'practice_blocks.thisIndex'
p1108
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1109
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1110
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1111
I2
sS'task.thisRepN'
p1112
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1113
I22
sg29
F0.10750293731689453
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1114
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1115
g92
sg40
g44
sS'task.thisN'
p1116
I0
sS'practice_trials_B.thisIndex'
p1117
g41
(g91
S'\x00\x00\x00\x00'
tRp1118
sg28
I1
sg771
I1
sg64
g98
sg15
g288
sg32
F0.19919180870056152
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p1119
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1120
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1121
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1122
NsS'practice_blocks.thisIndex'
p1123
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1124
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1125
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1126
I3
sS'task.thisRepN'
p1127
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1128
I23
sg29
F0.19937682151794434
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1129
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1130
g92
sg40
g44
sS'task.thisN'
p1131
I0
sS'practice_trials_B.thisIndex'
p1132
g41
(g91
S'\x01\x00\x00\x00'
tRp1133
sg28
I1
sg771
I2
sg64
g98
sg15
g288
sg32
F0.099340200424194336
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p1134
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1135
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1136
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1137
NsS'practice_blocks.thisIndex'
p1138
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1139
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1140
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1141
I0
sS'task.thisRepN'
p1142
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1143
I24
sg29
F0.099569797515869141
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1144
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1145
g92
sg40
g44
sS'task.thisN'
p1146
I0
sS'practice_trials_B.thisIndex'
p1147
g41
(g91
S'\x02\x00\x00\x00'
tRp1148
sg28
I1
sg771
I3
sg64
g98
sg15
g349
sg32
F0.099364042282104492
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p1149
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1150
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1151
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1152
NsS'practice_blocks.thisIndex'
p1153
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1154
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1155
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1156
I1
sS'task.thisRepN'
p1157
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1158
I25
sg29
F0.099575996398925781
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1159
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1160
g92
sg40
g44
sS'task.thisN'
p1161
I0
sS'practice_trials_B.thisIndex'
p1162
g41
(g91
S'\x00\x00\x00\x00'
tRp1163
sg28
I1
sg771
I1
sg64
g98
sg15
g138
sg32
F0.10761404037475586
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p1164
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1165
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1166
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1167
NsS'practice_blocks.thisIndex'
p1168
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1169
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1170
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1171
I2
sS'task.thisRepN'
p1172
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1173
I26
sg29
F0.10859203338623047
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1174
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1175
g92
sg40
g44
sS'task.thisN'
p1176
I0
sS'practice_trials_B.thisIndex'
p1177
g41
(g91
S'\x03\x00\x00\x00'
tRp1178
sg28
I1
sg771
I4
sg64
g98
sg15
g204
sg32
F0.10674285888671875
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p1179
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1180
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1181
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1182
NsS'practice_blocks.thisIndex'
p1183
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1184
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1185
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1186
I3
sS'task.thisRepN'
p1187
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1188
I27
sg29
F0.10731601715087891
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1189
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1190
g92
sg40
g44
sS'task.thisN'
p1191
I0
sS'practice_trials_B.thisIndex'
p1192
g41
(g91
S'\x03\x00\x00\x00'
tRp1193
sg28
I1
sg771
I4
sg64
g98
sg15
g204
sg32
F0.10641598701477051
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p1194
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1195
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1196
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1197
NsS'practice_blocks.thisIndex'
p1198
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1199
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1200
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1201
I0
sS'task.thisRepN'
p1202
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1203
I28
sg29
F0.10675692558288574
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1204
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1205
g92
sg40
g44
sS'task.thisN'
p1206
I0
sS'practice_trials_B.thisIndex'
p1207
g41
(g91
S'\x01\x00\x00\x00'
tRp1208
sg28
I1
sg771
I2
sg64
g98
sg15
g182
sg32
F0.098592042922973633
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p1209
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1210
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1211
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1212
NsS'practice_blocks.thisIndex'
p1213
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1214
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1215
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1216
I1
sS'task.thisRepN'
p1217
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1218
I29
sg29
F0.10146999359130859
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1219
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1220
g92
sg40
g44
sS'task.thisN'
p1221
I0
sS'practice_trials_B.thisIndex'
p1222
g41
(g91
S'\x02\x00\x00\x00'
tRp1223
sg28
I1
sg771
I3
sg64
g98
sg15
g349
sg32
F0.10596895217895508
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p1224
I0
sg68
g105
sg20
g106
sg773
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1225
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1226
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1227
NsS'practice_blocks.thisIndex'
p1228
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1229
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1230
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1231
I2
sS'task.thisRepN'
p1232
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1233
I30
sg29
F0.10616898536682129
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1234
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1235
g92
sg40
g44
sS'task.thisN'
p1236
I0
sS'practice_trials_B.thisIndex'
p1237
g41
(g91
S'\x00\x00\x00\x00'
tRp1238
sg28
I1
sg771
I1
sg64
g98
sg15
g182
sg32
F0.1085669994354248
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p1239
I0
sg68
g105
sg20
g106
sg773
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1240
I0
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1241
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1242
NsS'practice_blocks.thisIndex'
p1243
g118
sg62
g119
sS'practice_trials_B.thisRepN'
p1244
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1245
I0
sg67
g127
sS'practice_trials_B.thisTrialN'
p1246
I3
sS'task.thisRepN'
p1247
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg782
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1248
I31
sg29
F0.10982203483581543
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1249
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1250
I0
sS'task.thisIndex'
p1251
g92
sS'practice_Afirst.thisIndex'
p1252
g41
(g91
S'\x00\x00\x00\x00'
tRp1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1254
NsS'task.thisN'
p1255
I0
sg63
g97
sVtrialType
p1256
I1
sg64
g98
sg15
g182
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1257
I0
sS'practice_trials_Afirst.thisIndex'
p1258
g41
(g91
S'\x00\x00\x00\x00'
tRp1259
sg68
g105
sg20
g106
sVstimulus1_category
p1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1261
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1262
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1263
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1264
NsS'practice_blocks.thisIndex'
p1265
g41
(g91
S'\x00\x00\x00\x00'
tRp1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1267
I0
sS'task.thisRepN'
p1268
I0
sg72
g122
sS'practice_Afirst.thisN'
p1269
I0
sS'practice_trials_Afirst.thisRepN'
p1270
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1271
I0
sg26
F0.094412088394165039
sg67
g127
sg45
g12
sg23
F0.10263395309448242
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1273
I0
sg78
I3
sg79
I4
sa(dp1274
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1275
I0
sS'task.thisIndex'
p1276
g92
sS'practice_Afirst.thisIndex'
p1277
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1278
NsS'task.thisN'
p1279
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g99
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1280
I0
sS'practice_trials_Afirst.thisIndex'
p1281
g41
(g91
S'\x03\x00\x00\x00'
tRp1282
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1283
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1284
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1285
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1286
NsS'practice_blocks.thisIndex'
p1287
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1288
I1
sS'task.thisRepN'
p1289
I0
sg72
g122
sS'practice_Afirst.thisN'
p1290
I0
sS'practice_trials_Afirst.thisRepN'
p1291
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1292
I0
sg26
F0.096333026885986328
sg67
g127
sg45
g12
sg23
F0.097256898880004883
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1293
I1
sg78
I3
sg79
I4
sa(dp1294
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1295
I0
sS'task.thisIndex'
p1296
g92
sS'practice_Afirst.thisIndex'
p1297
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1298
NsS'task.thisN'
p1299
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g99
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1300
I0
sS'practice_trials_Afirst.thisIndex'
p1301
g41
(g91
S'\x02\x00\x00\x00'
tRp1302
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1303
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1304
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1305
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1306
NsS'practice_blocks.thisIndex'
p1307
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1308
I2
sS'task.thisRepN'
p1309
I0
sg72
g122
sS'practice_Afirst.thisN'
p1310
I0
sS'practice_trials_Afirst.thisRepN'
p1311
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1312
I0
sg26
F0.10133600234985352
sg67
g127
sg45
g12
sg23
F0.10447120666503906
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1313
I2
sg78
I3
sg79
I4
sa(dp1314
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1315
I0
sS'task.thisIndex'
p1316
g92
sS'practice_Afirst.thisIndex'
p1317
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1318
NsS'task.thisN'
p1319
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g247
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1320
I0
sS'practice_trials_Afirst.thisIndex'
p1321
g41
(g91
S'\x01\x00\x00\x00'
tRp1322
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1323
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1324
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1325
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1326
NsS'practice_blocks.thisIndex'
p1327
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1328
I3
sS'task.thisRepN'
p1329
I0
sg72
g122
sS'practice_Afirst.thisN'
p1330
I0
sS'practice_trials_Afirst.thisRepN'
p1331
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1332
I0
sg26
F0.087449073791503906
sg67
g127
sg45
g12
sg23
F0.093361854553222656
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1333
I3
sg78
I3
sg79
I4
sa(dp1334
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1335
I0
sS'task.thisIndex'
p1336
g92
sS'practice_Afirst.thisIndex'
p1337
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1338
NsS'task.thisN'
p1339
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g288
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1340
I0
sS'practice_trials_Afirst.thisIndex'
p1341
g41
(g91
S'\x00\x00\x00\x00'
tRp1342
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1343
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1344
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1345
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1346
NsS'practice_blocks.thisIndex'
p1347
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1348
I4
sS'task.thisRepN'
p1349
I0
sg72
g122
sS'practice_Afirst.thisN'
p1350
I0
sS'practice_trials_Afirst.thisRepN'
p1351
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1352
I0
sg26
F0.10873007774353027
sg67
g127
sg45
g12
sg23
F0.10904097557067871
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1353
I0
sg78
I3
sg79
I4
sa(dp1354
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1355
I0
sS'task.thisIndex'
p1356
g92
sS'practice_Afirst.thisIndex'
p1357
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1358
NsS'task.thisN'
p1359
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g99
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1360
I0
sS'practice_trials_Afirst.thisIndex'
p1361
g41
(g91
S'\x02\x00\x00\x00'
tRp1362
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1363
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1364
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1365
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1366
NsS'practice_blocks.thisIndex'
p1367
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1368
I5
sS'task.thisRepN'
p1369
I0
sg72
g122
sS'practice_Afirst.thisN'
p1370
I0
sS'practice_trials_Afirst.thisRepN'
p1371
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1372
I0
sg26
F0.10128498077392578
sg67
g127
sg45
g12
sg23
F0.10156607627868652
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1373
I1
sg78
I3
sg79
I4
sa(dp1374
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1375
I0
sS'task.thisIndex'
p1376
g92
sS'practice_Afirst.thisIndex'
p1377
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1378
NsS'task.thisN'
p1379
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g288
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1380
I0
sS'practice_trials_Afirst.thisIndex'
p1381
g41
(g91
S'\x01\x00\x00\x00'
tRp1382
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1383
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1384
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1385
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1386
NsS'practice_blocks.thisIndex'
p1387
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1388
I6
sS'task.thisRepN'
p1389
I0
sg72
g122
sS'practice_Afirst.thisN'
p1390
I0
sS'practice_trials_Afirst.thisRepN'
p1391
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1392
I0
sg26
F0.10680484771728516
sg67
g127
sg45
g12
sg23
F0.10711121559143066
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1393
I2
sg78
I3
sg79
I4
sa(dp1394
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1395
I0
sS'task.thisIndex'
p1396
g92
sS'practice_Afirst.thisIndex'
p1397
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1398
NsS'task.thisN'
p1399
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g160
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1400
I0
sS'practice_trials_Afirst.thisIndex'
p1401
g41
(g91
S'\x03\x00\x00\x00'
tRp1402
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1403
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1404
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1405
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1406
NsS'practice_blocks.thisIndex'
p1407
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1408
I7
sS'task.thisRepN'
p1409
I0
sg72
g122
sS'practice_Afirst.thisN'
p1410
I0
sS'practice_trials_Afirst.thisRepN'
p1411
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1412
I0
sg26
F0.10589098930358887
sg67
g127
sg45
g12
sg23
F0.10593199729919434
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1413
I3
sg78
I3
sg79
I4
sa(dp1414
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1415
I0
sS'task.thisIndex'
p1416
g92
sS'practice_Afirst.thisIndex'
p1417
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1418
NsS'task.thisN'
p1419
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g247
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1420
I0
sS'practice_trials_Afirst.thisIndex'
p1421
g41
(g91
S'\x00\x00\x00\x00'
tRp1422
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1423
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1424
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1425
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1426
NsS'practice_blocks.thisIndex'
p1427
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1428
I8
sS'task.thisRepN'
p1429
I0
sg72
g122
sS'practice_Afirst.thisN'
p1430
I0
sS'practice_trials_Afirst.thisRepN'
p1431
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1432
I0
sg26
F0.1081700325012207
sg67
g127
sg45
g12
sg23
F0.10833907127380371
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1433
I0
sg78
I3
sg79
I4
sa(dp1434
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1435
I0
sS'task.thisIndex'
p1436
g92
sS'practice_Afirst.thisIndex'
p1437
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1438
NsS'task.thisN'
p1439
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g247
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1440
I0
sS'practice_trials_Afirst.thisIndex'
p1441
g41
(g91
S'\x01\x00\x00\x00'
tRp1442
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1443
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1444
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1445
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1446
NsS'practice_blocks.thisIndex'
p1447
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1448
I9
sS'task.thisRepN'
p1449
I0
sg72
g122
sS'practice_Afirst.thisN'
p1450
I0
sS'practice_trials_Afirst.thisRepN'
p1451
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1452
I0
sg26
F0.10854411125183105
sg67
g127
sg45
g12
sg23
F0.10874581336975098
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1453
I1
sg78
I3
sg79
I4
sa(dp1454
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1455
I0
sS'task.thisIndex'
p1456
g92
sS'practice_Afirst.thisIndex'
p1457
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1458
NsS'task.thisN'
p1459
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g204
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1460
I0
sS'practice_trials_Afirst.thisIndex'
p1461
g41
(g91
S'\x03\x00\x00\x00'
tRp1462
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1463
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1464
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1465
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1466
NsS'practice_blocks.thisIndex'
p1467
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1468
I10
sS'task.thisRepN'
p1469
I0
sg72
g122
sS'practice_Afirst.thisN'
p1470
I0
sS'practice_trials_Afirst.thisRepN'
p1471
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1472
I0
sg26
F0.10851192474365234
sg67
g127
sg45
g12
sg23
F0.10885310173034668
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1473
I2
sg78
I3
sg79
I4
sa(dp1474
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1475
I0
sS'task.thisIndex'
p1476
g92
sS'practice_Afirst.thisIndex'
p1477
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1478
NsS'task.thisN'
p1479
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g204
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1480
I0
sS'practice_trials_Afirst.thisIndex'
p1481
g41
(g91
S'\x02\x00\x00\x00'
tRp1482
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1483
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1484
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1485
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1486
NsS'practice_blocks.thisIndex'
p1487
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1488
I11
sS'task.thisRepN'
p1489
I0
sg72
g122
sS'practice_Afirst.thisN'
p1490
I0
sS'practice_trials_Afirst.thisRepN'
p1491
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1492
I0
sg26
F0.10386991500854492
sg67
g127
sg45
g12
sg23
F0.10403895378112793
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1493
I3
sg78
I3
sg79
I4
sa(dp1494
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1495
I0
sS'task.thisIndex'
p1496
g92
sS'practice_Afirst.thisIndex'
p1497
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1498
NsS'task.thisN'
p1499
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g160
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1500
I0
sS'practice_trials_Afirst.thisIndex'
p1501
g41
(g91
S'\x03\x00\x00\x00'
tRp1502
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1503
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1504
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1505
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1506
NsS'practice_blocks.thisIndex'
p1507
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1508
I12
sS'task.thisRepN'
p1509
I0
sg72
g122
sS'practice_Afirst.thisN'
p1510
I0
sS'practice_trials_Afirst.thisRepN'
p1511
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1512
I0
sg26
F0.10674405097961426
sg67
g127
sg45
g12
sg23
F0.10693001747131348
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1513
I0
sg78
I3
sg79
I4
sa(dp1514
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1515
I0
sS'task.thisIndex'
p1516
g92
sS'practice_Afirst.thisIndex'
p1517
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1518
NsS'task.thisN'
p1519
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g138
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1520
I0
sS'practice_trials_Afirst.thisIndex'
p1521
g41
(g91
S'\x00\x00\x00\x00'
tRp1522
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1523
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1524
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1525
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1526
NsS'practice_blocks.thisIndex'
p1527
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1528
I13
sS'task.thisRepN'
p1529
I0
sg72
g122
sS'practice_Afirst.thisN'
p1530
I0
sS'practice_trials_Afirst.thisRepN'
p1531
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1532
I0
sg26
F0.1058650016784668
sg67
g127
sg45
g12
sg23
F0.10603713989257812
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1533
I1
sg78
I3
sg79
I4
sa(dp1534
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1535
I0
sS'task.thisIndex'
p1536
g92
sS'practice_Afirst.thisIndex'
p1537
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1538
NsS'task.thisN'
p1539
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g288
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1540
I0
sS'practice_trials_Afirst.thisIndex'
p1541
g41
(g91
S'\x01\x00\x00\x00'
tRp1542
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1543
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1544
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1545
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1546
NsS'practice_blocks.thisIndex'
p1547
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1548
I14
sS'task.thisRepN'
p1549
I0
sg72
g122
sS'practice_Afirst.thisN'
p1550
I0
sS'practice_trials_Afirst.thisRepN'
p1551
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1552
I0
sg26
F0.10359597206115723
sg67
g127
sg45
g12
sg23
F0.10387897491455078
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1553
I2
sg78
I3
sg79
I4
sa(dp1554
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1555
I0
sS'task.thisIndex'
p1556
g92
sS'practice_Afirst.thisIndex'
p1557
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1558
NsS'task.thisN'
p1559
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g204
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1560
I0
sS'practice_trials_Afirst.thisIndex'
p1561
g41
(g91
S'\x02\x00\x00\x00'
tRp1562
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1563
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1564
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1565
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1566
NsS'practice_blocks.thisIndex'
p1567
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1568
I15
sS'task.thisRepN'
p1569
I0
sg72
g122
sS'practice_Afirst.thisN'
p1570
I0
sS'practice_trials_Afirst.thisRepN'
p1571
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1572
I0
sg26
F0.098533868789672852
sg67
g127
sg45
g12
sg23
F0.098746061325073242
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1573
I3
sg78
I3
sg79
I4
sa(dp1574
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1575
I0
sS'task.thisIndex'
p1576
g92
sS'practice_Afirst.thisIndex'
p1577
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1578
NsS'task.thisN'
p1579
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g99
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1580
I0
sS'practice_trials_Afirst.thisIndex'
p1581
g41
(g91
S'\x03\x00\x00\x00'
tRp1582
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1583
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1584
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1585
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1586
NsS'practice_blocks.thisIndex'
p1587
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1588
I16
sS'task.thisRepN'
p1589
I0
sg72
g122
sS'practice_Afirst.thisN'
p1590
I0
sS'practice_trials_Afirst.thisRepN'
p1591
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1592
I0
sg26
F0.10798215866088867
sg67
g127
sg45
g12
sg23
F0.10815095901489258
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1593
I0
sg78
I3
sg79
I4
sa(dp1594
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1595
I0
sS'task.thisIndex'
p1596
g92
sS'practice_Afirst.thisIndex'
p1597
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1598
NsS'task.thisN'
p1599
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g160
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1600
I0
sS'practice_trials_Afirst.thisIndex'
p1601
g41
(g91
S'\x02\x00\x00\x00'
tRp1602
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1603
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1604
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1605
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1606
NsS'practice_blocks.thisIndex'
p1607
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1608
I17
sS'task.thisRepN'
p1609
I0
sg72
g122
sS'practice_Afirst.thisN'
p1610
I0
sS'practice_trials_Afirst.thisRepN'
p1611
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1612
I0
sg26
F0.10880208015441895
sg67
g127
sg45
g12
sg23
F0.10900402069091797
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1613
I1
sg78
I3
sg79
I4
sa(dp1614
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1615
I0
sS'task.thisIndex'
p1616
g92
sS'practice_Afirst.thisIndex'
p1617
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1618
NsS'task.thisN'
p1619
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g288
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1620
I0
sS'practice_trials_Afirst.thisIndex'
p1621
g41
(g91
S'\x00\x00\x00\x00'
tRp1622
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1623
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1624
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1625
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1626
NsS'practice_blocks.thisIndex'
p1627
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1628
I18
sS'task.thisRepN'
p1629
I0
sg72
g122
sS'practice_Afirst.thisN'
p1630
I0
sS'practice_trials_Afirst.thisRepN'
p1631
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1632
I0
sg26
F0.10539913177490234
sg67
g127
sg45
g12
sg23
F0.10573101043701172
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1633
I2
sg78
I3
sg79
I4
sa(dp1634
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1635
I0
sS'task.thisIndex'
p1636
g92
sS'practice_Afirst.thisIndex'
p1637
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1638
NsS'task.thisN'
p1639
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g182
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1640
I0
sS'practice_trials_Afirst.thisIndex'
p1641
g41
(g91
S'\x01\x00\x00\x00'
tRp1642
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1643
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1644
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1645
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1646
NsS'practice_blocks.thisIndex'
p1647
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1648
I19
sS'task.thisRepN'
p1649
I0
sg72
g122
sS'practice_Afirst.thisN'
p1650
I0
sS'practice_trials_Afirst.thisRepN'
p1651
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1652
I0
sg26
F0.10798096656799316
sg67
g127
sg45
g12
sg23
F0.10819196701049805
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1653
I3
sg78
I3
sg79
I4
sa(dp1654
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1655
I0
sS'task.thisIndex'
p1656
g92
sS'practice_Afirst.thisIndex'
p1657
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1658
NsS'task.thisN'
p1659
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g182
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1660
I0
sS'practice_trials_Afirst.thisIndex'
p1661
g41
(g91
S'\x01\x00\x00\x00'
tRp1662
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1663
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1664
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1665
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1666
NsS'practice_blocks.thisIndex'
p1667
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1668
I20
sS'task.thisRepN'
p1669
I0
sg72
g122
sS'practice_Afirst.thisN'
p1670
I0
sS'practice_trials_Afirst.thisRepN'
p1671
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1672
I0
sg26
F0.10737991333007812
sg67
g127
sg45
g12
sg23
F0.10759401321411133
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1673
I0
sg78
I3
sg79
I4
sa(dp1674
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1675
I0
sS'task.thisIndex'
p1676
g92
sS'practice_Afirst.thisIndex'
p1677
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1678
NsS'task.thisN'
p1679
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g349
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1680
I0
sS'practice_trials_Afirst.thisIndex'
p1681
g41
(g91
S'\x02\x00\x00\x00'
tRp1682
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1683
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1684
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1685
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1686
NsS'practice_blocks.thisIndex'
p1687
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1688
I21
sS'task.thisRepN'
p1689
I0
sg72
g122
sS'practice_Afirst.thisN'
p1690
I0
sS'practice_trials_Afirst.thisRepN'
p1691
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1692
I0
sg26
F0.1022789478302002
sg67
g127
sg45
g12
sg23
F0.10247802734375
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1693
I1
sg78
I3
sg79
I4
sa(dp1694
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1695
I0
sS'task.thisIndex'
p1696
g92
sS'practice_Afirst.thisIndex'
p1697
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1698
NsS'task.thisN'
p1699
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g349
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1700
I0
sS'practice_trials_Afirst.thisIndex'
p1701
g41
(g91
S'\x03\x00\x00\x00'
tRp1702
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1703
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1704
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1705
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1706
NsS'practice_blocks.thisIndex'
p1707
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1708
I22
sS'task.thisRepN'
p1709
I0
sg72
g122
sS'practice_Afirst.thisN'
p1710
I0
sS'practice_trials_Afirst.thisRepN'
p1711
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1712
I0
sg26
F0.10437202453613281
sg67
g127
sg45
g12
sg23
F0.10453915596008301
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1713
I2
sg78
I3
sg79
I4
sa(dp1714
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1715
I0
sS'task.thisIndex'
p1716
g92
sS'practice_Afirst.thisIndex'
p1717
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1718
NsS'task.thisN'
p1719
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g138
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1720
I0
sS'practice_trials_Afirst.thisIndex'
p1721
g41
(g91
S'\x00\x00\x00\x00'
tRp1722
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1723
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1724
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1725
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1726
NsS'practice_blocks.thisIndex'
p1727
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1728
I23
sS'task.thisRepN'
p1729
I0
sg72
g122
sS'practice_Afirst.thisN'
p1730
I0
sS'practice_trials_Afirst.thisRepN'
p1731
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1732
I0
sg26
F0.10462498664855957
sg67
g127
sg45
g12
sg23
F0.10485696792602539
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1733
I3
sg78
I3
sg79
I4
sa(dp1734
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1735
I0
sS'task.thisIndex'
p1736
g92
sS'practice_Afirst.thisIndex'
p1737
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1738
NsS'task.thisN'
p1739
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g349
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1740
I0
sS'practice_trials_Afirst.thisIndex'
p1741
g41
(g91
S'\x02\x00\x00\x00'
tRp1742
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1743
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1744
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1745
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1746
NsS'practice_blocks.thisIndex'
p1747
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1748
I24
sS'task.thisRepN'
p1749
I0
sg72
g122
sS'practice_Afirst.thisN'
p1750
I0
sS'practice_trials_Afirst.thisRepN'
p1751
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1752
I0
sg26
F0.10373306274414062
sg67
g127
sg45
g12
sg23
F0.10391712188720703
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1753
I0
sg78
I3
sg79
I4
sa(dp1754
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1755
I0
sS'task.thisIndex'
p1756
g92
sS'practice_Afirst.thisIndex'
p1757
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1758
NsS'task.thisN'
p1759
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g138
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1760
I0
sS'practice_trials_Afirst.thisIndex'
p1761
g41
(g91
S'\x00\x00\x00\x00'
tRp1762
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1763
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1764
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1765
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1766
NsS'practice_blocks.thisIndex'
p1767
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1768
I25
sS'task.thisRepN'
p1769
I0
sg72
g122
sS'practice_Afirst.thisN'
p1770
I0
sS'practice_trials_Afirst.thisRepN'
p1771
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1772
I0
sg26
F0.10217094421386719
sg67
g127
sg45
g12
sg23
F0.10237216949462891
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1773
I1
sg78
I3
sg79
I4
sa(dp1774
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1775
I0
sS'task.thisIndex'
p1776
g92
sS'practice_Afirst.thisIndex'
p1777
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1778
NsS'task.thisN'
p1779
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g349
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1780
I0
sS'practice_trials_Afirst.thisIndex'
p1781
g41
(g91
S'\x03\x00\x00\x00'
tRp1782
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1783
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1784
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1785
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1786
NsS'practice_blocks.thisIndex'
p1787
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1788
I26
sS'task.thisRepN'
p1789
I0
sg72
g122
sS'practice_Afirst.thisN'
p1790
I0
sS'practice_trials_Afirst.thisRepN'
p1791
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1792
I0
sg26
F0.098404884338378906
sg67
g127
sg45
g12
sg23
F0.098785877227783203
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1793
I2
sg78
I3
sg79
I4
sa(dp1794
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1795
I0
sS'task.thisIndex'
p1796
g92
sS'practice_Afirst.thisIndex'
p1797
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1798
NsS'task.thisN'
p1799
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g182
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1800
I0
sS'practice_trials_Afirst.thisIndex'
p1801
g41
(g91
S'\x01\x00\x00\x00'
tRp1802
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1803
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1804
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1805
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1806
NsS'practice_blocks.thisIndex'
p1807
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1808
I27
sS'task.thisRepN'
p1809
I0
sg72
g122
sS'practice_Afirst.thisN'
p1810
I0
sS'practice_trials_Afirst.thisRepN'
p1811
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1812
I0
sg26
F0.10233211517333984
sg67
g127
sg45
g12
sg23
F0.10260415077209473
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1813
I3
sg78
I3
sg79
I4
sa(dp1814
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1815
I0
sS'task.thisIndex'
p1816
g92
sS'practice_Afirst.thisIndex'
p1817
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1818
NsS'task.thisN'
p1819
I0
sg63
g97
sg1256
I4
sg64
g98
sg15
g204
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1820
I0
sS'practice_trials_Afirst.thisIndex'
p1821
g41
(g91
S'\x03\x00\x00\x00'
tRp1822
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1823
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1824
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1825
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1826
NsS'practice_blocks.thisIndex'
p1827
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1828
I28
sS'task.thisRepN'
p1829
I0
sg72
g122
sS'practice_Afirst.thisN'
p1830
I0
sS'practice_trials_Afirst.thisRepN'
p1831
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1832
I0
sg26
F0.099338054656982422
sg67
g127
sg45
g12
sg23
F0.099506855010986328
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1833
I0
sg78
I3
sg79
I4
sa(dp1834
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1835
I0
sS'task.thisIndex'
p1836
g92
sS'practice_Afirst.thisIndex'
p1837
g1253
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p1838
NsS'task.thisN'
p1839
I0
sg63
g97
sg1256
I1
sg64
g98
sg15
g247
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p1840
I0
sS'practice_trials_Afirst.thisIndex'
p1841
g41
(g91
S'\x00\x00\x00\x00'
tRp1842
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1843
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1844
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1845
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1846
NsS'practice_blocks.thisIndex'
p1847
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1848
I29
sS'task.thisRepN'
p1849
I0
sg72
g122
sS'practice_Afirst.thisN'
p1850
I0
sS'practice_trials_Afirst.thisRepN'
p1851
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1852
I0
sg26
F0.10451602935791016
sg67
g127
sg45
g12
sg23
F0.10494303703308105
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1853
I1
sg78
I3
sg79
I4
sa(dp1854
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1855
I0
sS'task.thisIndex'
p1856
g92
sS'practice_Afirst.thisIndex'
p1857
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1858
NsS'task.thisN'
p1859
I0
sg63
g97
sg1256
I3
sg64
g98
sg15
g160
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1860
I0
sS'practice_trials_Afirst.thisIndex'
p1861
g41
(g91
S'\x02\x00\x00\x00'
tRp1862
sg68
g105
sg20
g106
sg1260
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1863
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1864
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1865
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1866
NsS'practice_blocks.thisIndex'
p1867
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1868
I30
sS'task.thisRepN'
p1869
I0
sg72
g122
sS'practice_Afirst.thisN'
p1870
I0
sS'practice_trials_Afirst.thisRepN'
p1871
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1872
I0
sg26
F0.10306191444396973
sg67
g127
sg45
g12
sg23
F0.10379505157470703
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1873
I2
sg78
I3
sg79
I4
sa(dp1874
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p1875
I0
sS'task.thisIndex'
p1876
g92
sS'practice_Afirst.thisIndex'
p1877
g1253
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p1878
NsS'task.thisN'
p1879
I0
sg63
g97
sg1256
I2
sg64
g98
sg15
g138
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p1880
I0
sS'practice_trials_Afirst.thisIndex'
p1881
g41
(g91
S'\x01\x00\x00\x00'
tRp1882
sg68
g105
sg20
g106
sg1260
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1883
I1
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p1884
I1
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1885
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1886
NsS'practice_blocks.thisIndex'
p1887
g1266
sg62
g119
sS'practice_trials_Afirst.thisN'
p1888
I31
sS'task.thisRepN'
p1889
I0
sg72
g122
sS'practice_Afirst.thisN'
p1890
I0
sS'practice_trials_Afirst.thisRepN'
p1891
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p1892
I0
sg26
F0.099824905395507812
sg67
g127
sg45
g12
sg23
F0.10010790824890137
sg69
g128
sg38
Vm
sg39
V1
sg1272
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p1893
I3
sg78
I3
sg79
I4
sa(dp1894
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1895
g92
sg40
g44
sS'task.thisN'
p1896
I0
sS'practice_trials_B.thisIndex'
p1897
g41
(g91
S'\x01\x00\x00\x00'
tRp1898
sg28
I1
sVtrialType
p1899
I2
sg64
g98
sg15
g247
sg32
F0.1010589599609375
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p1900
I0
sg68
g105
sg20
g106
sVstimulus1_category
p1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1902
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1903
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1904
NsS'practice_blocks.thisIndex'
p1905
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1906
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1907
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1908
I0
sS'task.thisRepN'
p1909
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1911
I0
sg29
F0.10134220123291016
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1912
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1913
g92
sg40
g44
sS'task.thisN'
p1914
I0
sS'practice_trials_B.thisIndex'
p1915
g41
(g91
S'\x00\x00\x00\x00'
tRp1916
sg28
I1
sg1899
I1
sg64
g98
sg15
g182
sg32
F0.1020348072052002
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p1917
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1918
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1919
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1920
NsS'practice_blocks.thisIndex'
p1921
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1922
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1923
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1924
I1
sS'task.thisRepN'
p1925
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1926
I1
sg29
F0.1026759147644043
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1927
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1928
g92
sg40
g44
sS'task.thisN'
p1929
I0
sS'practice_trials_B.thisIndex'
p1930
g41
(g91
S'\x03\x00\x00\x00'
tRp1931
sg28
I1
sg1899
I4
sg64
g98
sg15
g99
sg32
F0.090402841567993164
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p1932
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1933
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1934
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1935
NsS'practice_blocks.thisIndex'
p1936
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1937
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1938
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1939
I2
sS'task.thisRepN'
p1940
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1941
I2
sg29
F0.090636968612670898
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1942
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1943
g92
sg40
g44
sS'task.thisN'
p1944
I0
sS'practice_trials_B.thisIndex'
p1945
g41
(g91
S'\x02\x00\x00\x00'
tRp1946
sg28
I1
sg1899
I3
sg64
g98
sg15
g349
sg32
F0.10735416412353516
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p1947
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1948
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1949
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1950
NsS'practice_blocks.thisIndex'
p1951
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1952
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1953
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1954
I3
sS'task.thisRepN'
p1955
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1956
I3
sg29
F0.10757017135620117
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1957
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1958
g92
sg40
g44
sS'task.thisN'
p1959
I0
sS'practice_trials_B.thisIndex'
p1960
g41
(g91
S'\x03\x00\x00\x00'
tRp1961
sg28
I1
sg1899
I4
sg64
g98
sg15
g160
sg32
F0.10731101036071777
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p1962
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1963
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1964
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1965
NsS'practice_blocks.thisIndex'
p1966
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1967
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1968
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1969
I0
sS'task.thisRepN'
p1970
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1971
I4
sg29
F0.10752081871032715
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp1972
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1973
g92
sg40
g44
sS'task.thisN'
p1974
I0
sS'practice_trials_B.thisIndex'
p1975
g41
(g91
S'\x01\x00\x00\x00'
tRp1976
sg28
I1
sg1899
I2
sg64
g98
sg15
g288
sg32
F0.10888195037841797
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p1977
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1978
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1979
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1980
NsS'practice_blocks.thisIndex'
p1981
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1982
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1983
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1984
I1
sS'task.thisRepN'
p1985
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p1986
I5
sg29
F0.10911083221435547
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp1987
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p1988
g92
sg40
g44
sS'task.thisN'
p1989
I0
sS'practice_trials_B.thisIndex'
p1990
g41
(g91
S'\x02\x00\x00\x00'
tRp1991
sg28
I1
sg1899
I3
sg64
g98
sg15
g349
sg32
F0.10922098159790039
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p1992
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p1993
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p1994
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p1995
NsS'practice_blocks.thisIndex'
p1996
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p1997
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p1998
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p1999
I2
sS'task.thisRepN'
p2000
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2001
I6
sg29
F0.10948705673217773
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2002
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2003
g92
sg40
g44
sS'task.thisN'
p2004
I0
sS'practice_trials_B.thisIndex'
p2005
g41
(g91
S'\x00\x00\x00\x00'
tRp2006
sg28
I1
sg1899
I1
sg64
g98
sg15
g288
sg32
F0.096802949905395508
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p2007
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2008
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2009
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2010
NsS'practice_blocks.thisIndex'
p2011
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2012
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2013
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2014
I3
sS'task.thisRepN'
p2015
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2016
I7
sg29
F0.096923828125
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2017
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2018
g92
sg40
g44
sS'task.thisN'
p2019
I0
sS'practice_trials_B.thisIndex'
p2020
g41
(g91
S'\x02\x00\x00\x00'
tRp2021
sg28
I1
sg1899
I3
sg64
g98
sg15
g160
sg32
F0.10668587684631348
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p2022
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2023
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2024
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2025
NsS'practice_blocks.thisIndex'
p2026
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2027
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2028
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2029
I0
sS'task.thisRepN'
p2030
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2031
I8
sg29
F0.10626912117004395
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2032
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2033
g92
sg40
g44
sS'task.thisN'
p2034
I0
sS'practice_trials_B.thisIndex'
p2035
g41
(g91
S'\x00\x00\x00\x00'
tRp2036
sg28
I1
sg1899
I1
sg64
g98
sg15
g182
sg32
F0.10285711288452148
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p2037
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2038
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2039
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2040
NsS'practice_blocks.thisIndex'
p2041
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2042
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2043
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2044
I1
sS'task.thisRepN'
p2045
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2046
I9
sg29
F0.1030280590057373
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2047
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2048
g92
sg40
g44
sS'task.thisN'
p2049
I0
sS'practice_trials_B.thisIndex'
p2050
g41
(g91
S'\x01\x00\x00\x00'
tRp2051
sg28
I1
sg1899
I2
sg64
g98
sg15
g138
sg32
F0.10205411911010742
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p2052
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2053
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2054
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2055
NsS'practice_blocks.thisIndex'
p2056
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2057
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2058
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2059
I2
sS'task.thisRepN'
p2060
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2061
I10
sg29
F0.10225081443786621
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2062
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2063
g92
sg40
g44
sS'task.thisN'
p2064
I0
sS'practice_trials_B.thisIndex'
p2065
g41
(g91
S'\x03\x00\x00\x00'
tRp2066
sg28
I1
sg1899
I4
sg64
g98
sg15
g349
sg32
F0.10094785690307617
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p2067
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2068
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2069
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2070
NsS'practice_blocks.thisIndex'
p2071
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2072
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2073
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2074
I3
sS'task.thisRepN'
p2075
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2076
I11
sg29
F0.10112500190734863
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2077
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2078
g92
sg40
g44
sS'task.thisN'
p2079
I0
sS'practice_trials_B.thisIndex'
p2080
g41
(g91
S'\x03\x00\x00\x00'
tRp2081
sg28
I1
sg1899
I4
sg64
g98
sg15
g204
sg32
F0.10278820991516113
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p2082
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2083
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2084
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2085
NsS'practice_blocks.thisIndex'
p2086
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2087
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2088
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2089
I0
sS'task.thisRepN'
p2090
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2091
I12
sg29
F0.10313987731933594
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2092
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2093
g92
sg40
g44
sS'task.thisN'
p2094
I0
sS'practice_trials_B.thisIndex'
p2095
g41
(g91
S'\x01\x00\x00\x00'
tRp2096
sg28
I1
sg1899
I2
sg64
g98
sg15
g138
sg32
F0.10015487670898438
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p2097
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2098
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2099
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2100
NsS'practice_blocks.thisIndex'
p2101
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2102
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2103
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2104
I1
sS'task.thisRepN'
p2105
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2106
I13
sg29
F0.10033082962036133
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2107
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2108
g92
sg40
g44
sS'task.thisN'
p2109
I0
sS'practice_trials_B.thisIndex'
p2110
g41
(g91
S'\x02\x00\x00\x00'
tRp2111
sg28
I1
sg1899
I3
sg64
g98
sg15
g349
sg32
F0.10627484321594238
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p2112
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2113
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2114
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2115
NsS'practice_blocks.thisIndex'
p2116
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2117
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2118
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2119
I2
sS'task.thisRepN'
p2120
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2121
I14
sg29
F0.10648202896118164
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2122
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2123
g92
sg40
g44
sS'task.thisN'
p2124
I0
sS'practice_trials_B.thisIndex'
p2125
g41
(g91
S'\x00\x00\x00\x00'
tRp2126
sg28
I1
sg1899
I1
sg64
g98
sg15
g247
sg32
F0.10466194152832031
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p2127
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2128
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2129
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2130
NsS'practice_blocks.thisIndex'
p2131
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2132
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2133
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2134
I3
sS'task.thisRepN'
p2135
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2136
I15
sg29
F0.10485982894897461
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2137
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2138
g92
sg40
g44
sS'task.thisN'
p2139
I0
sS'practice_trials_B.thisIndex'
p2140
g41
(g91
S'\x02\x00\x00\x00'
tRp2141
sg28
I1
sg1899
I3
sg64
g98
sg15
g99
sg32
F0.10518693923950195
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p2142
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2143
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2144
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2145
NsS'practice_blocks.thisIndex'
p2146
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2147
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2148
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2149
I0
sS'task.thisRepN'
p2150
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2151
I16
sg29
F0.10567998886108398
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2152
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2153
g92
sg40
g44
sS'task.thisN'
p2154
I0
sS'practice_trials_B.thisIndex'
p2155
g41
(g91
S'\x00\x00\x00\x00'
tRp2156
sg28
I1
sg1899
I1
sg64
g98
sg15
g138
sg32
F0.10559415817260742
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p2157
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2158
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2159
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2160
NsS'practice_blocks.thisIndex'
p2161
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2162
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2163
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2164
I1
sS'task.thisRepN'
p2165
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2166
I17
sg29
F0.10574197769165039
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2167
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2168
g92
sg40
g44
sS'task.thisN'
p2169
I0
sS'practice_trials_B.thisIndex'
p2170
g41
(g91
S'\x03\x00\x00\x00'
tRp2171
sg28
I1
sg1899
I4
sg64
g98
sg15
g99
sg32
F0.10608005523681641
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p2172
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2173
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2174
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2175
NsS'practice_blocks.thisIndex'
p2176
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2177
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2178
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2179
I2
sS'task.thisRepN'
p2180
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2181
I18
sg29
F0.10627913475036621
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2182
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2183
g92
sg40
g44
sS'task.thisN'
p2184
I0
sS'practice_trials_B.thisIndex'
p2185
g41
(g91
S'\x01\x00\x00\x00'
tRp2186
sg28
I1
sg1899
I2
sg64
g98
sg15
g182
sg32
F0.10577297210693359
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p2187
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2188
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2189
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2190
NsS'practice_blocks.thisIndex'
p2191
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2192
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2193
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2194
I3
sS'task.thisRepN'
p2195
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2196
I19
sg29
F0.10598301887512207
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2197
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2198
g92
sg40
g44
sS'task.thisN'
p2199
I0
sS'practice_trials_B.thisIndex'
p2200
g41
(g91
S'\x02\x00\x00\x00'
tRp2201
sg28
I1
sg1899
I3
sg64
g98
sg15
g204
sg32
F0.10873198509216309
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p2202
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2203
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2204
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2205
NsS'practice_blocks.thisIndex'
p2206
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2207
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2208
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2209
I0
sS'task.thisRepN'
p2210
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2211
I20
sg29
F0.10894298553466797
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2212
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2213
g92
sg40
g44
sS'task.thisN'
p2214
I0
sS'practice_trials_B.thisIndex'
p2215
g41
(g91
S'\x00\x00\x00\x00'
tRp2216
sg28
I1
sg1899
I1
sg64
g98
sg15
g247
sg32
F0.10408401489257812
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p2217
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2218
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2219
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2220
NsS'practice_blocks.thisIndex'
p2221
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2222
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2223
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2224
I1
sS'task.thisRepN'
p2225
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2226
I21
sg29
F0.10427403450012207
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2227
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2228
g92
sg40
g44
sS'task.thisN'
p2229
I0
sS'practice_trials_B.thisIndex'
p2230
g41
(g91
S'\x03\x00\x00\x00'
tRp2231
sg28
I1
sg1899
I4
sg64
g98
sg15
g204
sg32
F0.098816871643066406
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p2232
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2233
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2234
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2235
NsS'practice_blocks.thisIndex'
p2236
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2237
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2238
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2239
I2
sS'task.thisRepN'
p2240
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2241
I22
sg29
F0.099016189575195312
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2242
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2243
g92
sg40
g44
sS'task.thisN'
p2244
I0
sS'practice_trials_B.thisIndex'
p2245
g41
(g91
S'\x01\x00\x00\x00'
tRp2246
sg28
I1
sg1899
I2
sg64
g98
sg15
g182
sg32
F0.099096059799194336
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p2247
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2248
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2249
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2250
NsS'practice_blocks.thisIndex'
p2251
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2252
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2253
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2254
I3
sS'task.thisRepN'
p2255
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2256
I23
sg29
F0.099246025085449219
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2257
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2258
g92
sg40
g44
sS'task.thisN'
p2259
I0
sS'practice_trials_B.thisIndex'
p2260
g41
(g91
S'\x03\x00\x00\x00'
tRp2261
sg28
I1
sg1899
I4
sg64
g98
sg15
g160
sg32
F0.10793900489807129
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p2262
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2263
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2264
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2265
NsS'practice_blocks.thisIndex'
p2266
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2267
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2268
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2269
I0
sS'task.thisRepN'
p2270
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2271
I24
sg29
F0.10817790031433105
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2272
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2273
g92
sg40
g44
sS'task.thisN'
p2274
I0
sS'practice_trials_B.thisIndex'
p2275
g41
(g91
S'\x00\x00\x00\x00'
tRp2276
sg28
I1
sg1899
I1
sg64
g98
sg15
g288
sg32
F0.10397195816040039
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p2277
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2278
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2279
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2280
NsS'practice_blocks.thisIndex'
p2281
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2282
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2283
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2284
I1
sS'task.thisRepN'
p2285
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2286
I25
sg29
F0.10417580604553223
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2287
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2288
g92
sg40
g44
sS'task.thisN'
p2289
I0
sS'practice_trials_B.thisIndex'
p2290
g41
(g91
S'\x02\x00\x00\x00'
tRp2291
sg28
I1
sg1899
I3
sg64
g98
sg15
g99
sg32
F0.10257601737976074
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p2292
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2293
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2294
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2295
NsS'practice_blocks.thisIndex'
p2296
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2297
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2298
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2299
I2
sS'task.thisRepN'
p2300
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2301
I26
sg29
F0.10280704498291016
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2302
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2303
g92
sg40
g44
sS'task.thisN'
p2304
I0
sS'practice_trials_B.thisIndex'
p2305
g41
(g91
S'\x01\x00\x00\x00'
tRp2306
sg28
I1
sg1899
I2
sg64
g98
sg15
g288
sg32
F0.10352396965026855
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p2307
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2308
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2309
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2310
NsS'practice_blocks.thisIndex'
p2311
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2312
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2313
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2314
I3
sS'task.thisRepN'
p2315
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2316
I27
sg29
F0.10379314422607422
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2317
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2318
g92
sg40
g44
sS'task.thisN'
p2319
I0
sS'practice_trials_B.thisIndex'
p2320
g41
(g91
S'\x02\x00\x00\x00'
tRp2321
sg28
I1
sg1899
I3
sg64
g98
sg15
g160
sg32
F0.10969185829162598
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p2322
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2323
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2324
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2325
NsS'practice_blocks.thisIndex'
p2326
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2327
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2328
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2329
I0
sS'task.thisRepN'
p2330
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2331
I28
sg29
F0.10992097854614258
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2332
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2333
g92
sg40
g44
sS'task.thisN'
p2334
I0
sS'practice_trials_B.thisIndex'
p2335
g41
(g91
S'\x03\x00\x00\x00'
tRp2336
sg28
I1
sg1899
I4
sg64
g98
sg15
g204
sg32
F0.097487926483154297
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p2337
I0
sg68
g105
sg20
g106
sg1901
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2338
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2339
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2340
NsS'practice_blocks.thisIndex'
p2341
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2342
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2343
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2344
I1
sS'task.thisRepN'
p2345
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2346
I29
sg29
F0.098913908004760742
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2347
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2348
g92
sg40
g44
sS'task.thisN'
p2349
I0
sS'practice_trials_B.thisIndex'
p2350
g41
(g91
S'\x00\x00\x00\x00'
tRp2351
sg28
I1
sg1899
I1
sg64
g98
sg15
g138
sg32
F0.10016703605651855
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p2352
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2353
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2354
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2355
NsS'practice_blocks.thisIndex'
p2356
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2357
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2358
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2359
I2
sS'task.thisRepN'
p2360
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2361
I30
sg29
F0.10045981407165527
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp2362
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p2363
g92
sg40
g44
sS'task.thisN'
p2364
I0
sS'practice_trials_B.thisIndex'
p2365
g41
(g91
S'\x01\x00\x00\x00'
tRp2366
sg28
I1
sg1899
I2
sg64
g98
sg15
g247
sg32
F0.10110306739807129
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p2367
I0
sg68
g105
sg20
g106
sg1901
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2368
I1
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2369
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2370
NsS'practice_blocks.thisIndex'
p2371
g1266
sg62
g119
sS'practice_trials_B.thisRepN'
p2372
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p2373
I1
sg67
g127
sS'practice_trials_B.thisTrialN'
p2374
I3
sS'task.thisRepN'
p2375
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg1910
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p2376
I31
sg29
F0.1012568473815918
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp2377
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2378
I0
sS'task.thisIndex'
p2379
g92
sS'practice_Afirst.thisIndex'
p2380
g41
(g91
S'\x00\x00\x00\x00'
tRp2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2382
NsS'task.thisN'
p2383
I0
sg63
g97
sVtrialType
p2384
I4
sg64
g98
sg15
g349
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2385
I0
sS'practice_trials_Afirst.thisIndex'
p2386
g41
(g91
S'\x03\x00\x00\x00'
tRp2387
sg68
g105
sg20
g106
sVstimulus1_category
p2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2389
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2390
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2391
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2392
NsS'practice_blocks.thisIndex'
p2393
g41
(g91
S'\x00\x00\x00\x00'
tRp2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2395
I0
sS'task.thisRepN'
p2396
I0
sg72
g122
sS'practice_Afirst.thisN'
p2397
I0
sS'practice_trials_Afirst.thisRepN'
p2398
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2399
I0
sg26
F0.10096383094787598
sg67
g127
sg45
g12
sg23
F0.10119509696960449
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2401
I0
sg78
I3
sg79
I4
sa(dp2402
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2403
I0
sS'task.thisIndex'
p2404
g92
sS'practice_Afirst.thisIndex'
p2405
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2406
NsS'task.thisN'
p2407
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g288
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2408
I0
sS'practice_trials_Afirst.thisIndex'
p2409
g41
(g91
S'\x01\x00\x00\x00'
tRp2410
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2411
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2412
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2413
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2414
NsS'practice_blocks.thisIndex'
p2415
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2416
I1
sS'task.thisRepN'
p2417
I0
sg72
g122
sS'practice_Afirst.thisN'
p2418
I0
sS'practice_trials_Afirst.thisRepN'
p2419
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2420
I0
sg26
F0.10034489631652832
sg67
g127
sg45
g12
sg23
F0.10065221786499023
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2421
I1
sg78
I3
sg79
I4
sa(dp2422
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2423
I0
sS'task.thisIndex'
p2424
g92
sS'practice_Afirst.thisIndex'
p2425
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2426
NsS'task.thisN'
p2427
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g160
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2428
I0
sS'practice_trials_Afirst.thisIndex'
p2429
g41
(g91
S'\x02\x00\x00\x00'
tRp2430
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2431
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2432
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2433
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2434
NsS'practice_blocks.thisIndex'
p2435
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2436
I2
sS'task.thisRepN'
p2437
I0
sg72
g122
sS'practice_Afirst.thisN'
p2438
I0
sS'practice_trials_Afirst.thisRepN'
p2439
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2440
I0
sg26
F0.1075279712677002
sg67
g127
sg45
g12
sg23
F0.10783720016479492
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2441
I2
sg78
I3
sg79
I4
sa(dp2442
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2443
I0
sS'task.thisIndex'
p2444
g92
sS'practice_Afirst.thisIndex'
p2445
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2446
NsS'task.thisN'
p2447
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g247
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2448
I0
sS'practice_trials_Afirst.thisIndex'
p2449
g41
(g91
S'\x00\x00\x00\x00'
tRp2450
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2451
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2452
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2453
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2454
NsS'practice_blocks.thisIndex'
p2455
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2456
I3
sS'task.thisRepN'
p2457
I0
sg72
g122
sS'practice_Afirst.thisN'
p2458
I0
sS'practice_trials_Afirst.thisRepN'
p2459
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2460
I0
sg26
F0.10533499717712402
sg67
g127
sg45
g12
sg23
F0.10547709465026855
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2461
I3
sg78
I3
sg79
I4
sa(dp2462
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2463
I0
sS'task.thisIndex'
p2464
g92
sS'practice_Afirst.thisIndex'
p2465
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2466
NsS'task.thisN'
p2467
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g349
sg16
g431
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2468
I0
sS'practice_trials_Afirst.thisIndex'
p2469
g41
(g91
S'\x03\x00\x00\x00'
tRp2470
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2471
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2472
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2473
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2474
NsS'practice_blocks.thisIndex'
p2475
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2476
I4
sS'task.thisRepN'
p2477
I0
sg72
g122
sS'practice_Afirst.thisN'
p2478
I0
sS'practice_trials_Afirst.thisRepN'
p2479
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2480
I0
sg26
F0.1063380241394043
sg67
g127
sg45
g12
sg23
F0.10644102096557617
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2481
I0
sg78
I3
sg79
I4
sa(dp2482
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2483
I0
sS'task.thisIndex'
p2484
g92
sS'practice_Afirst.thisIndex'
p2485
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2486
NsS'task.thisN'
p2487
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g182
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2488
I0
sS'practice_trials_Afirst.thisIndex'
p2489
g41
(g91
S'\x01\x00\x00\x00'
tRp2490
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2491
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2492
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2493
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2494
NsS'practice_blocks.thisIndex'
p2495
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2496
I5
sS'task.thisRepN'
p2497
I0
sg72
g122
sS'practice_Afirst.thisN'
p2498
I0
sS'practice_trials_Afirst.thisRepN'
p2499
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2500
I0
sg26
F0.10678291320800781
sg67
g127
sg45
g12
sg23
F0.10695099830627441
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2501
I1
sg78
I3
sg79
I4
sa(dp2502
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2503
I0
sS'task.thisIndex'
p2504
g92
sS'practice_Afirst.thisIndex'
p2505
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2506
NsS'task.thisN'
p2507
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g138
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2508
I0
sS'practice_trials_Afirst.thisIndex'
p2509
g41
(g91
S'\x00\x00\x00\x00'
tRp2510
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2511
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2512
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2513
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2514
NsS'practice_blocks.thisIndex'
p2515
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2516
I6
sS'task.thisRepN'
p2517
I0
sg72
g122
sS'practice_Afirst.thisN'
p2518
I0
sS'practice_trials_Afirst.thisRepN'
p2519
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2520
I0
sg26
F0.09879302978515625
sg67
g127
sg45
g12
sg23
F0.099086999893188477
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2521
I2
sg78
I3
sg79
I4
sa(dp2522
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2523
I0
sS'task.thisIndex'
p2524
g92
sS'practice_Afirst.thisIndex'
p2525
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2526
NsS'task.thisN'
p2527
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g204
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2528
I0
sS'practice_trials_Afirst.thisIndex'
p2529
g41
(g91
S'\x02\x00\x00\x00'
tRp2530
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2531
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2532
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2533
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2534
NsS'practice_blocks.thisIndex'
p2535
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2536
I7
sS'task.thisRepN'
p2537
I0
sg72
g122
sS'practice_Afirst.thisN'
p2538
I0
sS'practice_trials_Afirst.thisRepN'
p2539
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2540
I0
sg26
F0.10330009460449219
sg67
g127
sg45
g12
sg23
F0.10350203514099121
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2541
I3
sg78
I3
sg79
I4
sa(dp2542
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2543
I0
sS'task.thisIndex'
p2544
g92
sS'practice_Afirst.thisIndex'
p2545
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2546
NsS'task.thisN'
p2547
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g138
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2548
I0
sS'practice_trials_Afirst.thisIndex'
p2549
g41
(g91
S'\x00\x00\x00\x00'
tRp2550
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2551
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2552
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2553
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2554
NsS'practice_blocks.thisIndex'
p2555
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2556
I8
sS'task.thisRepN'
p2557
I0
sg72
g122
sS'practice_Afirst.thisN'
p2558
I0
sS'practice_trials_Afirst.thisRepN'
p2559
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2560
I0
sg26
F0.099779844284057617
sg67
g127
sg45
g12
sg23
F0.099925041198730469
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2561
I0
sg78
I3
sg79
I4
sa(dp2562
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2563
I0
sS'task.thisIndex'
p2564
g92
sS'practice_Afirst.thisIndex'
p2565
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2566
NsS'task.thisN'
p2567
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g160
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2568
I0
sS'practice_trials_Afirst.thisIndex'
p2569
g41
(g91
S'\x02\x00\x00\x00'
tRp2570
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2571
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2572
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2573
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2574
NsS'practice_blocks.thisIndex'
p2575
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2576
I9
sS'task.thisRepN'
p2577
I0
sg72
g122
sS'practice_Afirst.thisN'
p2578
I0
sS'practice_trials_Afirst.thisRepN'
p2579
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2580
I0
sg26
F0.10414791107177734
sg67
g127
sg45
g12
sg23
F0.10428285598754883
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2581
I1
sg78
I3
sg79
I4
sa(dp2582
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2583
I0
sS'task.thisIndex'
p2584
g92
sS'practice_Afirst.thisIndex'
p2585
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2586
NsS'task.thisN'
p2587
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g160
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2588
I0
sS'practice_trials_Afirst.thisIndex'
p2589
g41
(g91
S'\x03\x00\x00\x00'
tRp2590
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2591
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2592
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2593
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2594
NsS'practice_blocks.thisIndex'
p2595
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2596
I10
sS'task.thisRepN'
p2597
I0
sg72
g122
sS'practice_Afirst.thisN'
p2598
I0
sS'practice_trials_Afirst.thisRepN'
p2599
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2600
I0
sg26
F0.10738205909729004
sg67
g127
sg45
g12
sg23
F0.1075901985168457
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2601
I2
sg78
I3
sg79
I4
sa(dp2602
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2603
I0
sS'task.thisIndex'
p2604
g92
sS'practice_Afirst.thisIndex'
p2605
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2606
NsS'task.thisN'
p2607
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g138
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2608
I0
sS'practice_trials_Afirst.thisIndex'
p2609
g41
(g91
S'\x01\x00\x00\x00'
tRp2610
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2611
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2612
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2613
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2614
NsS'practice_blocks.thisIndex'
p2615
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2616
I11
sS'task.thisRepN'
p2617
I0
sg72
g122
sS'practice_Afirst.thisN'
p2618
I0
sS'practice_trials_Afirst.thisRepN'
p2619
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2620
I0
sg26
F0.098633050918579102
sg67
g127
sg45
g12
sg23
F0.098870038986206055
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2621
I3
sg78
I3
sg79
I4
sa(dp2622
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2623
I0
sS'task.thisIndex'
p2624
g92
sS'practice_Afirst.thisIndex'
p2625
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2626
NsS'task.thisN'
p2627
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g204
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2628
I0
sS'practice_trials_Afirst.thisIndex'
p2629
g41
(g91
S'\x02\x00\x00\x00'
tRp2630
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2631
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2632
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2633
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2634
NsS'practice_blocks.thisIndex'
p2635
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2636
I12
sS'task.thisRepN'
p2637
I0
sg72
g122
sS'practice_Afirst.thisN'
p2638
I0
sS'practice_trials_Afirst.thisRepN'
p2639
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2640
I0
sg26
F0.10978817939758301
sg67
g127
sg45
g12
sg23
F0.11120390892028809
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2641
I0
sg78
I3
sg79
I4
sa(dp2642
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2643
I0
sS'task.thisIndex'
p2644
g92
sS'practice_Afirst.thisIndex'
p2645
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2646
NsS'task.thisN'
p2647
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g288
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2648
I0
sS'practice_trials_Afirst.thisIndex'
p2649
g41
(g91
S'\x01\x00\x00\x00'
tRp2650
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2651
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2652
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2653
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2654
NsS'practice_blocks.thisIndex'
p2655
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2656
I13
sS'task.thisRepN'
p2657
I0
sg72
g122
sS'practice_Afirst.thisN'
p2658
I0
sS'practice_trials_Afirst.thisRepN'
p2659
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2660
I0
sg26
F0.10350298881530762
sg67
g127
sg45
g12
sg23
F0.10373616218566895
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2661
I1
sg78
I3
sg79
I4
sa(dp2662
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2663
I0
sS'task.thisIndex'
p2664
g92
sS'practice_Afirst.thisIndex'
p2665
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2666
NsS'task.thisN'
p2667
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g247
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2668
I0
sS'practice_trials_Afirst.thisIndex'
p2669
g41
(g91
S'\x00\x00\x00\x00'
tRp2670
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2671
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2672
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2673
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2674
NsS'practice_blocks.thisIndex'
p2675
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2676
I14
sS'task.thisRepN'
p2677
I0
sg72
g122
sS'practice_Afirst.thisN'
p2678
I0
sS'practice_trials_Afirst.thisRepN'
p2679
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2680
I0
sg26
F0.098329067230224609
sg67
g127
sg45
g12
sg23
F0.0985260009765625
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2681
I2
sg78
I3
sg79
I4
sa(dp2682
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2683
I0
sS'task.thisIndex'
p2684
g92
sS'practice_Afirst.thisIndex'
p2685
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2686
NsS'task.thisN'
p2687
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g349
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2688
I0
sS'practice_trials_Afirst.thisIndex'
p2689
g41
(g91
S'\x03\x00\x00\x00'
tRp2690
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2691
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2692
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2693
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2694
NsS'practice_blocks.thisIndex'
p2695
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2696
I15
sS'task.thisRepN'
p2697
I0
sg72
g122
sS'practice_Afirst.thisN'
p2698
I0
sS'practice_trials_Afirst.thisRepN'
p2699
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2700
I0
sg26
F0.099601984024047852
sg67
g127
sg45
g12
sg23
F0.099807977676391602
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2701
I3
sg78
I3
sg79
I4
sa(dp2702
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2703
I0
sS'task.thisIndex'
p2704
g92
sS'practice_Afirst.thisIndex'
p2705
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2706
NsS'task.thisN'
p2707
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g182
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2708
I0
sS'practice_trials_Afirst.thisIndex'
p2709
g41
(g91
S'\x00\x00\x00\x00'
tRp2710
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2711
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2712
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2713
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2714
NsS'practice_blocks.thisIndex'
p2715
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2716
I16
sS'task.thisRepN'
p2717
I0
sg72
g122
sS'practice_Afirst.thisN'
p2718
I0
sS'practice_trials_Afirst.thisRepN'
p2719
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2720
I0
sg26
F0.10784006118774414
sg67
g127
sg45
g12
sg23
F0.10830593109130859
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2721
I0
sg78
I3
sg79
I4
sa(dp2722
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2723
I0
sS'task.thisIndex'
p2724
g92
sS'practice_Afirst.thisIndex'
p2725
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2726
NsS'task.thisN'
p2727
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g99
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2728
I0
sS'practice_trials_Afirst.thisIndex'
p2729
g41
(g91
S'\x02\x00\x00\x00'
tRp2730
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2731
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2732
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2733
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2734
NsS'practice_blocks.thisIndex'
p2735
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2736
I17
sS'task.thisRepN'
p2737
I0
sg72
g122
sS'practice_Afirst.thisN'
p2738
I0
sS'practice_trials_Afirst.thisRepN'
p2739
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2740
I0
sg26
F0.10445404052734375
sg67
g127
sg45
g12
sg23
F0.10463976860046387
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2741
I1
sg78
I3
sg79
I4
sa(dp2742
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2743
I0
sS'task.thisIndex'
p2744
g92
sS'practice_Afirst.thisIndex'
p2745
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2746
NsS'task.thisN'
p2747
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g99
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2748
I0
sS'practice_trials_Afirst.thisIndex'
p2749
g41
(g91
S'\x03\x00\x00\x00'
tRp2750
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2751
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2752
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2753
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2754
NsS'practice_blocks.thisIndex'
p2755
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2756
I18
sS'task.thisRepN'
p2757
I0
sg72
g122
sS'practice_Afirst.thisN'
p2758
I0
sS'practice_trials_Afirst.thisRepN'
p2759
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2760
I0
sg26
F0.10745000839233398
sg67
g127
sg45
g12
sg23
F0.10764694213867188
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2761
I2
sg78
I3
sg79
I4
sa(dp2762
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2763
I0
sS'task.thisIndex'
p2764
g92
sS'practice_Afirst.thisIndex'
p2765
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2766
NsS'task.thisN'
p2767
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g288
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2768
I0
sS'practice_trials_Afirst.thisIndex'
p2769
g41
(g91
S'\x01\x00\x00\x00'
tRp2770
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2771
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2772
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2773
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2774
NsS'practice_blocks.thisIndex'
p2775
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2776
I19
sS'task.thisRepN'
p2777
I0
sg72
g122
sS'practice_Afirst.thisN'
p2778
I0
sS'practice_trials_Afirst.thisRepN'
p2779
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2780
I0
sg26
F0.098861932754516602
sg67
g127
sg45
g12
sg23
F0.099133968353271484
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2781
I3
sg78
I3
sg79
I4
sa(dp2782
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2783
I0
sS'task.thisIndex'
p2784
g92
sS'practice_Afirst.thisIndex'
p2785
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2786
NsS'task.thisN'
p2787
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g247
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2788
I0
sS'practice_trials_Afirst.thisIndex'
p2789
g41
(g91
S'\x01\x00\x00\x00'
tRp2790
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2791
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2792
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2793
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2794
NsS'practice_blocks.thisIndex'
p2795
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2796
I20
sS'task.thisRepN'
p2797
I0
sg72
g122
sS'practice_Afirst.thisN'
p2798
I0
sS'practice_trials_Afirst.thisRepN'
p2799
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2800
I0
sg26
F0.10062885284423828
sg67
g127
sg45
g12
sg23
F0.10081696510314941
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2801
I0
sg78
I3
sg79
I4
sa(dp2802
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2803
I0
sS'task.thisIndex'
p2804
g92
sS'practice_Afirst.thisIndex'
p2805
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2806
NsS'task.thisN'
p2807
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g204
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2808
I0
sS'practice_trials_Afirst.thisIndex'
p2809
g41
(g91
S'\x02\x00\x00\x00'
tRp2810
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2811
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2812
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2813
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2814
NsS'practice_blocks.thisIndex'
p2815
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2816
I21
sS'task.thisRepN'
p2817
I0
sg72
g122
sS'practice_Afirst.thisN'
p2818
I0
sS'practice_trials_Afirst.thisRepN'
p2819
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2820
I0
sg26
F0.098932027816772461
sg67
g127
sg45
g12
sg23
F0.099149942398071289
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2821
I1
sg78
I3
sg79
I4
sa(dp2822
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2823
I0
sS'task.thisIndex'
p2824
g92
sS'practice_Afirst.thisIndex'
p2825
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2826
NsS'task.thisN'
p2827
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g182
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2828
I0
sS'practice_trials_Afirst.thisIndex'
p2829
g41
(g91
S'\x00\x00\x00\x00'
tRp2830
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2831
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2832
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2833
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2834
NsS'practice_blocks.thisIndex'
p2835
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2836
I22
sS'task.thisRepN'
p2837
I0
sg72
g122
sS'practice_Afirst.thisN'
p2838
I0
sS'practice_trials_Afirst.thisRepN'
p2839
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2840
I0
sg26
F0.10515618324279785
sg67
g127
sg45
g12
sg23
F0.105316162109375
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2841
I2
sg78
I3
sg79
I4
sa(dp2842
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2843
I0
sS'task.thisIndex'
p2844
g92
sS'practice_Afirst.thisIndex'
p2845
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2846
NsS'task.thisN'
p2847
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g160
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2848
I0
sS'practice_trials_Afirst.thisIndex'
p2849
g41
(g91
S'\x03\x00\x00\x00'
tRp2850
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2851
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2852
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2853
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2854
NsS'practice_blocks.thisIndex'
p2855
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2856
I23
sS'task.thisRepN'
p2857
I0
sg72
g122
sS'practice_Afirst.thisN'
p2858
I0
sS'practice_trials_Afirst.thisRepN'
p2859
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2860
I0
sg26
F0.09619593620300293
sg67
g127
sg45
g12
sg23
F0.096439123153686523
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2861
I3
sg78
I3
sg79
I4
sa(dp2862
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2863
I0
sS'task.thisIndex'
p2864
g92
sS'practice_Afirst.thisIndex'
p2865
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2866
NsS'task.thisN'
p2867
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g99
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2868
I0
sS'practice_trials_Afirst.thisIndex'
p2869
g41
(g91
S'\x02\x00\x00\x00'
tRp2870
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2871
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2872
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2873
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2874
NsS'practice_blocks.thisIndex'
p2875
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2876
I24
sS'task.thisRepN'
p2877
I0
sg72
g122
sS'practice_Afirst.thisN'
p2878
I0
sS'practice_trials_Afirst.thisRepN'
p2879
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2880
I0
sg26
F0.10741209983825684
sg67
g127
sg45
g12
sg23
F0.1074981689453125
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2881
I0
sg78
I3
sg79
I4
sa(dp2882
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2883
I0
sS'task.thisIndex'
p2884
g92
sS'practice_Afirst.thisIndex'
p2885
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2886
NsS'task.thisN'
p2887
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g247
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2888
I0
sS'practice_trials_Afirst.thisIndex'
p2889
g41
(g91
S'\x00\x00\x00\x00'
tRp2890
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2891
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2892
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2893
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2894
NsS'practice_blocks.thisIndex'
p2895
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2896
I25
sS'task.thisRepN'
p2897
I0
sg72
g122
sS'practice_Afirst.thisN'
p2898
I0
sS'practice_trials_Afirst.thisRepN'
p2899
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2900
I0
sg26
F0.099076032638549805
sg67
g127
sg45
g12
sg23
F0.09938812255859375
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2901
I1
sg78
I3
sg79
I4
sa(dp2902
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2903
I0
sS'task.thisIndex'
p2904
g92
sS'practice_Afirst.thisIndex'
p2905
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2906
NsS'task.thisN'
p2907
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g288
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2908
I0
sS'practice_trials_Afirst.thisIndex'
p2909
g41
(g91
S'\x01\x00\x00\x00'
tRp2910
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2911
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2912
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2913
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2914
NsS'practice_blocks.thisIndex'
p2915
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2916
I26
sS'task.thisRepN'
p2917
I0
sg72
g122
sS'practice_Afirst.thisN'
p2918
I0
sS'practice_trials_Afirst.thisRepN'
p2919
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2920
I0
sg26
F0.1052401065826416
sg67
g127
sg45
g12
sg23
F0.10549116134643555
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2921
I2
sg78
I3
sg79
I4
sa(dp2922
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2923
I0
sS'task.thisIndex'
p2924
g92
sS'practice_Afirst.thisIndex'
p2925
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2926
NsS'task.thisN'
p2927
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g349
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2928
I0
sS'practice_trials_Afirst.thisIndex'
p2929
g41
(g91
S'\x03\x00\x00\x00'
tRp2930
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2931
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2932
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2933
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2934
NsS'practice_blocks.thisIndex'
p2935
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2936
I27
sS'task.thisRepN'
p2937
I0
sg72
g122
sS'practice_Afirst.thisN'
p2938
I0
sS'practice_trials_Afirst.thisRepN'
p2939
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2940
I0
sg26
F0.097790956497192383
sg67
g127
sg45
g12
sg23
F0.098011970520019531
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2941
I3
sg78
I3
sg79
I4
sa(dp2942
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2943
I0
sS'task.thisIndex'
p2944
g92
sS'practice_Afirst.thisIndex'
p2945
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2946
NsS'task.thisN'
p2947
I0
sg63
g97
sg2384
I2
sg64
g98
sg15
g182
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2948
I0
sS'practice_trials_Afirst.thisIndex'
p2949
g41
(g91
S'\x01\x00\x00\x00'
tRp2950
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2951
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2952
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2953
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2954
NsS'practice_blocks.thisIndex'
p2955
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2956
I28
sS'task.thisRepN'
p2957
I0
sg72
g122
sS'practice_Afirst.thisN'
p2958
I0
sS'practice_trials_Afirst.thisRepN'
p2959
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2960
I0
sg26
F0.10475015640258789
sg67
g127
sg45
g12
sg23
F0.10501599311828613
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2961
I0
sg78
I3
sg79
I4
sa(dp2962
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2963
I0
sS'task.thisIndex'
p2964
g92
sS'practice_Afirst.thisIndex'
p2965
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p2966
NsS'task.thisN'
p2967
I0
sg63
g97
sg2384
I4
sg64
g98
sg15
g99
sg16
g431
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p2968
I0
sS'practice_trials_Afirst.thisIndex'
p2969
g41
(g91
S'\x03\x00\x00\x00'
tRp2970
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2971
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2972
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2973
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2974
NsS'practice_blocks.thisIndex'
p2975
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2976
I29
sS'task.thisRepN'
p2977
I0
sg72
g122
sS'practice_Afirst.thisN'
p2978
I0
sS'practice_trials_Afirst.thisRepN'
p2979
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p2980
I0
sg26
F0.10118508338928223
sg67
g127
sg45
g12
sg23
F0.10138988494873047
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p2981
I1
sg78
I3
sg79
I4
sa(dp2982
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p2983
I0
sS'task.thisIndex'
p2984
g92
sS'practice_Afirst.thisIndex'
p2985
g2381
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p2986
NsS'task.thisN'
p2987
I0
sg63
g97
sg2384
I3
sg64
g98
sg15
g204
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p2988
I0
sS'practice_trials_Afirst.thisIndex'
p2989
g41
(g91
S'\x02\x00\x00\x00'
tRp2990
sg68
g105
sg20
g106
sg2388
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p2991
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p2992
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p2993
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p2994
NsS'practice_blocks.thisIndex'
p2995
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p2996
I30
sS'task.thisRepN'
p2997
I0
sg72
g122
sS'practice_Afirst.thisN'
p2998
I0
sS'practice_trials_Afirst.thisRepN'
p2999
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3000
I0
sg26
F0.10299587249755859
sg67
g127
sg45
g12
sg23
F0.10319805145263672
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3001
I2
sg78
I3
sg79
I4
sa(dp3002
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3003
I0
sS'task.thisIndex'
p3004
g92
sS'practice_Afirst.thisIndex'
p3005
g2381
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3006
NsS'task.thisN'
p3007
I0
sg63
g97
sg2384
I1
sg64
g98
sg15
g138
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3008
I0
sS'practice_trials_Afirst.thisIndex'
p3009
g41
(g91
S'\x00\x00\x00\x00'
tRp3010
sg68
g105
sg20
g106
sg2388
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3011
I2
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3012
I2
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3013
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3014
NsS'practice_blocks.thisIndex'
p3015
g2394
sg62
g119
sS'practice_trials_Afirst.thisN'
p3016
I31
sS'task.thisRepN'
p3017
I0
sg72
g122
sS'practice_Afirst.thisN'
p3018
I0
sS'practice_trials_Afirst.thisRepN'
p3019
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3020
I0
sg26
F0.1070411205291748
sg67
g127
sg45
g12
sg23
F0.10738396644592285
sg69
g128
sg38
Vm
sg39
V1
sg2400
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3021
I3
sg78
I3
sg79
I4
sa(dp3022
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3023
g92
sg40
g44
sS'task.thisN'
p3024
I0
sS'practice_trials_B.thisIndex'
p3025
g41
(g91
S'\x00\x00\x00\x00'
tRp3026
sg28
I1
sVtrialType
p3027
I1
sg64
g98
sg15
g288
sg32
F0.099700212478637695
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p3028
I0
sg68
g105
sg20
g106
sVstimulus1_category
p3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3030
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3031
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3032
NsS'practice_blocks.thisIndex'
p3033
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3034
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3035
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3036
I0
sS'task.thisRepN'
p3037
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3039
I0
sg29
F0.10691094398498535
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3040
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3041
g92
sg40
g44
sS'task.thisN'
p3042
I0
sS'practice_trials_B.thisIndex'
p3043
g41
(g91
S'\x02\x00\x00\x00'
tRp3044
sg28
I1
sg3027
I3
sg64
g98
sg15
g160
sg32
F0.08953094482421875
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p3045
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3046
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3047
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3048
NsS'practice_blocks.thisIndex'
p3049
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3050
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3051
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3052
I1
sS'task.thisRepN'
p3053
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3054
I1
sg29
F0.090116024017333984
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3055
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3056
g92
sg40
g44
sS'task.thisN'
p3057
I0
sS'practice_trials_B.thisIndex'
p3058
g41
(g91
S'\x03\x00\x00\x00'
tRp3059
sg28
I1
sg3027
I4
sg64
g98
sg15
g349
sg32
F0.10062503814697266
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p3060
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3061
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3062
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3063
NsS'practice_blocks.thisIndex'
p3064
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3065
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3066
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3067
I2
sS'task.thisRepN'
p3068
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3069
I2
sg29
F0.100830078125
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3070
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3071
g92
sg40
g44
sS'task.thisN'
p3072
I0
sS'practice_trials_B.thisIndex'
p3073
g41
(g91
S'\x01\x00\x00\x00'
tRp3074
sg28
I1
sg3027
I2
sg64
g98
sg15
g182
sg32
F0.10036206245422363
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p3075
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3076
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3077
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3078
NsS'practice_blocks.thisIndex'
p3079
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3080
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3081
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3082
I3
sS'task.thisRepN'
p3083
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3084
I3
sg29
F0.10055708885192871
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3085
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3086
g92
sg40
g44
sS'task.thisN'
p3087
I0
sS'practice_trials_B.thisIndex'
p3088
g41
(g91
S'\x00\x00\x00\x00'
tRp3089
sg28
I1
sg3027
I1
sg64
g98
sg15
g247
sg32
F0.10557293891906738
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p3090
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3091
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3092
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3093
NsS'practice_blocks.thisIndex'
p3094
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3095
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3096
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3097
I0
sS'task.thisRepN'
p3098
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3099
I4
sg29
F0.10576605796813965
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3100
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3101
g92
sg40
g44
sS'task.thisN'
p3102
I0
sS'practice_trials_B.thisIndex'
p3103
g41
(g91
S'\x02\x00\x00\x00'
tRp3104
sg28
I1
sg3027
I3
sg64
g98
sg15
g99
sg32
F0.10041093826293945
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p3105
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3106
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3107
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3108
NsS'practice_blocks.thisIndex'
p3109
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3110
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3111
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3112
I1
sS'task.thisRepN'
p3113
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3114
I5
sg29
F0.10062313079833984
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3115
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3116
g92
sg40
g44
sS'task.thisN'
p3117
I0
sS'practice_trials_B.thisIndex'
p3118
g41
(g91
S'\x03\x00\x00\x00'
tRp3119
sg28
I1
sg3027
I4
sg64
g98
sg15
g160
sg32
F0.09973907470703125
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p3120
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3121
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3122
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3123
NsS'practice_blocks.thisIndex'
p3124
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3125
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3126
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3127
I2
sS'task.thisRepN'
p3128
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3129
I6
sg29
F0.10007286071777344
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3130
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3131
g92
sg40
g44
sS'task.thisN'
p3132
I0
sS'practice_trials_B.thisIndex'
p3133
g41
(g91
S'\x01\x00\x00\x00'
tRp3134
sg28
I1
sg3027
I2
sg64
g98
sg15
g138
sg32
F0.10059618949890137
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p3135
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3136
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3137
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3138
NsS'practice_blocks.thisIndex'
p3139
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3140
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3141
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3142
I3
sS'task.thisRepN'
p3143
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3144
I7
sg29
F0.10100793838500977
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3145
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3146
g92
sg40
g44
sS'task.thisN'
p3147
I0
sS'practice_trials_B.thisIndex'
p3148
g41
(g91
S'\x01\x00\x00\x00'
tRp3149
sg28
I1
sg3027
I2
sg64
g98
sg15
g288
sg32
F0.10578393936157227
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p3150
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3151
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3152
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3153
NsS'practice_blocks.thisIndex'
p3154
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3155
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3156
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3157
I0
sS'task.thisRepN'
p3158
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3159
I8
sg29
F0.10597801208496094
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3160
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3161
g92
sg40
g44
sS'task.thisN'
p3162
I0
sS'practice_trials_B.thisIndex'
p3163
g41
(g91
S'\x02\x00\x00\x00'
tRp3164
sg28
I1
sg3027
I3
sg64
g98
sg15
g204
sg32
F0.10761499404907227
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p3165
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3166
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3167
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3168
NsS'practice_blocks.thisIndex'
p3169
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3170
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3171
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3172
I1
sS'task.thisRepN'
p3173
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3174
I9
sg29
F0.10789203643798828
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3175
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3176
g92
sg40
g44
sS'task.thisN'
p3177
I0
sS'practice_trials_B.thisIndex'
p3178
g41
(g91
S'\x00\x00\x00\x00'
tRp3179
sg28
I1
sg3027
I1
sg64
g98
sg15
g138
sg32
F0.1041100025177002
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p3180
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3181
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3182
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3183
NsS'practice_blocks.thisIndex'
p3184
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3185
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3186
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3187
I2
sS'task.thisRepN'
p3188
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3189
I10
sg29
F0.10431790351867676
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3190
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3191
g92
sg40
g44
sS'task.thisN'
p3192
I0
sS'practice_trials_B.thisIndex'
p3193
g41
(g91
S'\x03\x00\x00\x00'
tRp3194
sg28
I1
sg3027
I4
sg64
g98
sg15
g204
sg32
F0.10937309265136719
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p3195
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3196
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3197
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3198
NsS'practice_blocks.thisIndex'
p3199
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3200
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3201
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3202
I3
sS'task.thisRepN'
p3203
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3204
I11
sg29
F0.10961794853210449
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3205
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3206
g92
sg40
g44
sS'task.thisN'
p3207
I0
sS'practice_trials_B.thisIndex'
p3208
g41
(g91
S'\x00\x00\x00\x00'
tRp3209
sg28
I1
sg3027
I1
sg64
g98
sg15
g288
sg32
F0.10005593299865723
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p3210
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3211
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3212
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3213
NsS'practice_blocks.thisIndex'
p3214
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3215
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3216
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3217
I0
sS'task.thisRepN'
p3218
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3219
I12
sg29
F0.10024285316467285
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3220
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3221
g92
sg40
g44
sS'task.thisN'
p3222
I0
sS'practice_trials_B.thisIndex'
p3223
g41
(g91
S'\x01\x00\x00\x00'
tRp3224
sg28
I1
sg3027
I2
sg64
g98
sg15
g182
sg32
F0.10128092765808105
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p3225
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3226
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3227
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3228
NsS'practice_blocks.thisIndex'
p3229
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3230
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3231
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3232
I1
sS'task.thisRepN'
p3233
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3234
I13
sg29
F0.10140585899353027
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3235
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3236
g92
sg40
g44
sS'task.thisN'
p3237
I0
sS'practice_trials_B.thisIndex'
p3238
g41
(g91
S'\x02\x00\x00\x00'
tRp3239
sg28
I1
sg3027
I3
sg64
g98
sg15
g349
sg32
F0.10178303718566895
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p3240
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3241
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3242
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3243
NsS'practice_blocks.thisIndex'
p3244
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3245
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3246
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3247
I2
sS'task.thisRepN'
p3248
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3249
I14
sg29
F0.10198688507080078
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3250
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3251
g92
sg40
g44
sS'task.thisN'
p3252
I0
sS'practice_trials_B.thisIndex'
p3253
g41
(g91
S'\x03\x00\x00\x00'
tRp3254
sg28
I1
sg3027
I4
sg64
g98
sg15
g204
sg32
F0.10614395141601562
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p3255
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3256
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3257
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3258
NsS'practice_blocks.thisIndex'
p3259
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3260
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3261
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3262
I3
sS'task.thisRepN'
p3263
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3264
I15
sg29
F0.10634589195251465
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3265
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3266
g92
sg40
g44
sS'task.thisN'
p3267
I0
sS'practice_trials_B.thisIndex'
p3268
g41
(g91
S'\x01\x00\x00\x00'
tRp3269
sg28
I1
sg3027
I2
sg64
g98
sg15
g288
sg32
F0.10542678833007812
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p3270
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3271
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3272
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3273
NsS'practice_blocks.thisIndex'
p3274
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3275
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3276
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3277
I0
sS'task.thisRepN'
p3278
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3279
I16
sg29
F0.10545492172241211
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3280
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3281
g92
sg40
g44
sS'task.thisN'
p3282
I0
sS'practice_trials_B.thisIndex'
p3283
g41
(g91
S'\x02\x00\x00\x00'
tRp3284
sg28
I1
sg3027
I3
sg64
g98
sg15
g99
sg32
F0.10635495185852051
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p3285
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3286
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3287
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3288
NsS'practice_blocks.thisIndex'
p3289
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3290
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3291
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3292
I1
sS'task.thisRepN'
p3293
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3294
I17
sg29
F0.10656595230102539
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3295
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3296
g92
sg40
g44
sS'task.thisN'
p3297
I0
sS'practice_trials_B.thisIndex'
p3298
g41
(g91
S'\x00\x00\x00\x00'
tRp3299
sg28
I1
sg3027
I1
sg64
g98
sg15
g138
sg32
F0.10307717323303223
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p3300
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3301
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3302
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3303
NsS'practice_blocks.thisIndex'
p3304
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3305
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3306
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3307
I2
sS'task.thisRepN'
p3308
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3309
I18
sg29
F0.1029670238494873
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3310
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3311
g92
sg40
g44
sS'task.thisN'
p3312
I0
sS'practice_trials_B.thisIndex'
p3313
g41
(g91
S'\x03\x00\x00\x00'
tRp3314
sg28
I1
sg3027
I4
sg64
g98
sg15
g349
sg32
F0.10472702980041504
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p3315
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3316
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3317
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3318
NsS'practice_blocks.thisIndex'
p3319
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3320
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3321
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3322
I3
sS'task.thisRepN'
p3323
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3324
I19
sg29
F0.10499906539916992
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3325
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3326
g92
sg40
g44
sS'task.thisN'
p3327
I0
sS'practice_trials_B.thisIndex'
p3328
g41
(g91
S'\x02\x00\x00\x00'
tRp3329
sg28
I1
sg3027
I3
sg64
g98
sg15
g160
sg32
F0.093804836273193359
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p3330
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3331
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3332
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3333
NsS'practice_blocks.thisIndex'
p3334
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3335
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3336
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3337
I0
sS'task.thisRepN'
p3338
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3339
I20
sg29
F0.09404301643371582
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3340
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3341
g92
sg40
g44
sS'task.thisN'
p3342
I0
sS'practice_trials_B.thisIndex'
p3343
g41
(g91
S'\x03\x00\x00\x00'
tRp3344
sg28
I1
sg3027
I4
sg64
g98
sg15
g160
sg32
F0.10772013664245605
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p3345
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3346
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3347
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3348
NsS'practice_blocks.thisIndex'
p3349
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3350
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3351
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3352
I1
sS'task.thisRepN'
p3353
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3354
I21
sg29
F0.1078190803527832
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3355
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3356
g92
sg40
g44
sS'task.thisN'
p3357
I0
sS'practice_trials_B.thisIndex'
p3358
g41
(g91
S'\x00\x00\x00\x00'
tRp3359
sg28
I1
sg3027
I1
sg64
g98
sg15
g247
sg32
F0.10086607933044434
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p3360
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3361
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3362
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3363
NsS'practice_blocks.thisIndex'
p3364
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3365
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3366
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3367
I2
sS'task.thisRepN'
p3368
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3369
I22
sg29
F0.10107088088989258
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3370
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3371
g92
sg40
g44
sS'task.thisN'
p3372
I0
sS'practice_trials_B.thisIndex'
p3373
g41
(g91
S'\x01\x00\x00\x00'
tRp3374
sg28
I1
sg3027
I2
sg64
g98
sg15
g247
sg32
F0.10234999656677246
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p3375
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3376
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3377
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3378
NsS'practice_blocks.thisIndex'
p3379
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3380
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3381
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3382
I3
sS'task.thisRepN'
p3383
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3384
I23
sg29
F0.10235500335693359
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3385
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3386
g92
sg40
g44
sS'task.thisN'
p3387
I0
sS'practice_trials_B.thisIndex'
p3388
g41
(g91
S'\x03\x00\x00\x00'
tRp3389
sg28
I1
sg3027
I4
sg64
g98
sg15
g349
sg32
F0.10987401008605957
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p3390
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3391
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3392
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3393
NsS'practice_blocks.thisIndex'
p3394
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3395
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3396
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3397
I0
sS'task.thisRepN'
p3398
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3399
I24
sg29
F0.11011886596679688
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3400
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3401
g92
sg40
g44
sS'task.thisN'
p3402
I0
sS'practice_trials_B.thisIndex'
p3403
g41
(g91
S'\x00\x00\x00\x00'
tRp3404
sg28
I1
sg3027
I1
sg64
g98
sg15
g182
sg32
F0.10567784309387207
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p3405
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3406
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3407
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3408
NsS'practice_blocks.thisIndex'
p3409
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3410
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3411
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3412
I1
sS'task.thisRepN'
p3413
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3414
I25
sg29
F0.1058800220489502
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3415
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3416
g92
sg40
g44
sS'task.thisN'
p3417
I0
sS'practice_trials_B.thisIndex'
p3418
g41
(g91
S'\x01\x00\x00\x00'
tRp3419
sg28
I1
sg3027
I2
sg64
g98
sg15
g138
sg32
F0.11005592346191406
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p3420
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3421
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3422
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3423
NsS'practice_blocks.thisIndex'
p3424
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3425
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3426
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3427
I2
sS'task.thisRepN'
p3428
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3429
I26
sg29
F0.1103050708770752
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3430
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3431
g92
sg40
g44
sS'task.thisN'
p3432
I0
sS'practice_trials_B.thisIndex'
p3433
g41
(g91
S'\x02\x00\x00\x00'
tRp3434
sg28
I1
sg3027
I3
sg64
g98
sg15
g99
sg32
F0.10595703125
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p3435
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3436
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3437
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3438
NsS'practice_blocks.thisIndex'
p3439
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3440
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3441
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3442
I3
sS'task.thisRepN'
p3443
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3444
I27
sg29
F0.10623002052307129
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3445
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3446
g92
sg40
g44
sS'task.thisN'
p3447
I0
sS'practice_trials_B.thisIndex'
p3448
g41
(g91
S'\x00\x00\x00\x00'
tRp3449
sg28
I1
sg3027
I1
sg64
g98
sg15
g182
sg32
F0.10809016227722168
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p3450
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3451
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3452
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3453
NsS'practice_blocks.thisIndex'
p3454
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3455
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3456
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3457
I0
sS'task.thisRepN'
p3458
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3459
I28
sg29
F0.10870814323425293
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3460
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3461
g92
sg40
g44
sS'task.thisN'
p3462
I0
sS'practice_trials_B.thisIndex'
p3463
g41
(g91
S'\x02\x00\x00\x00'
tRp3464
sg28
I1
sg3027
I3
sg64
g98
sg15
g204
sg32
F0.10732388496398926
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p3465
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3466
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3467
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3468
NsS'practice_blocks.thisIndex'
p3469
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3470
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3471
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3472
I1
sS'task.thisRepN'
p3473
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3474
I29
sg29
F0.10760092735290527
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3475
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3476
g92
sg40
g44
sS'task.thisN'
p3477
I0
sS'practice_trials_B.thisIndex'
p3478
g41
(g91
S'\x03\x00\x00\x00'
tRp3479
sg28
I1
sg3027
I4
sg64
g98
sg15
g99
sg32
F0.10214900970458984
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p3480
I0
sg68
g105
sg20
g106
sg3029
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3481
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3482
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3483
NsS'practice_blocks.thisIndex'
p3484
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3485
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3486
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3487
I2
sS'task.thisRepN'
p3488
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3489
I30
sg29
F0.10390496253967285
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp3490
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p3491
g92
sg40
g44
sS'task.thisN'
p3492
I0
sS'practice_trials_B.thisIndex'
p3493
g41
(g91
S'\x01\x00\x00\x00'
tRp3494
sg28
I1
sg3027
I2
sg64
g98
sg15
g247
sg32
F0.10442781448364258
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p3495
I0
sg68
g105
sg20
g106
sg3029
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3496
I2
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3497
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3498
NsS'practice_blocks.thisIndex'
p3499
g2394
sg62
g119
sS'practice_trials_B.thisRepN'
p3500
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p3501
I2
sg67
g127
sS'practice_trials_B.thisTrialN'
p3502
I3
sS'task.thisRepN'
p3503
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg3038
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p3504
I31
sg29
F0.10485601425170898
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp3505
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3506
I0
sS'task.thisIndex'
p3507
g92
sS'practice_Afirst.thisIndex'
p3508
g41
(g91
S'\x00\x00\x00\x00'
tRp3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3510
NsS'task.thisN'
p3511
I0
sg63
g97
sVtrialType
p3512
I1
sg64
g98
sg15
g182
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3513
I0
sS'practice_trials_Afirst.thisIndex'
p3514
g41
(g91
S'\x00\x00\x00\x00'
tRp3515
sg68
g105
sg20
g106
sVstimulus1_category
p3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3517
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3518
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3519
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3520
NsS'practice_blocks.thisIndex'
p3521
g41
(g91
S'\x00\x00\x00\x00'
tRp3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3523
I0
sS'task.thisRepN'
p3524
I0
sg72
g122
sS'practice_Afirst.thisN'
p3525
I0
sS'practice_trials_Afirst.thisRepN'
p3526
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3527
I0
sg26
F0.1056210994720459
sg67
g127
sg45
g12
sg23
F0.10576915740966797
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3529
I0
sg78
I3
sg79
I4
sa(dp3530
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3531
I0
sS'task.thisIndex'
p3532
g92
sS'practice_Afirst.thisIndex'
p3533
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3534
NsS'task.thisN'
p3535
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g288
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3536
I0
sS'practice_trials_Afirst.thisIndex'
p3537
g41
(g91
S'\x01\x00\x00\x00'
tRp3538
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3539
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3540
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3541
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3542
NsS'practice_blocks.thisIndex'
p3543
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3544
I1
sS'task.thisRepN'
p3545
I0
sg72
g122
sS'practice_Afirst.thisN'
p3546
I0
sS'practice_trials_Afirst.thisRepN'
p3547
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3548
I0
sg26
F0.10836195945739746
sg67
g127
sg45
g12
sg23
F0.10858988761901855
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3549
I1
sg78
I3
sg79
I4
sa(dp3550
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3551
I0
sS'task.thisIndex'
p3552
g92
sS'practice_Afirst.thisIndex'
p3553
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3554
NsS'task.thisN'
p3555
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g349
sg16
g431
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3556
I0
sS'practice_trials_Afirst.thisIndex'
p3557
g41
(g91
S'\x03\x00\x00\x00'
tRp3558
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3559
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3560
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3561
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3562
NsS'practice_blocks.thisIndex'
p3563
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3564
I2
sS'task.thisRepN'
p3565
I0
sg72
g122
sS'practice_Afirst.thisN'
p3566
I0
sS'practice_trials_Afirst.thisRepN'
p3567
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3568
I0
sg26
F0.10139918327331543
sg67
g127
sg45
g12
sg23
F0.1016240119934082
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3569
I2
sg78
I3
sg79
I4
sa(dp3570
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3571
I0
sS'task.thisIndex'
p3572
g92
sS'practice_Afirst.thisIndex'
p3573
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3574
NsS'task.thisN'
p3575
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g160
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3576
I0
sS'practice_trials_Afirst.thisIndex'
p3577
g41
(g91
S'\x02\x00\x00\x00'
tRp3578
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3579
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3580
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3581
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3582
NsS'practice_blocks.thisIndex'
p3583
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3584
I3
sS'task.thisRepN'
p3585
I0
sg72
g122
sS'practice_Afirst.thisN'
p3586
I0
sS'practice_trials_Afirst.thisRepN'
p3587
I0
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3588
I0
sg26
F0.10576701164245605
sg67
g127
sg45
g12
sg23
F0.10593295097351074
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3589
I3
sg78
I3
sg79
I4
sa(dp3590
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3591
I0
sS'task.thisIndex'
p3592
g92
sS'practice_Afirst.thisIndex'
p3593
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3594
NsS'task.thisN'
p3595
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g160
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3596
I0
sS'practice_trials_Afirst.thisIndex'
p3597
g41
(g91
S'\x03\x00\x00\x00'
tRp3598
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3599
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3600
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3601
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3602
NsS'practice_blocks.thisIndex'
p3603
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3604
I4
sS'task.thisRepN'
p3605
I0
sg72
g122
sS'practice_Afirst.thisN'
p3606
I0
sS'practice_trials_Afirst.thisRepN'
p3607
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3608
I0
sg26
F0.10111498832702637
sg67
g127
sg45
g12
sg23
F0.10141587257385254
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3609
I0
sg78
I3
sg79
I4
sa(dp3610
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3611
I0
sS'task.thisIndex'
p3612
g92
sS'practice_Afirst.thisIndex'
p3613
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3614
NsS'task.thisN'
p3615
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g288
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3616
I0
sS'practice_trials_Afirst.thisIndex'
p3617
g41
(g91
S'\x01\x00\x00\x00'
tRp3618
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3619
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3620
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3621
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3622
NsS'practice_blocks.thisIndex'
p3623
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3624
I5
sS'task.thisRepN'
p3625
I0
sg72
g122
sS'practice_Afirst.thisN'
p3626
I0
sS'practice_trials_Afirst.thisRepN'
p3627
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3628
I0
sg26
F0.10389590263366699
sg67
g127
sg45
g12
sg23
F0.10413694381713867
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3629
I1
sg78
I3
sg79
I4
sa(dp3630
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3631
I0
sS'task.thisIndex'
p3632
g92
sS'practice_Afirst.thisIndex'
p3633
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3634
NsS'task.thisN'
p3635
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g99
sg16
g226
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3636
I0
sS'practice_trials_Afirst.thisIndex'
p3637
g41
(g91
S'\x02\x00\x00\x00'
tRp3638
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3639
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3640
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3641
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3642
NsS'practice_blocks.thisIndex'
p3643
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3644
I6
sS'task.thisRepN'
p3645
I0
sg72
g122
sS'practice_Afirst.thisN'
p3646
I0
sS'practice_trials_Afirst.thisRepN'
p3647
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3648
I0
sg26
F0.10750389099121094
sg67
g127
sg45
g12
sg23
F0.10771512985229492
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3649
I2
sg78
I3
sg79
I4
sa(dp3650
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3651
I0
sS'task.thisIndex'
p3652
g92
sS'practice_Afirst.thisIndex'
p3653
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3654
NsS'task.thisN'
p3655
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g288
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3656
I0
sS'practice_trials_Afirst.thisIndex'
p3657
g41
(g91
S'\x00\x00\x00\x00'
tRp3658
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3659
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3660
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3661
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3662
NsS'practice_blocks.thisIndex'
p3663
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3664
I7
sS'task.thisRepN'
p3665
I0
sg72
g122
sS'practice_Afirst.thisN'
p3666
I0
sS'practice_trials_Afirst.thisRepN'
p3667
I1
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3668
I0
sg26
F0.10988688468933105
sg67
g127
sg45
g12
sg23
F0.1100621223449707
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3669
I3
sg78
I3
sg79
I4
sa(dp3670
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3671
I0
sS'task.thisIndex'
p3672
g92
sS'practice_Afirst.thisIndex'
p3673
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3674
NsS'task.thisN'
p3675
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g204
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3676
I0
sS'practice_trials_Afirst.thisIndex'
p3677
g41
(g91
S'\x03\x00\x00\x00'
tRp3678
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3679
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3680
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3681
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3682
NsS'practice_blocks.thisIndex'
p3683
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3684
I8
sS'task.thisRepN'
p3685
I0
sg72
g122
sS'practice_Afirst.thisN'
p3686
I0
sS'practice_trials_Afirst.thisRepN'
p3687
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3688
I0
sg26
F0.10024404525756836
sg67
g127
sg45
g12
sg23
F0.10044002532958984
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3689
I0
sg78
I3
sg79
I4
sa(dp3690
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3691
I0
sS'task.thisIndex'
p3692
g92
sS'practice_Afirst.thisIndex'
p3693
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3694
NsS'task.thisN'
p3695
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g204
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3696
I0
sS'practice_trials_Afirst.thisIndex'
p3697
g41
(g91
S'\x02\x00\x00\x00'
tRp3698
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3699
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3700
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3701
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3702
NsS'practice_blocks.thisIndex'
p3703
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3704
I9
sS'task.thisRepN'
p3705
I0
sg72
g122
sS'practice_Afirst.thisN'
p3706
I0
sS'practice_trials_Afirst.thisRepN'
p3707
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3708
I0
sg26
F0.10494613647460938
sg67
g127
sg45
g12
sg23
F0.10520219802856445
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3709
I1
sg78
I3
sg79
I4
sa(dp3710
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3711
I0
sS'task.thisIndex'
p3712
g92
sS'practice_Afirst.thisIndex'
p3713
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3714
NsS'task.thisN'
p3715
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g182
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3716
I0
sS'practice_trials_Afirst.thisIndex'
p3717
g41
(g91
S'\x00\x00\x00\x00'
tRp3718
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3719
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3720
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3721
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3722
NsS'practice_blocks.thisIndex'
p3723
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3724
I10
sS'task.thisRepN'
p3725
I0
sg72
g122
sS'practice_Afirst.thisN'
p3726
I0
sS'practice_trials_Afirst.thisRepN'
p3727
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3728
I0
sg26
F0.1023859977722168
sg67
g127
sg45
g12
sg23
F0.10255908966064453
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3729
I2
sg78
I3
sg79
I4
sa(dp3730
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3731
I0
sS'task.thisIndex'
p3732
g92
sS'practice_Afirst.thisIndex'
p3733
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3734
NsS'task.thisN'
p3735
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g138
sg16
g161
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3736
I0
sS'practice_trials_Afirst.thisIndex'
p3737
g41
(g91
S'\x01\x00\x00\x00'
tRp3738
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3739
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3740
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3741
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3742
NsS'practice_blocks.thisIndex'
p3743
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3744
I11
sS'task.thisRepN'
p3745
I0
sg72
g122
sS'practice_Afirst.thisN'
p3746
I0
sS'practice_trials_Afirst.thisRepN'
p3747
I2
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3748
I0
sg26
F0.10385990142822266
sg67
g127
sg45
g12
sg23
F0.10406804084777832
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3749
I3
sg78
I3
sg79
I4
sa(dp3750
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3751
I0
sS'task.thisIndex'
p3752
g92
sS'practice_Afirst.thisIndex'
p3753
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3754
NsS'task.thisN'
p3755
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g247
sg16
g431
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3756
I0
sS'practice_trials_Afirst.thisIndex'
p3757
g41
(g91
S'\x01\x00\x00\x00'
tRp3758
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3759
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3760
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3761
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3762
NsS'practice_blocks.thisIndex'
p3763
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3764
I12
sS'task.thisRepN'
p3765
I0
sg72
g122
sS'practice_Afirst.thisN'
p3766
I0
sS'practice_trials_Afirst.thisRepN'
p3767
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3768
I0
sg26
F0.10050296783447266
sg67
g127
sg45
g12
sg23
F0.10061097145080566
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3769
I0
sg78
I3
sg79
I4
sa(dp3770
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3771
I0
sS'task.thisIndex'
p3772
g92
sS'practice_Afirst.thisIndex'
p3773
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3774
NsS'task.thisN'
p3775
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g99
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3776
I0
sS'practice_trials_Afirst.thisIndex'
p3777
g41
(g91
S'\x02\x00\x00\x00'
tRp3778
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3779
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3780
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3781
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3782
NsS'practice_blocks.thisIndex'
p3783
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3784
I13
sS'task.thisRepN'
p3785
I0
sg72
g122
sS'practice_Afirst.thisN'
p3786
I0
sS'practice_trials_Afirst.thisRepN'
p3787
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3788
I0
sg26
F0.096287965774536133
sg67
g127
sg45
g12
sg23
F0.096435070037841797
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3789
I1
sg78
I3
sg79
I4
sa(dp3790
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3791
I0
sS'task.thisIndex'
p3792
g92
sS'practice_Afirst.thisIndex'
p3793
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3794
NsS'task.thisN'
p3795
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g204
sg16
g205
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3796
I0
sS'practice_trials_Afirst.thisIndex'
p3797
g41
(g91
S'\x03\x00\x00\x00'
tRp3798
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3799
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3800
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3801
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3802
NsS'practice_blocks.thisIndex'
p3803
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3804
I14
sS'task.thisRepN'
p3805
I0
sg72
g122
sS'practice_Afirst.thisN'
p3806
I0
sS'practice_trials_Afirst.thisRepN'
p3807
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3808
I0
sg26
F0.10551810264587402
sg67
g127
sg45
g12
sg23
F0.10562491416931152
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3809
I2
sg78
I3
sg79
I4
sa(dp3810
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3811
I0
sS'task.thisIndex'
p3812
g92
sS'practice_Afirst.thisIndex'
p3813
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3814
NsS'task.thisN'
p3815
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g247
sg16
g139
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3816
I0
sS'practice_trials_Afirst.thisIndex'
p3817
g41
(g91
S'\x00\x00\x00\x00'
tRp3818
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3819
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3820
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3821
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3822
NsS'practice_blocks.thisIndex'
p3823
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3824
I15
sS'task.thisRepN'
p3825
I0
sg72
g122
sS'practice_Afirst.thisN'
p3826
I0
sS'practice_trials_Afirst.thisRepN'
p3827
I3
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3828
I0
sg26
F0.10546612739562988
sg67
g127
sg45
g12
sg23
F0.10570192337036133
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3829
I3
sg78
I3
sg79
I4
sa(dp3830
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3831
I0
sS'task.thisIndex'
p3832
g92
sS'practice_Afirst.thisIndex'
p3833
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3834
NsS'task.thisN'
p3835
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g349
sg16
g350
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3836
I0
sS'practice_trials_Afirst.thisIndex'
p3837
g41
(g91
S'\x02\x00\x00\x00'
tRp3838
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3839
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3840
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3841
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3842
NsS'practice_blocks.thisIndex'
p3843
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3844
I16
sS'task.thisRepN'
p3845
I0
sg72
g122
sS'practice_Afirst.thisN'
p3846
I0
sS'practice_trials_Afirst.thisRepN'
p3847
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3848
I0
sg26
F0.1045229434967041
sg67
g127
sg45
g12
sg23
F0.10472488403320312
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3849
I0
sg78
I3
sg79
I4
sa(dp3850
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3851
I0
sS'task.thisIndex'
p3852
g92
sS'practice_Afirst.thisIndex'
p3853
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3854
NsS'task.thisN'
p3855
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g160
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3856
I0
sS'practice_trials_Afirst.thisIndex'
p3857
g41
(g91
S'\x03\x00\x00\x00'
tRp3858
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3859
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3860
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3861
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3862
NsS'practice_blocks.thisIndex'
p3863
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3864
I17
sS'task.thisRepN'
p3865
I0
sg72
g122
sS'practice_Afirst.thisN'
p3866
I0
sS'practice_trials_Afirst.thisRepN'
p3867
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3868
I0
sg26
F0.10744094848632812
sg67
g127
sg45
g12
sg23
F0.10775494575500488
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3869
I1
sg78
I3
sg79
I4
sa(dp3870
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3871
I0
sS'task.thisIndex'
p3872
g92
sS'practice_Afirst.thisIndex'
p3873
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3874
NsS'task.thisN'
p3875
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g247
sg16
g226
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3876
I0
sS'practice_trials_Afirst.thisIndex'
p3877
g41
(g91
S'\x00\x00\x00\x00'
tRp3878
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3879
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3880
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3881
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3882
NsS'practice_blocks.thisIndex'
p3883
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3884
I18
sS'task.thisRepN'
p3885
I0
sg72
g122
sS'practice_Afirst.thisN'
p3886
I0
sS'practice_trials_Afirst.thisRepN'
p3887
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3888
I0
sg26
F0.10844302177429199
sg67
g127
sg45
g12
sg23
F0.10865211486816406
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3889
I2
sg78
I3
sg79
I4
sa(dp3890
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3891
I0
sS'task.thisIndex'
p3892
g92
sS'practice_Afirst.thisIndex'
p3893
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3894
NsS'task.thisN'
p3895
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g247
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3896
I0
sS'practice_trials_Afirst.thisIndex'
p3897
g41
(g91
S'\x01\x00\x00\x00'
tRp3898
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3899
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3900
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3901
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3902
NsS'practice_blocks.thisIndex'
p3903
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3904
I19
sS'task.thisRepN'
p3905
I0
sg72
g122
sS'practice_Afirst.thisN'
p3906
I0
sS'practice_trials_Afirst.thisRepN'
p3907
I4
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3908
I0
sg26
F0.10590505599975586
sg67
g127
sg45
g12
sg23
F0.10619902610778809
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3909
I3
sg78
I3
sg79
I4
sa(dp3910
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3911
I0
sS'task.thisIndex'
p3912
g92
sS'practice_Afirst.thisIndex'
p3913
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3914
NsS'task.thisN'
p3915
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g160
sg16
g100
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3916
I0
sS'practice_trials_Afirst.thisIndex'
p3917
g41
(g91
S'\x02\x00\x00\x00'
tRp3918
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3919
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3920
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3921
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3922
NsS'practice_blocks.thisIndex'
p3923
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3924
I20
sS'task.thisRepN'
p3925
I0
sg72
g122
sS'practice_Afirst.thisN'
p3926
I0
sS'practice_trials_Afirst.thisRepN'
p3927
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3928
I0
sg26
F0.099952936172485352
sg67
g127
sg45
g12
sg23
F0.10014510154724121
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3929
I0
sg78
I3
sg79
I4
sa(dp3930
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3931
I0
sS'task.thisIndex'
p3932
g92
sS'practice_Afirst.thisIndex'
p3933
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3934
NsS'task.thisN'
p3935
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g349
sg16
g183
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3936
I0
sS'practice_trials_Afirst.thisIndex'
p3937
g41
(g91
S'\x03\x00\x00\x00'
tRp3938
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3939
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3940
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3941
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3942
NsS'practice_blocks.thisIndex'
p3943
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3944
I21
sS'task.thisRepN'
p3945
I0
sg72
g122
sS'practice_Afirst.thisN'
p3946
I0
sS'practice_trials_Afirst.thisRepN'
p3947
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3948
I0
sg26
F0.10115981101989746
sg67
g127
sg45
g12
sg23
F0.10134482383728027
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3949
I1
sg78
I3
sg79
I4
sa(dp3950
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3951
I0
sS'task.thisIndex'
p3952
g92
sS'practice_Afirst.thisIndex'
p3953
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3954
NsS'task.thisN'
p3955
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g182
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3956
I0
sS'practice_trials_Afirst.thisIndex'
p3957
g41
(g91
S'\x00\x00\x00\x00'
tRp3958
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3959
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3960
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3961
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3962
NsS'practice_blocks.thisIndex'
p3963
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3964
I22
sS'task.thisRepN'
p3965
I0
sg72
g122
sS'practice_Afirst.thisN'
p3966
I0
sS'practice_trials_Afirst.thisRepN'
p3967
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3968
I0
sg26
F0.10628604888916016
sg67
g127
sg45
g12
sg23
F0.10647010803222656
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3969
I2
sg78
I3
sg79
I4
sa(dp3970
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3971
I0
sS'task.thisIndex'
p3972
g92
sS'practice_Afirst.thisIndex'
p3973
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p3974
NsS'task.thisN'
p3975
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g288
sg16
g205
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p3976
I0
sS'practice_trials_Afirst.thisIndex'
p3977
g41
(g91
S'\x01\x00\x00\x00'
tRp3978
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3979
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p3980
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p3981
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p3982
NsS'practice_blocks.thisIndex'
p3983
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p3984
I23
sS'task.thisRepN'
p3985
I0
sg72
g122
sS'practice_Afirst.thisN'
p3986
I0
sS'practice_trials_Afirst.thisRepN'
p3987
I5
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p3988
I0
sg26
F0.1081998348236084
sg67
g127
sg45
g12
sg23
F0.10846400260925293
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p3989
I3
sg78
I3
sg79
I4
sa(dp3990
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p3991
I0
sS'task.thisIndex'
p3992
g92
sS'practice_Afirst.thisIndex'
p3993
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p3994
NsS'task.thisN'
p3995
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g99
sg16
g431
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p3996
I0
sS'practice_trials_Afirst.thisIndex'
p3997
g41
(g91
S'\x03\x00\x00\x00'
tRp3998
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p3999
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4000
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4001
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4002
NsS'practice_blocks.thisIndex'
p4003
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4004
I24
sS'task.thisRepN'
p4005
I0
sg72
g122
sS'practice_Afirst.thisN'
p4006
I0
sS'practice_trials_Afirst.thisRepN'
p4007
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4008
I0
sg26
F0.10653996467590332
sg67
g127
sg45
g12
sg23
F0.1071779727935791
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4009
I0
sg78
I3
sg79
I4
sa(dp4010
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4011
I0
sS'task.thisIndex'
p4012
g92
sS'practice_Afirst.thisIndex'
p4013
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p4014
NsS'task.thisN'
p4015
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g138
sg16
g100
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p4016
I0
sS'practice_trials_Afirst.thisIndex'
p4017
g41
(g91
S'\x00\x00\x00\x00'
tRp4018
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4019
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4020
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4021
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4022
NsS'practice_blocks.thisIndex'
p4023
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4024
I25
sS'task.thisRepN'
p4025
I0
sg72
g122
sS'practice_Afirst.thisN'
p4026
I0
sS'practice_trials_Afirst.thisRepN'
p4027
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4028
I0
sg26
F0.10323810577392578
sg67
g127
sg45
g12
sg23
F0.10344719886779785
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4029
I1
sg78
I3
sg79
I4
sa(dp4030
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4031
I0
sS'task.thisIndex'
p4032
g92
sS'practice_Afirst.thisIndex'
p4033
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p4034
NsS'task.thisN'
p4035
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g99
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p4036
I0
sS'practice_trials_Afirst.thisIndex'
p4037
g41
(g91
S'\x02\x00\x00\x00'
tRp4038
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4039
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4040
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4041
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4042
NsS'practice_blocks.thisIndex'
p4043
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4044
I26
sS'task.thisRepN'
p4045
I0
sg72
g122
sS'practice_Afirst.thisN'
p4046
I0
sS'practice_trials_Afirst.thisRepN'
p4047
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4048
I0
sg26
F0.10574889183044434
sg67
g127
sg45
g12
sg23
F0.10596704483032227
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4049
I2
sg78
I3
sg79
I4
sa(dp4050
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4051
I0
sS'task.thisIndex'
p4052
g92
sS'practice_Afirst.thisIndex'
p4053
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p4054
NsS'task.thisN'
p4055
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g138
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p4056
I0
sS'practice_trials_Afirst.thisIndex'
p4057
g41
(g91
S'\x01\x00\x00\x00'
tRp4058
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4059
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4060
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4061
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4062
NsS'practice_blocks.thisIndex'
p4063
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4064
I27
sS'task.thisRepN'
p4065
I0
sg72
g122
sS'practice_Afirst.thisN'
p4066
I0
sS'practice_trials_Afirst.thisRepN'
p4067
I6
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4068
I0
sg26
F0.10716390609741211
sg67
g127
sg45
g12
sg23
F0.10735702514648438
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4069
I3
sg78
I3
sg79
I4
sa(dp4070
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4071
I0
sS'task.thisIndex'
p4072
g92
sS'practice_Afirst.thisIndex'
p4073
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p4074
NsS'task.thisN'
p4075
I0
sg63
g97
sg3512
I1
sg64
g98
sg15
g182
sg16
g350
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p4076
I0
sS'practice_trials_Afirst.thisIndex'
p4077
g41
(g91
S'\x00\x00\x00\x00'
tRp4078
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4079
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4080
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4081
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4082
NsS'practice_blocks.thisIndex'
p4083
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4084
I28
sS'task.thisRepN'
p4085
I0
sg72
g122
sS'practice_Afirst.thisN'
p4086
I0
sS'practice_trials_Afirst.thisRepN'
p4087
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4088
I0
sg26
F0.10235309600830078
sg67
g127
sg45
g12
sg23
F0.10259103775024414
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4089
I0
sg78
I3
sg79
I4
sa(dp4090
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4091
I0
sS'task.thisIndex'
p4092
g92
sS'practice_Afirst.thisIndex'
p4093
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p4094
NsS'task.thisN'
p4095
I0
sg63
g97
sg3512
I3
sg64
g98
sg15
g204
sg16
g139
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p4096
I0
sS'practice_trials_Afirst.thisIndex'
p4097
g41
(g91
S'\x02\x00\x00\x00'
tRp4098
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4099
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4100
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4101
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4102
NsS'practice_blocks.thisIndex'
p4103
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4104
I29
sS'task.thisRepN'
p4105
I0
sg72
g122
sS'practice_Afirst.thisN'
p4106
I0
sS'practice_trials_Afirst.thisRepN'
p4107
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4108
I0
sg26
F0.10911703109741211
sg67
g127
sg45
g12
sg23
F0.10946893692016602
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vc
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4109
I1
sg78
I3
sg79
I4
sa(dp4110
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4111
I0
sS'task.thisIndex'
p4112
g92
sS'practice_Afirst.thisIndex'
p4113
g3509
sg21
Ve
sg40
g44
sS'practice_Afirst.thisTrial'
p4114
NsS'task.thisN'
p4115
I0
sg63
g97
sg3512
I2
sg64
g98
sg15
g138
sg16
g183
sg65
g101
sg24
Vi
sS'practice_blocks.thisTrialN'
p4116
I0
sS'practice_trials_Afirst.thisIndex'
p4117
g41
(g91
S'\x01\x00\x00\x00'
tRp4118
sg68
g105
sg20
g106
sg3516
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4119
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4120
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4121
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4122
NsS'practice_blocks.thisIndex'
p4123
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4124
I30
sS'task.thisRepN'
p4125
I0
sg72
g122
sS'practice_Afirst.thisN'
p4126
I0
sS'practice_trials_Afirst.thisRepN'
p4127
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4128
I0
sg26
F0.10467195510864258
sg67
g127
sg45
g12
sg23
F0.10488009452819824
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4129
I2
sg78
I3
sg79
I4
sa(dp4130
g57
g87
sg58
I0
sg59
g88
sS'practice_Afirst.thisTrialN'
p4131
I0
sS'task.thisIndex'
p4132
g92
sS'practice_Afirst.thisIndex'
p4133
g3509
sg21
Vi
sg40
g44
sS'practice_Afirst.thisTrial'
p4134
NsS'task.thisN'
p4135
I0
sg63
g97
sg3512
I4
sg64
g98
sg15
g349
sg16
g161
sg65
g101
sg24
Ve
sS'practice_blocks.thisTrialN'
p4136
I0
sS'practice_trials_Afirst.thisIndex'
p4137
g41
(g91
S'\x03\x00\x00\x00'
tRp4138
sg68
g105
sg20
g106
sg3516
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4139
I3
sg77
g112
sg22
I1
sS'practice_blocks.thisRepN'
p4140
I3
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4141
I0
sg25
I1
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4142
NsS'practice_blocks.thisIndex'
p4143
g3522
sg62
g119
sS'practice_trials_Afirst.thisN'
p4144
I31
sS'task.thisRepN'
p4145
I0
sg72
g122
sS'practice_Afirst.thisN'
p4146
I0
sS'practice_trials_Afirst.thisRepN'
p4147
I7
sg46
g47
sg36
V3
sg66
g125
sS'practice_Afirst.thisRepN'
p4148
I0
sg26
F0.10649681091308594
sg67
g127
sg45
g12
sg23
F0.10658121109008789
sg69
g128
sg38
Vm
sg39
V1
sg3528
Vd
sg73
g129
sg60
g130
sS'practice_trials_Afirst.thisTrialN'
p4149
I3
sg78
I3
sg79
I4
sa(dp4150
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4151
g92
sg40
g44
sS'task.thisN'
p4152
I0
sS'practice_trials_B.thisIndex'
p4153
g41
(g91
S'\x02\x00\x00\x00'
tRp4154
sg28
I1
sVtrialType
p4155
I3
sg64
g98
sg15
g99
sg32
F0.10371088981628418
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p4156
I0
sg68
g105
sg20
g106
sVstimulus1_category
p4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4158
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4159
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4160
NsS'practice_blocks.thisIndex'
p4161
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4162
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4163
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4164
I0
sS'task.thisRepN'
p4165
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sVstimulus2_category
p4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4167
I0
sg29
F0.1038968563079834
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4168
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4169
g92
sg40
g44
sS'task.thisN'
p4170
I0
sS'practice_trials_B.thisIndex'
p4171
g41
(g91
S'\x01\x00\x00\x00'
tRp4172
sg28
I1
sg4155
I2
sg64
g98
sg15
g138
sg32
F0.099178075790405273
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p4173
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4174
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4175
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4176
NsS'practice_blocks.thisIndex'
p4177
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4178
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4179
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4180
I1
sS'task.thisRepN'
p4181
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4182
I1
sg29
F0.09938502311706543
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4183
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4184
g92
sg40
g44
sS'task.thisN'
p4185
I0
sS'practice_trials_B.thisIndex'
p4186
g41
(g91
S'\x03\x00\x00\x00'
tRp4187
sg28
I1
sg4155
I4
sg64
g98
sg15
g204
sg32
F0.10511517524719238
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p4188
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4189
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4190
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4191
NsS'practice_blocks.thisIndex'
p4192
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4193
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4194
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4195
I2
sS'task.thisRepN'
p4196
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4197
I2
sg29
F0.10529994964599609
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4198
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4199
g92
sg40
g44
sS'task.thisN'
p4200
I0
sS'practice_trials_B.thisIndex'
p4201
g41
(g91
S'\x00\x00\x00\x00'
tRp4202
sg28
I1
sg4155
I1
sg64
g98
sg15
g247
sg32
F0.10954904556274414
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p4203
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4204
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4205
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4206
NsS'practice_blocks.thisIndex'
p4207
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4208
I0
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4209
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4210
I3
sS'task.thisRepN'
p4211
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4212
I3
sg29
F0.10981917381286621
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4213
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4214
g92
sg40
g44
sS'task.thisN'
p4215
I0
sS'practice_trials_B.thisIndex'
p4216
g41
(g91
S'\x02\x00\x00\x00'
tRp4217
sg28
I1
sg4155
I3
sg64
g98
sg15
g160
sg32
F0.10623598098754883
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p4218
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4219
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4220
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4221
NsS'practice_blocks.thisIndex'
p4222
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4223
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4224
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4225
I0
sS'task.thisRepN'
p4226
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4227
I4
sg29
F0.10652899742126465
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4228
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4229
g92
sg40
g44
sS'task.thisN'
p4230
I0
sS'practice_trials_B.thisIndex'
p4231
g41
(g91
S'\x01\x00\x00\x00'
tRp4232
sg28
I1
sg4155
I2
sg64
g98
sg15
g138
sg32
F0.10348916053771973
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p4233
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4234
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4235
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4236
NsS'practice_blocks.thisIndex'
p4237
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4238
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4239
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4240
I1
sS'task.thisRepN'
p4241
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4242
I5
sg29
F0.10368895530700684
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4243
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4244
g92
sg40
g44
sS'task.thisN'
p4245
I0
sS'practice_trials_B.thisIndex'
p4246
g41
(g91
S'\x03\x00\x00\x00'
tRp4247
sg28
I1
sg4155
I4
sg64
g98
sg15
g204
sg32
F0.096250057220458984
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p4248
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4249
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4250
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4251
NsS'practice_blocks.thisIndex'
p4252
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4253
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4254
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4255
I2
sS'task.thisRepN'
p4256
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4257
I6
sg29
F0.096458911895751953
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4258
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4259
g92
sg40
g44
sS'task.thisN'
p4260
I0
sS'practice_trials_B.thisIndex'
p4261
g41
(g91
S'\x00\x00\x00\x00'
tRp4262
sg28
I1
sg4155
I1
sg64
g98
sg15
g182
sg32
F0.10174107551574707
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p4263
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4264
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4265
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4266
NsS'practice_blocks.thisIndex'
p4267
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4268
I1
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4269
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4270
I3
sS'task.thisRepN'
p4271
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4272
I7
sg29
F0.1020200252532959
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4273
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4274
g92
sg40
g44
sS'task.thisN'
p4275
I0
sS'practice_trials_B.thisIndex'
p4276
g41
(g91
S'\x00\x00\x00\x00'
tRp4277
sg28
I1
sg4155
I1
sg64
g98
sg15
g182
sg32
F0.11088395118713379
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p4278
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4279
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4280
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4281
NsS'practice_blocks.thisIndex'
p4282
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4283
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4284
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4285
I0
sS'task.thisRepN'
p4286
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4287
I8
sg29
F0.11109209060668945
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4288
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4289
g92
sg40
g44
sS'task.thisN'
p4290
I0
sS'practice_trials_B.thisIndex'
p4291
g41
(g91
S'\x02\x00\x00\x00'
tRp4292
sg28
I1
sg4155
I3
sg64
g98
sg15
g349
sg32
F0.098105907440185547
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p4293
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4294
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4295
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4296
NsS'practice_blocks.thisIndex'
p4297
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4298
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4299
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4300
I1
sS'task.thisRepN'
p4301
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4302
I9
sg29
F0.09838104248046875
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4303
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4304
g92
sg40
g44
sS'task.thisN'
p4305
I0
sS'practice_trials_B.thisIndex'
p4306
g41
(g91
S'\x03\x00\x00\x00'
tRp4307
sg28
I1
sg4155
I4
sg64
g98
sg15
g160
sg32
F0.10679197311401367
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p4308
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4309
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4310
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4311
NsS'practice_blocks.thisIndex'
p4312
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4313
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4314
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4315
I2
sS'task.thisRepN'
p4316
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4317
I10
sg29
F0.10697698593139648
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4318
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4319
g92
sg40
g44
sS'task.thisN'
p4320
I0
sS'practice_trials_B.thisIndex'
p4321
g41
(g91
S'\x01\x00\x00\x00'
tRp4322
sg28
I1
sg4155
I2
sg64
g98
sg15
g288
sg32
F0.10751986503601074
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p4323
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4324
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4325
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4326
NsS'practice_blocks.thisIndex'
p4327
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4328
I2
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4329
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4330
I3
sS'task.thisRepN'
p4331
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4332
I11
sg29
F0.10770201683044434
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4333
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4334
g92
sg40
g44
sS'task.thisN'
p4335
I0
sS'practice_trials_B.thisIndex'
p4336
g41
(g91
S'\x00\x00\x00\x00'
tRp4337
sg28
I1
sg4155
I1
sg64
g98
sg15
g182
sg32
F0.10526609420776367
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p4338
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4339
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4340
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4341
NsS'practice_blocks.thisIndex'
p4342
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4343
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4344
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4345
I0
sS'task.thisRepN'
p4346
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4347
I12
sg29
F0.10550689697265625
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4348
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4349
g92
sg40
g44
sS'task.thisN'
p4350
I0
sS'practice_trials_B.thisIndex'
p4351
g41
(g91
S'\x02\x00\x00\x00'
tRp4352
sg28
I1
sg4155
I3
sg64
g98
sg15
g204
sg32
F0.1087501049041748
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p4353
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4354
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4355
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4356
NsS'practice_blocks.thisIndex'
p4357
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4358
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4359
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4360
I1
sS'task.thisRepN'
p4361
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4362
I13
sg29
F0.10907316207885742
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4363
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4364
g92
sg40
g44
sS'task.thisN'
p4365
I0
sS'practice_trials_B.thisIndex'
p4366
g41
(g91
S'\x03\x00\x00\x00'
tRp4367
sg28
I1
sg4155
I4
sg64
g98
sg15
g349
sg32
F0.1001129150390625
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p4368
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4369
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4370
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4371
NsS'practice_blocks.thisIndex'
p4372
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4373
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4374
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4375
I2
sS'task.thisRepN'
p4376
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4377
I14
sg29
F0.10034584999084473
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4378
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4379
g92
sg40
g44
sS'task.thisN'
p4380
I0
sS'practice_trials_B.thisIndex'
p4381
g41
(g91
S'\x01\x00\x00\x00'
tRp4382
sg28
I1
sg4155
I2
sg64
g98
sg15
g182
sg32
F0.10589385032653809
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p4383
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4384
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4385
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4386
NsS'practice_blocks.thisIndex'
p4387
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4388
I3
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4389
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4390
I3
sS'task.thisRepN'
p4391
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4392
I15
sg29
F0.10616016387939453
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4393
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4394
g92
sg40
g44
sS'task.thisN'
p4395
I0
sS'practice_trials_B.thisIndex'
p4396
g41
(g91
S'\x00\x00\x00\x00'
tRp4397
sg28
I1
sg4155
I1
sg64
g98
sg15
g247
sg32
F0.10181617736816406
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p4398
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4399
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4400
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4401
NsS'practice_blocks.thisIndex'
p4402
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4403
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4404
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4405
I0
sS'task.thisRepN'
p4406
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4407
I16
sg29
F0.10211992263793945
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4408
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4409
g92
sg40
g44
sS'task.thisN'
p4410
I0
sS'practice_trials_B.thisIndex'
p4411
g41
(g91
S'\x03\x00\x00\x00'
tRp4412
sg28
I1
sg4155
I4
sg64
g98
sg15
g204
sg32
F0.097976922988891602
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p4413
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4414
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4415
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4416
NsS'practice_blocks.thisIndex'
p4417
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4418
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4419
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4420
I1
sS'task.thisRepN'
p4421
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4422
I17
sg29
F0.09813380241394043
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4423
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4424
g92
sg40
g44
sS'task.thisN'
p4425
I0
sS'practice_trials_B.thisIndex'
p4426
g41
(g91
S'\x02\x00\x00\x00'
tRp4427
sg28
I1
sg4155
I3
sg64
g98
sg15
g349
sg32
F0.10187411308288574
sg31
I1
sg16
g226
sg65
g101
sS'practice_blocks.thisTrialN'
p4428
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4429
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4430
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4431
NsS'practice_blocks.thisIndex'
p4432
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4433
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4434
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4435
I2
sS'task.thisRepN'
p4436
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4437
I18
sg29
F0.10222911834716797
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4438
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4439
g92
sg40
g44
sS'task.thisN'
p4440
I0
sS'practice_trials_B.thisIndex'
p4441
g41
(g91
S'\x01\x00\x00\x00'
tRp4442
sg28
I1
sg4155
I2
sg64
g98
sg15
g247
sg32
F0.099760055541992188
sg31
I1
sg16
g205
sg65
g101
sS'practice_blocks.thisTrialN'
p4443
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4444
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4445
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4446
NsS'practice_blocks.thisIndex'
p4447
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4448
I4
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4449
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4450
I3
sS'task.thisRepN'
p4451
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4452
I19
sg29
F0.099931955337524414
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4453
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4454
g92
sg40
g44
sS'task.thisN'
p4455
I0
sS'practice_trials_B.thisIndex'
p4456
g41
(g91
S'\x01\x00\x00\x00'
tRp4457
sg28
I1
sg4155
I2
sg64
g98
sg15
g288
sg32
F0.10229587554931641
sg31
I1
sg16
g431
sg65
g101
sS'practice_blocks.thisTrialN'
p4458
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4459
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4460
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4461
NsS'practice_blocks.thisIndex'
p4462
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4463
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4464
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4465
I0
sS'task.thisRepN'
p4466
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4467
I20
sg29
F0.10261011123657227
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4468
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4469
g92
sg40
g44
sS'task.thisN'
p4470
I0
sS'practice_trials_B.thisIndex'
p4471
g41
(g91
S'\x03\x00\x00\x00'
tRp4472
sg28
I1
sg4155
I4
sg64
g98
sg15
g99
sg32
F0.10770201683044434
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p4473
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4474
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4475
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4476
NsS'practice_blocks.thisIndex'
p4477
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4478
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4479
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4480
I1
sS'task.thisRepN'
p4481
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4482
I21
sg29
F0.10786104202270508
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4483
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4484
g92
sg40
g44
sS'task.thisN'
p4485
I0
sS'practice_trials_B.thisIndex'
p4486
g41
(g91
S'\x02\x00\x00\x00'
tRp4487
sg28
I1
sg4155
I3
sg64
g98
sg15
g99
sg32
F0.099801063537597656
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p4488
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4489
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4490
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4491
NsS'practice_blocks.thisIndex'
p4492
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4493
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4494
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4495
I2
sS'task.thisRepN'
p4496
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4497
I22
sg29
F0.10791110992431641
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4498
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4499
g92
sg40
g44
sS'task.thisN'
p4500
I0
sS'practice_trials_B.thisIndex'
p4501
g41
(g91
S'\x00\x00\x00\x00'
tRp4502
sg28
I1
sg4155
I1
sg64
g98
sg15
g138
sg32
F0.10496783256530762
sg31
I1
sg16
g139
sg65
g101
sS'practice_blocks.thisTrialN'
p4503
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4504
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4505
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4506
NsS'practice_blocks.thisIndex'
p4507
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4508
I5
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4509
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4510
I3
sS'task.thisRepN'
p4511
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4512
I23
sg29
F0.105316162109375
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4513
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4514
g92
sg40
g44
sS'task.thisN'
p4515
I0
sS'practice_trials_B.thisIndex'
p4516
g41
(g91
S'\x03\x00\x00\x00'
tRp4517
sg28
I1
sg4155
I4
sg64
g98
sg15
g160
sg32
F0.10536503791809082
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p4518
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4519
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4520
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4521
NsS'practice_blocks.thisIndex'
p4522
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4523
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4524
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4525
I0
sS'task.thisRepN'
p4526
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4527
I24
sg29
F0.10556292533874512
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4528
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4529
g92
sg40
g44
sS'task.thisN'
p4530
I0
sS'practice_trials_B.thisIndex'
p4531
g41
(g91
S'\x02\x00\x00\x00'
tRp4532
sg28
I1
sg4155
I3
sg64
g98
sg15
g99
sg32
F0.10388302803039551
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p4533
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4534
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4535
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4536
NsS'practice_blocks.thisIndex'
p4537
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4538
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4539
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4540
I1
sS'task.thisRepN'
p4541
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4542
I25
sg29
F0.1040489673614502
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4543
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4544
g92
sg40
g44
sS'task.thisN'
p4545
I0
sS'practice_trials_B.thisIndex'
p4546
g41
(g91
S'\x00\x00\x00\x00'
tRp4547
sg28
I1
sg4155
I1
sg64
g98
sg15
g288
sg32
F0.11036801338195801
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p4548
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4549
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4550
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4551
NsS'practice_blocks.thisIndex'
p4552
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4553
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4554
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4555
I2
sS'task.thisRepN'
p4556
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4557
I26
sg29
F0.11075997352600098
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4558
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4559
g92
sg40
g44
sS'task.thisN'
p4560
I0
sS'practice_trials_B.thisIndex'
p4561
g41
(g91
S'\x01\x00\x00\x00'
tRp4562
sg28
I1
sg4155
I2
sg64
g98
sg15
g288
sg32
F0.10756587982177734
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p4563
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4564
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4565
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4566
NsS'practice_blocks.thisIndex'
p4567
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4568
I6
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4569
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4570
I3
sS'task.thisRepN'
p4571
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4572
I27
sg29
F0.10771799087524414
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4573
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4574
g92
sg40
g44
sS'task.thisN'
p4575
I0
sS'practice_trials_B.thisIndex'
p4576
g41
(g91
S'\x03\x00\x00\x00'
tRp4577
sg28
I1
sg4155
I4
sg64
g98
sg15
g349
sg32
F0.10948491096496582
sg31
I1
sg16
g161
sg65
g101
sS'practice_blocks.thisTrialN'
p4578
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4579
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4580
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4581
NsS'practice_blocks.thisIndex'
p4582
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4583
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4584
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4585
I0
sS'task.thisRepN'
p4586
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4587
I28
sg29
F0.11037802696228027
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4588
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4589
g92
sg40
g44
sS'task.thisN'
p4590
I0
sS'practice_trials_B.thisIndex'
p4591
g41
(g91
S'\x01\x00\x00\x00'
tRp4592
sg28
I1
sg4155
I2
sg64
g98
sg15
g138
sg32
F0.11771607398986816
sg31
I1
sg16
g183
sg65
g101
sS'practice_blocks.thisTrialN'
p4593
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4594
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4595
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4596
NsS'practice_blocks.thisIndex'
p4597
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4598
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4599
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4600
I1
sS'task.thisRepN'
p4601
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vd
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4602
I29
sg29
F0.11790800094604492
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sa(dp4603
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4604
g92
sg40
g44
sS'task.thisN'
p4605
I0
sS'practice_trials_B.thisIndex'
p4606
g41
(g91
S'\x00\x00\x00\x00'
tRp4607
sg28
I1
sg4155
I1
sg64
g98
sg15
g247
sg32
F0.10034298896789551
sg31
I1
sg16
g100
sg65
g101
sS'practice_blocks.thisTrialN'
p4608
I0
sg68
g105
sg20
g106
sg4157
Va
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4609
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4610
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4611
NsS'practice_blocks.thisIndex'
p4612
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4613
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4614
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4615
I2
sS'task.thisRepN'
p4616
I0
sg30
Vi
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4617
I30
sg29
F0.10049581527709961
sg78
I3
sg79
I4
sg63
g97
sg27
Ve
sa(dp4618
g57
g87
sg58
I0
sg59
g88
sS'task.thisIndex'
p4619
g92
sg40
g44
sS'task.thisN'
p4620
I0
sS'practice_trials_B.thisIndex'
p4621
g41
(g91
S'\x02\x00\x00\x00'
tRp4622
sg28
I1
sg4155
I3
sg64
g98
sg15
g160
sg32
F0.10152101516723633
sg31
I1
sg16
g350
sg65
g101
sS'practice_blocks.thisTrialN'
p4623
I0
sg68
g105
sg20
g106
sg4157
Vb
sg70
g107
sg71
g108
sg17
g109
sg18
g109
sg74
g106
sg75
g110
sg76
I0
sS'practice_blocks.thisN'
p4624
I3
sg77
g112
sg80
g114
sg19
g110
sS'task.thisTrialN'
p4625
I0
sg45
g12
sg37
Vy
sg61
g61
sg48
Va
sS'practice_blocks.thisTrial'
p4626
NsS'practice_blocks.thisIndex'
p4627
g3522
sg62
g119
sS'practice_trials_B.thisRepN'
p4628
I7
sg72
g122
sg46
g47
sg36
V3
sg66
g125
sS'practice_blocks.thisRepN'
p4629
I3
sg67
g127
sS'practice_trials_B.thisTrialN'
p4630
I3
sS'task.thisRepN'
p4631
I0
sg30
Ve
sg69
g128
sg38
Vm
sg39
V1
sg4166
Vc
sg73
g129
sg60
g130
sS'practice_trials_B.thisN'
p4632
I31
sg29
F0.10180783271789551
sg78
I3
sg79
I4
sg63
g97
sg27
Vi
sasS'loops'
p4633
(lp4634
g1
(cpsychopy.data
TrialHandler
p4635
g3
NtRp4636
(dp4637
S'origin'
p4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4639
sS'thisTrial'
p4640
(lp4641
sS'_exp'
p4642
I207393264
sg11
S'task'
p4643
sg6
g7
sS'thisRepN'
p4644
I1
sg33
I01
sg34
g35
sS'data'
p4645
g1
(cpsychopy.data
DataHandler
p4646
c__builtin__
dict
p4647
(dp4648
S'ran'
p4649
cnumpy.ma.core
_mareconstruct
p4650
(cnumpy.ma.core
MaskedArray
p4651
cnumpy
ndarray
p4652
(I0
tp4653
S'b'
tRp4654
(I1
(I1
I1
tg42
(S'f4'
I0
I1
tRp4655
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?'
S'\x00'
NtbsS'order'
p4656
g4650
(g4651
g4652
g4653
S'b'
tRp4657
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp4658
(dp4659
S'isNumeric'
p4660
(dp4661
g4649
I01
sg4656
I01
ssS'trials'
p4662
g4636
sS'dataTypes'
p4663
(lp4664
g4649
ag4656
asS'dataShape'
p4665
(lp4666
I1
aI1
asbsS'method'
p4667
S'sequential'
p4668
sS'sequenceIndices'
p4669
cnumpy.core.multiarray
_reconstruct
p4670
(g4652
(I0
tS'b'
tRp4671
(I1
(I1
I1
tg91
I00
S'\x00\x00\x00\x00'
tbsS'finished'
p4672
I01
sS'nReps'
p4673
I1
sS'nRemaining'
p4674
I-1
sS'trialList'
p4675
(lp4676
g1
(cpsychopy.data
TrialType
p4677
g4647
(dp4678
g57
g87
sg58
I0
sg59
g88
sg61
g61
sg62
g119
sg63
g97
sg64
g98
sg65
g101
sg66
g125
sg67
g127
sg68
g105
sg69
g128
sg70
g107
sg71
g108
sg72
g122
sg73
g129
sg74
g106
sg75
g110
sg60
g130
sg77
g112
sg78
I3
sg79
I4
sg76
I0
sg80
g114
stRp4679
asS'seed'
p4680
NsS'thisIndex'
p4681
g92
sS'thisN'
p4682
I1
sS'thisTrialN'
p4683
I0
sS'nTotal'
p4684
I1
sS'_warnUseOfNext'
p4685
I01
sbag1
(g4635
g3
NtRp4686
(dp4687
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4688
sg4640
(lp4689
sg4642
I207393264
sg11
S'practice_blocks'
p4690
sg6
g7
sg4644
I4
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4691
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4692
(I1
(I1
I4
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4693
(I1
(I1
I4
tg4655
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@'
S'\x00\x00\x00\x00'
NtbstRp4694
(dp4695
g4660
(dp4696
g4649
I01
sg4656
I01
ssg4662
g4686
sg4663
(lp4697
g4649
ag4656
asg4665
(lp4698
I1
aI4
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4699
(I1
(I1
I4
tg91
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I4
sg4674
I-1
sg4675
(lp4700
Nasg4680
Nsg4681
g3522
sg4682
I4
sg4683
I0
sg4684
I4
sg4685
I01
sbag1
(g4635
g3
NtRp4701
(dp4702
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4703
sg4640
(lp4704
sg4642
I207393264
sg11
S'practice_Afirst'
p4705
sg6
g7
sg4644
I1
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4706
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4707
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4708
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp4709
(dp4710
g4660
(dp4711
g4649
I01
sg4656
I01
ssg4662
g4701
sg4663
(lp4712
g4649
ag4656
asg4665
(lp4713
I1
aI1
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4714
(I1
(I1
I1
tg91
I00
S'\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I1
sg4674
I-1
sg4675
(lp4715
Nasg4680
Nsg4681
g94
sg4682
I1
sg4683
I0
sg4684
I1
sg4685
I01
sbag1
(g4635
g3
NtRp4716
(dp4717
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4718
sg4640
(lp4719
sg4642
I207393264
sg11
S'practice_trials_Afirst'
p4720
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4721
g23
g4650
(g4651
g4652
g4653
S'b'
tRp4722
(I1
(I4
I8
tg4655
I00
S'\xc0\xd7\xde= \x82\xc6=\xc0\xa7\xce= R\xda=\xc0\xc8\xdd=\x00Y\xd2=\x80\xdc\xd3=@\x98\xd8= \xea\xcc= \x02\xe3= \x18\xd2=\xe0\x7f\xd9=@C\xd8=\xe0\xb3\x00> #\t>@\x0e\xd5= \xb7\xdc= \xb7\xd8=\x80D\xde=@\x8d\xd8=\xe0s\xdc=`B\xda=\x00R\xe2=\xa0\xe1\xd8= \xba\xd5= \xda\xe7=\xc0\xc6\xd9= \xb3\xd3=\x806\xd9=\xc0\xf1\xe0=@\xcb\xd3=\xc0\xad\xd7='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g4650
(g4651
g4652
g4653
S'b'
tRp4723
(I1
(I4
I8
tg4655
I00
S'\xe0b\xde=\x00\xdc\xc5=\x005\xce= \xe4\xd9=\xa0\x90\xdd=`\xbc\xd1=\xe0\x1f\xd3=\x805\xd8=\xa0\x88\xcc=`\x85\xe2=\x00\xb6\xd1=\xa0"\xd9=`\x8f\xd7=\xc0\x81\x00>\xd0t\x08>\x80\x9f\xd4=\xc0\xb3\xd6=\xe0E\xd8=@\xff\xdd=\x00\x15\xd8=\x80\t\xdc=\xc0\xd2\xd9=@\xe0\xe1=\xc0\x84\xd8=\x00\t\xd5=\xc0\xb3\xe7=\xe0^\xd9=\x00P\xd3=`{\xd8=\xe0^\xdd=\x80d\xd3=\x80P\xd7='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4724
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g4670
(g4652
(I0
tS'b'
tRp4725
(I1
(I4
I8
tg42
(S'O4'
I0
I1
tRp4726
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp4727
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg24
g4670
(g4652
(I0
tS'b'
tRp4728
(I1
(I4
I8
tg4726
I00
(lp4729
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbsg25
g4650
(g4651
g4652
g4653
S'b'
tRp4730
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g4650
(g4651
g4652
g4653
S'b'
tRp4731
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4732
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\xa0@\x00\x00 A\x00\x00`A\x00\x00\x90A\x00\x00\xa0A\x00\x00\xc8A\x00\x00\xe0A\x00\x00@@\x00\x00\xc0@\x00\x00\x00A\x00\x00pA\x00\x00\x88A\x00\x00\xb0A\x00\x00\xc0A\x00\x00\xe8A\x00\x00\x00\x00\x00\x00\xe0@\x00\x000A\x00\x00@A\x00\x00\x98A\x00\x00\xa8A\x00\x00\xd0A\x00\x00\xf0A\x00\x00\x00@\x00\x00\x80@\x00\x00\x10A\x00\x00PA\x00\x00\x80A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xf8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp4733
(dp4734
g4660
(dp4735
g23
I01
sg26
I01
sg4649
I01
sg21
I00
sg4656
I01
sg25
I01
sg22
I01
sg24
I00
ssg4662
g4716
sg4663
(lp4736
g4649
ag4656
ag21
ag22
ag23
ag24
ag25
ag26
asg4665
(lp4737
I4
aI8
asbsg4667
S'random'
p4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4739
(I1
(I4
I8
tg91
I01
S'\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4740
g1
(g4677
g4647
(dp4741
g81
I1
sg82
Va
sg83
Vc
stRp4742
ag1
(g4677
g4647
(dp4743
g81
I2
sg82
Va
sg83
Vd
stRp4744
ag1
(g4677
g4647
(dp4745
g81
I3
sg82
Vb
sg83
Vc
stRp4746
ag1
(g4677
g4647
(dp4747
g81
I4
sg82
Vb
sg83
Vd
stRp4748
asg4680
Nsg4681
g754
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4749
(dp4750
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4751
sg4640
(lp4752
sg4642
I207393264
sg11
S'practice_trials_B'
p4753
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4754
g30
g4670
(g4652
(I0
tS'b'
tRp4755
(I1
(I4
I8
tg4726
I00
(lp4756
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4757
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g4650
(g4651
g4652
g4653
S'b'
tRp4758
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg29
g4650
(g4651
g4652
g4653
S'b'
tRp4759
(I1
(I4
I8
tg4655
I00
S'\xe0l\xda=\xc0\x07\xd6=\x00Y\xd2=\x80\xd9\xd6=@\x15\xd0=p)L>\x80e\xde=`\xea\xe0= T\xd7=@\x98\xd8=\xa0\xcd\xd5=\xe0H\xd6=\x80\xd1\xde=\x00o\xd3=@\xeb\xcb=\x80\xcf\xcf=`\x8c\xd6=@\x9c\xdd= \xcd\xd5=\xc0{\xca=`\xa7\xc2=\xa0\x01\xe0=\x80\xee\xcb= o\xd9=\xc0\t\xc5=\xe0A\xd7=\xa0+\xc7=\xc0\xdf\x08>@\xf9\xd1=\x80*\xdc=\x80\xc8\xdb=`\xa3\xda='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g4650
(g4651
g4652
g4653
S'b'
tRp4760
(I1
(I4
I8
tg4655
I00
S'`\xd5\xd9= \xa3\xd5= \xf8\xd1= p\xd6=\xc0Z\xce=\xf0\xf8K>\xc0d\xdc=`X\xde=\x00\xa5\xd6=\xc0.\xd8=\xe0\x1c\xd5=\x80\x92\xd4=\x80\\\xde= \x06\xd3=\xe0r\xcb=\xa0\xea\xc9=`T\xd6=@\xba\xdc=\x007\xd5=`\x8f\xc9=\xc0\n\xc2=@m\xdf=`\x7f\xcb=@\x06\xd9=\x00\xa3\xc4=\xc0\xf5\xd6=\xc0\xce\xc6=0\x06\x08>`$\xd1=@!\xdb=\x00\x9c\xda=\xa0\xf0\xd9='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg31
g4650
(g4651
g4652
g4653
S'b'
tRp4761
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4762
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\xc0@\x00\x00 A\x00\x00@A\x00\x00\x98A\x00\x00\xb8A\x00\x00\xd0A\x00\x00\xf8A\x00\x00\x00@\x00\x00\xe0@\x00\x000A\x00\x00pA\x00\x00\x88A\x00\x00\xa0A\x00\x00\xc0A\x00\x00\xe8A\x00\x00@@\x00\x00\xa0@\x00\x00\x10A\x00\x00PA\x00\x00\x80A\x00\x00\xa8A\x00\x00\xc8A\x00\x00\xf0A\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x00A\x00\x00`A\x00\x00\x90A\x00\x00\xb0A\x00\x00\xd8A\x00\x00\xe0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g4670
(g4652
(I0
tS'b'
tRp4763
(I1
(I4
I8
tg4726
I00
(lp4764
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbstRp4765
(dp4766
g4660
(dp4767
g30
I00
sg4649
I01
sg28
I01
sg29
I01
sg32
I01
sg31
I01
sg4656
I01
sg27
I00
ssg4662
g4749
sg4663
(lp4768
g4649
ag4656
ag27
ag28
ag29
ag30
ag31
ag32
asg4665
(lp4769
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4770
(I1
(I4
I8
tg91
I01
S'\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4771
g1
(g4677
g4647
(dp4772
g771
I1
sg773
Va
sg782
Vc
stRp4773
ag1
(g4677
g4647
(dp4774
g771
I2
sg773
Va
sg782
Vd
stRp4775
ag1
(g4677
g4647
(dp4776
g771
I3
sg773
Vb
sg782
Vc
stRp4777
ag1
(g4677
g4647
(dp4778
g771
I4
sg773
Vb
sg782
Vd
stRp4779
asg4680
Nsg4681
g1238
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4780
(dp4781
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4782
sg4640
(lp4783
sg4642
I207393264
sg11
S'practice_Asecond'
p4784
sg6
g7
sg4644
I0
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4785
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4786
(I1
(I1
I0
tg4655
I00
S''
S''
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4787
(I1
(I1
I0
tg4655
I00
S''
S''
NtbstRp4788
(dp4789
g4660
(dp4790
g4649
I01
sg4656
I01
ssg4662
g4780
sg4663
(lp4791
g4649
ag4656
asg4665
(lp4792
I1
aI0
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4793
(I1
(I1
I0
tg91
I00
S''
tbsg4672
I01
sg4673
I0
sg4674
I-1
sg4675
(lp4794
Nasg4680
Nsg4681
I0
sg4682
I0
sg4683
I0
sg4684
I0
sg4685
I01
sbag1
(g4635
g3
NtRp4795
(dp4796
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4797
sg4640
(lp4798
sg4642
I207393264
sg11
g4705
sg6
g7
sg4644
I1
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4799
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4800
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4801
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp4802
(dp4803
g4660
(dp4804
g4649
I01
sg4656
I01
ssg4662
g4795
sg4663
(lp4805
g4649
ag4656
asg4665
(lp4806
I1
aI1
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4807
(I1
(I1
I1
tg91
I00
S'\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I1
sg4674
I-1
sg4675
(lp4808
Nasg4680
Nsg4681
g1253
sg4682
I1
sg4683
I0
sg4684
I1
sg4685
I01
sbag1
(g4635
g3
NtRp4809
(dp4810
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4811
sg4640
(lp4812
sg4642
I207393264
sg11
g4720
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4813
g23
g4650
(g4651
g4652
g4653
S'b'
tRp4814
(I1
(I4
I8
tg4655
I00
S'\xc01\xd2=\xe0P\xdf=\xe0\xe0\xdd=\x00*\xd9=\x80\x89\xd8=@\xbf\xd6=\x80\xa8\xd1=`\xec\xd6=\x804\xbf= ]\xdb= \xb6\xde=\x80\xbe\xd4=\xc0\x93\xdd=@Z\xdc= "\xd2=`\x05\xcd=\x00\xf5\xd5=\xe0\x01\xd0=`\x12\xd5=`;\xca=\x80=\xdf=\x00\xe0\xd1=\x80\xd2\xd4=\x80\x92\xd4=\xa0.\xc7=\xe0\xf2\xd8=`\xee\xde= \xfe\xda=@~\xdd=\xa0\x18\xd6=@P\xca=@\xca\xcb='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g4650
(g4651
g4652
g4653
S'b'
tRp4815
(I1
(I4
I8
tg4655
I00
S' [\xc1=\xe0\xad\xde=@\x88\xdd=\xc0\xcf\xd8=\x80\xdb\xd7=\xa0E\xd6=\x00?\xd1=\x80\x0c\xd6=\x80\x18\xb3=\x80\xbc\xda=`L\xde= *\xd4= %\xdd=\x00\xea\xdb=\x80\x93\xd1=\x00q\xcc=@\x89\xcf=\x80n\xcf=\xc0\xb9\xd4= \xcc\xc9=\xa0\xd3\xde=\xa0w\xd1=\x00r\xd4= \x12\xd3=@J\xc5=`\xdd\xd8=\x80;\xde=\xa0\x9c\xda=\xc0%\xdd=\x00\xc1\xd5=\x80\x88\xc9=\xc0q\xcb='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4816
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g4670
(g4652
(I0
tS'b'
tRp4817
(I1
(I4
I8
tg4726
I00
(lp4818
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg24
g4670
(g4652
(I0
tS'b'
tRp4819
(I1
(I4
I8
tg4726
I00
(lp4820
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbsg25
g4650
(g4651
g4652
g4653
S'b'
tRp4821
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g4650
(g4651
g4652
g4653
S'b'
tRp4822
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4823
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x00A\x00\x00PA\x00\x00\x90A\x00\x00\xb8A\x00\x00\xc8A\x00\x00\xe8A\x00\x00@@\x00\x00\xc0@\x00\x00\x10A\x00\x00`A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xd8A\x00\x00\xf8A\x00\x00\x00@\x00\x00\xa0@\x00\x000A\x00\x00pA\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\x80?\x00\x00\xe0@\x00\x00 A\x00\x00@A\x00\x00\x80A\x00\x00\xb0A\x00\x00\xd0A\x00\x00\xe0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp4824
(dp4825
g4660
(dp4826
g23
I01
sg26
I01
sg4649
I01
sg21
I00
sg4656
I01
sg25
I01
sg22
I01
sg24
I00
ssg4662
g4809
sg4663
(lp4827
g4649
ag4656
ag21
ag22
ag23
ag24
ag25
ag26
asg4665
(lp4828
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4829
(I1
(I4
I8
tg91
I01
S'\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4830
g1
(g4677
g4647
(dp4831
g1256
I1
sg1260
Va
sg1272
Vc
stRp4832
ag1
(g4677
g4647
(dp4833
g1256
I2
sg1260
Va
sg1272
Vd
stRp4834
ag1
(g4677
g4647
(dp4835
g1256
I3
sg1260
Vb
sg1272
Vc
stRp4836
ag1
(g4677
g4647
(dp4837
g1256
I4
sg1260
Vb
sg1272
Vd
stRp4838
asg4680
Nsg4681
g1882
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4839
(dp4840
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4841
sg4640
(lp4842
sg4642
I207393264
sg11
g4753
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4843
g30
g4670
(g4652
(I0
tS'b'
tRp4844
(I1
(I4
I8
tg4726
I00
(lp4845
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4846
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g4650
(g4651
g4652
g4653
S'b'
tRp4847
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg29
g4650
(g4651
g4652
g4653
S'b'
tRp4848
(I1
(I4
I8
tg4655
I00
S'\xc0G\xd2=\x00\x80\xc6=`\x00\xd3=\xc0\xc0\xd6=@\x8f\xd8=\xa0\x8d\xd5= Z\xd5=\xe0\xbd\xcd=\x80\x8c\xcf=\x80u\xdf=\xe0h\xd1=@z\xcd=\xa0\r\xd9=\x80A\xcb=\x80\x91\xd4=\xc0_\xcf=\xc0M\xdc=\xc0:\xe0=\xa0\xa3\xd9=@\x13\xda=\xc0n\xd8=\x80\x1d\xdf=\x80\x8c\xd2=@\x1e\xe1=\xe0\x9f\xb9=\xe03\xdc=\xa0\x1a\xcf=\x00;\xd3=\xe0\xa8\xd9=\x00\xc9\xca=`\x8c\xdd=`\x93\xca='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g4650
(g4651
g4652
g4653
S'b'
tRp4849
(I1
(I4
I8
tg4655
I00
S'\xa0\xf7\xd0=\xa0@\xc6=\xc0\xa6\xd2=\x00Y\xd6=\xc0A\xd8=\x00*\xd5=@\xef\xd4=`$\xcd=\x00\xf8\xce=\x80\xfd\xde=\xc0\x01\xd1=\x00\x1e\xcd=\x80\x9f\xd8=\xe0\xf2\xca=`\x04\xd4= \x0f\xcf=\x80\xdc\xdb=@\xaf\xdf= ~\xda=\xa0\xa6\xd9=@l\xd7=\xe0\xae\xde=`\x13\xd2= \xa6\xe0= %\xb9=\xe0\xc5\xdb=\xc0\xbd\xce=\xa0\x82\xd2=\x80@\xd9=\x80`\xca= \x0f\xdd=\xc0\xa7\xc7='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg31
g4650
(g4651
g4652
g4653
S'b'
tRp4850
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4851
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\xe0@\x00\x00\x10A\x00\x00pA\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc8A\x00\x00\xf0A\x00\x00\x00\x00\x00\x00\xa0@\x00\x00 A\x00\x00PA\x00\x00\x98A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xf8A\x00\x00@@\x00\x00\xc0@\x00\x00\x00A\x00\x00`A\x00\x00\x80A\x00\x00\xa0A\x00\x00\xd0A\x00\x00\xe0A\x00\x00\x00@\x00\x00\x80@\x00\x000A\x00\x00@A\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc0A\x00\x00\xe8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g4670
(g4652
(I0
tS'b'
tRp4852
(I1
(I4
I8
tg4726
I00
(lp4853
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbstRp4854
(dp4855
g4660
(dp4856
g30
I00
sg4649
I01
sg28
I01
sg29
I01
sg32
I01
sg31
I01
sg4656
I01
sg27
I00
ssg4662
g4839
sg4663
(lp4857
g4649
ag4656
ag27
ag28
ag29
ag30
ag31
ag32
asg4665
(lp4858
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4859
(I1
(I4
I8
tg91
I01
S'\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4860
g1
(g4677
g4647
(dp4861
g1899
I1
sg1901
Va
sg1910
Vc
stRp4862
ag1
(g4677
g4647
(dp4863
g1899
I2
sg1901
Va
sg1910
Vd
stRp4864
ag1
(g4677
g4647
(dp4865
g1899
I3
sg1901
Vb
sg1910
Vc
stRp4866
ag1
(g4677
g4647
(dp4867
g1899
I4
sg1901
Vb
sg1910
Vd
stRp4868
asg4680
Nsg4681
g2366
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4869
(dp4870
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4871
sg4640
(lp4872
sg4642
I207393264
sg11
g4784
sg6
g7
sg4644
I0
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4873
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4874
(I1
(I1
I0
tg4655
I00
S''
S''
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4875
(I1
(I1
I0
tg4655
I00
S''
S''
NtbstRp4876
(dp4877
g4660
(dp4878
g4649
I01
sg4656
I01
ssg4662
g4869
sg4663
(lp4879
g4649
ag4656
asg4665
(lp4880
I1
aI0
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4881
(I1
(I1
I0
tg91
I00
S''
tbsg4672
I01
sg4673
I0
sg4674
I-1
sg4675
(lp4882
Nasg4680
Nsg4681
I0
sg4682
I0
sg4683
I0
sg4684
I0
sg4685
I01
sbag1
(g4635
g3
NtRp4883
(dp4884
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4885
sg4640
(lp4886
sg4642
I207393264
sg11
g4705
sg6
g7
sg4644
I1
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4887
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4888
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4889
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp4890
(dp4891
g4660
(dp4892
g4649
I01
sg4656
I01
ssg4662
g4883
sg4663
(lp4893
g4649
ag4656
asg4665
(lp4894
I1
aI1
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4895
(I1
(I1
I1
tg91
I00
S'\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I1
sg4674
I-1
sg4675
(lp4896
Nasg4680
Nsg4681
g2381
sg4682
I1
sg4683
I0
sg4684
I1
sg4685
I01
sbag1
(g4635
g3
NtRp4897
(dp4898
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4899
sg4640
(lp4900
sg4642
I207393264
sg11
g4720
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4901
g23
g4650
(g4651
g4652
g4653
S'b'
tRp4902
(I1
(I4
I8
tg4655
I00
S'`\x04\xd8= \xee\xca=\x80\xa5\xcc=\x00\xc8\xc9=\x80\xcf\xdd=\x00\xb0\xd7=\x00\x8c\xcb= \xec\xdb=\xc0"\xce= \t\xdb=`|\xca=\xa0s\xd4=\xc0\x06\xcb= y\xce=\xc0\x0b\xd8=\xa0\x12\xd7=\xc0\xd9\xdc=\xe0\xf8\xd3=@\x92\xd5=\xe0\xbe\xe3=`M\xd6= \x0f\xcb=\x00(\xdc=\x80Y\xd3=`?\xcf=\xc0\xfd\xd9=@X\xdc= h\xcc=\x00v\xdc=\xe0\x81\xc5=\x80\xba\xc8=\x80\xa5\xcf='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g4650
(g4651
g4652
g4653
S'b'
tRp4903
(I1
(I4
I8
tg4655
I00
S'\xe0\xb9\xd7=\x00T\xca=`Y\xcc=\xc0`\xc9=@\xdb\xdc= \\\xd7=`\xe8\xca=`8\xdb=\xa0\x81\xcd=\x00\xb1\xda= \x00\xca=`\xf9\xd3= x\xca=\x80\x16\xce= \x88\xd7=@\x87\xd6=\xa07\xdc=\x00\x8f\xd3=\x80K\xd5=\xa0\xd8\xe0=\x00\xec\xd5=\xe0\x9c\xca=\xe0\xfa\xdb=\x80\xef\xd2= \xc6\xce=\xc0\xc7\xd9= \xeb\xdb= \xfc\xcb=\xc0\x0e\xdc=`\x02\xc5=\xa0F\xc8= :\xcf='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4904
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g4670
(g4652
(I0
tS'b'
tRp4905
(I1
(I4
I8
tg4726
I00
(lp4906
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg24
g4670
(g4652
(I0
tS'b'
tRp4907
(I1
(I4
I8
tg4726
I00
(lp4908
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbsg25
g4650
(g4651
g4652
g4653
S'b'
tRp4909
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g4650
(g4651
g4652
g4653
S'b'
tRp4910
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4911
(I1
(I4
I8
tg4655
I00
S'\x00\x00@@\x00\x00\xc0@\x00\x00\x00A\x00\x00`A\x00\x00\x80A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xf8A\x00\x00\x80?\x00\x00\xa0@\x00\x000A\x00\x00PA\x00\x00\x98A\x00\x00\xa0A\x00\x00\xd0A\x00\x00\xe0A\x00\x00\x00@\x00\x00\xe0@\x00\x00\x10A\x00\x00@A\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\x00\x00\x00\x00\x80@\x00\x00 A\x00\x00pA\x00\x00\x90A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xe8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp4912
(dp4913
g4660
(dp4914
g23
I01
sg26
I01
sg4649
I01
sg21
I00
sg4656
I01
sg25
I01
sg22
I01
sg24
I00
ssg4662
g4897
sg4663
(lp4915
g4649
ag4656
ag21
ag22
ag23
ag24
ag25
ag26
asg4665
(lp4916
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4917
(I1
(I4
I8
tg91
I01
S'\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4918
g1
(g4677
g4647
(dp4919
g2384
I1
sg2388
Va
sg2400
Vc
stRp4920
ag1
(g4677
g4647
(dp4921
g2384
I2
sg2388
Va
sg2400
Vd
stRp4922
ag1
(g4677
g4647
(dp4923
g2384
I3
sg2388
Vb
sg2400
Vc
stRp4924
ag1
(g4677
g4647
(dp4925
g2384
I4
sg2388
Vb
sg2400
Vd
stRp4926
asg4680
Nsg4681
g3010
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4927
(dp4928
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4929
sg4640
(lp4930
sg4642
I207393264
sg11
g4753
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4931
g30
g4670
(g4652
(I0
tS'b'
tRp4932
(I1
(I4
I8
tg4726
I00
(lp4933
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4934
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g4650
(g4651
g4652
g4653
S'b'
tRp4935
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg29
g4650
(g4651
g4652
g4653
S'b'
tRp4936
(I1
(I4
I8
tg4655
I00
S' \xf4\xda=\xe0\x9b\xd8=\xa0\xa4\xd5= L\xcd=`\xe0\xd2=@\xfe\xce=\xa0\xd7\xd8=`\xa2\xde=\xe0\xf0\xcd=@\xdd\xce=\x00\x0b\xd9=\xe0\xad\xcf=\xc0\xf8\xd7=\x80\x9f\xd1=\xa0\xe7\xe1=\xc0\xbe\xd6=\xc0\x8e\xb8=\x80\x13\xce=\x80\xf6\xdc=\x80\xde\xd0=@?\xda=\xa0\x99\xc0= \x8f\xd9=\xe0]\xdc=\x00\x80\xce=\x00\xf3\xcc=`\x7f\xe0=\xe0\xcb\xd9=\xc0\t\xd7=@\xd0\xdc=\x00\x86\xe1= \xcc\xd4='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g4650
(g4651
g4652
g4653
S'b'
tRp4937
(I1
(I4
I8
tg4655
I00
S'\xa0/\xcc=\xa06\xd8=\xa07\xd5= \xea\xcc= \x1a\xd3=\xe0\x92\xce=\xa0m\xd8=`^\xdd=\xa0\x8a\xcd=`\x05\xce=@\xa5\xd8=`l\xcf=\x00\xea\xd7=\xe0\x9c\xd1=\x00e\xe1=@\xde\xd5=\x00\\\xb7=@\xa4\xcd=@e\xdc=\xa0s\xd0=\xa0\xd0\xd9=\xc0\x1c\xc0=\x00\x00\xd9=\xa0\xcc\xdb=\x80\x14\xce=\x00D\xcc=\x00\xff\xdf=\x00b\xd9= {\xd6=`\x9c\xdc=\xa0\x05\xe1=\x803\xd1='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg31
g4650
(g4651
g4652
g4653
S'b'
tRp4938
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4939
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x00\x00\x00\x00\x80@\x00\x00 A\x00\x00@A\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xe0A\x00\x00@@\x00\x00\xe0@\x00\x00\x00A\x00\x00PA\x00\x00\x80A\x00\x00\xb8A\x00\x00\xd0A\x00\x00\xf8A\x00\x00\x80?\x00\x00\xa0@\x00\x00\x10A\x00\x00`A\x00\x00\x88A\x00\x00\xa0A\x00\x00\xd8A\x00\x00\xe8A\x00\x00\x00@\x00\x00\xc0@\x00\x000A\x00\x00pA\x00\x00\x98A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xf0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g4670
(g4652
(I0
tS'b'
tRp4940
(I1
(I4
I8
tg4726
I00
(lp4941
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbstRp4942
(dp4943
g4660
(dp4944
g30
I00
sg4649
I01
sg28
I01
sg29
I01
sg32
I01
sg31
I01
sg4656
I01
sg27
I00
ssg4662
g4927
sg4663
(lp4945
g4649
ag4656
ag27
ag28
ag29
ag30
ag31
ag32
asg4665
(lp4946
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp4947
(I1
(I4
I8
tg91
I01
S'\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp4948
g1
(g4677
g4647
(dp4949
g3027
I1
sg3029
Va
sg3038
Vc
stRp4950
ag1
(g4677
g4647
(dp4951
g3027
I2
sg3029
Va
sg3038
Vd
stRp4952
ag1
(g4677
g4647
(dp4953
g3027
I3
sg3029
Vb
sg3038
Vc
stRp4954
ag1
(g4677
g4647
(dp4955
g3027
I4
sg3029
Vb
sg3038
Vd
stRp4956
asg4680
Nsg4681
g3494
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp4957
(dp4958
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4959
sg4640
(lp4960
sg4642
I207393264
sg11
g4784
sg6
g7
sg4644
I0
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4961
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4962
(I1
(I1
I0
tg4655
I00
S''
S''
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4963
(I1
(I1
I0
tg4655
I00
S''
S''
NtbstRp4964
(dp4965
g4660
(dp4966
g4649
I01
sg4656
I01
ssg4662
g4957
sg4663
(lp4967
g4649
ag4656
asg4665
(lp4968
I1
aI0
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4969
(I1
(I1
I0
tg91
I00
S''
tbsg4672
I01
sg4673
I0
sg4674
I-1
sg4675
(lp4970
Nasg4680
Nsg4681
I0
sg4682
I0
sg4683
I0
sg4684
I0
sg4685
I01
sbag1
(g4635
g3
NtRp4971
(dp4972
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4973
sg4640
(lp4974
sg4642
I207393264
sg11
g4705
sg6
g7
sg4644
I1
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4975
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp4976
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4977
(I1
(I1
I1
tg4655
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp4978
(dp4979
g4660
(dp4980
g4649
I01
sg4656
I01
ssg4662
g4971
sg4663
(lp4981
g4649
ag4656
asg4665
(lp4982
I1
aI1
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp4983
(I1
(I1
I1
tg91
I00
S'\x00\x00\x00\x00'
tbsg4672
I01
sg4673
I1
sg4674
I-1
sg4675
(lp4984
Nasg4680
Nsg4681
g3509
sg4682
I1
sg4683
I0
sg4684
I1
sg4685
I01
sbag1
(g4635
g3
NtRp4985
(dp4986
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4987
sg4640
(lp4988
sg4642
I207393264
sg11
g4720
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp4989
g23
g4650
(g4651
g4652
g4653
S'b'
tRp4990
(I1
(I4
I8
tg4655
I00
S'\x80\x9d\xd8=@h\xe1=\x80\n\xd2=@z\xd8=\x00\x85\xde=\x00\r\xda= \xdc\xd3=@\x1b\xd2=`d\xde=\xc0E\xd5=\xa0!\xd5= \r\xce=\xe0~\xd9=`"\xde=\x00\xde\xdb=`\xcb\xd6=`\xf3\xd8=\xc0\x99\xdc=@t\xd7=\xc0\x7f\xc5=\x00z\xd6=\xe0\x18\xcd=@\x05\xd9=@1\xe0=@ \xd0= \xb3\xcf=\x80\xb3\xcd=\xe0Q\xd8=\xa0\xae\xdc=\xe0\x8d\xcf= \x80\xdb=@G\xda='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g4650
(g4651
g4652
g4653
S'b'
tRp4991
(I1
(I4
I8
tg4655
I00
S'\xe0O\xd8=`\x0c\xe1=\xc0\xaf\xd1=\xa0\xfe\xd7=`\x17\xde=\x80\xac\xd9=\x80n\xd3=\x80\x9e\xd1=\xe0\xec\xdd=`\xc7\xd4=\x80\xb4\xd4=\x80\xd4\xcd=\xc0\xe4\xd8=\xe0\x97\xdd=\xc0x\xdb=@^\xd6=`\x9c\xd8=\x00+\xdc=\x00\xee\xd6=\xa02\xc5= \x10\xd6= \xb4\xcc=\xe0\x92\xd8=\xc0x\xdf=`\xaa\xcf=`\x15\xcf=\xc0L\xcd=\xe0\x19\xd8=\x00\n\xdc=\xe0,\xcf=\xa01\xda=\x00\x1b\xda='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp4992
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g4670
(g4652
(I0
tS'b'
tRp4993
(I1
(I4
I8
tg4726
I00
(lp4994
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg24
g4670
(g4652
(I0
tS'b'
tRp4995
(I1
(I4
I8
tg4726
I00
(lp4996
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbsg25
g4650
(g4651
g4652
g4653
S'b'
tRp4997
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g4650
(g4651
g4652
g4653
S'b'
tRp4998
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp4999
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x00\x00\x00\x00\xe0@\x00\x00 A\x00\x00pA\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xe0A\x00\x00\x80?\x00\x00\xa0@\x00\x000A\x00\x00@A\x00\x00\x98A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xf0A\x00\x00@@\x00\x00\xc0@\x00\x00\x10A\x00\x00PA\x00\x00\x80A\x00\x00\xa0A\x00\x00\xd0A\x00\x00\xe8A\x00\x00\x00@\x00\x00\x80@\x00\x00\x00A\x00\x00`A\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xf8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5000
(dp5001
g4660
(dp5002
g23
I01
sg26
I01
sg4649
I01
sg21
I00
sg4656
I01
sg25
I01
sg22
I01
sg24
I00
ssg4662
g4985
sg4663
(lp5003
g4649
ag4656
ag21
ag22
ag23
ag24
ag25
ag26
asg4665
(lp5004
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp5005
(I1
(I4
I8
tg91
I01
S'\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp5006
g1
(g4677
g4647
(dp5007
g3512
I1
sg3516
Va
sg3528
Vc
stRp5008
ag1
(g4677
g4647
(dp5009
g3512
I2
sg3516
Va
sg3528
Vd
stRp5010
ag1
(g4677
g4647
(dp5011
g3512
I3
sg3516
Vb
sg3528
Vc
stRp5012
ag1
(g4677
g4647
(dp5013
g3512
I4
sg3516
Vb
sg3528
Vd
stRp5014
asg4680
Nsg4681
g4138
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp5015
(dp5016
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p5017
sg4640
(lp5018
sg4642
I207393264
sg11
g4753
sg6
g7
sg4644
I8
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp5019
g30
g4670
(g4652
(I0
tS'b'
tRp5020
(I1
(I4
I8
tg4726
I00
(lp5021
Vi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
atbsg4649
g4650
(g4651
g4652
g4653
S'b'
tRp5022
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g4650
(g4651
g4652
g4653
S'b'
tRp5023
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg29
g4650
(g4651
g4652
g4653
S'b'
tRp5024
(I1
(I4
I8
tg4655
I00
S'\xe0\xe8\xe0=\xe0\xef\xd0=@\x84\xe3=\x00\x14\xd8=@$\xd1=\x00\xb0\xd7= \xd6\xe2=\xc0\xd0\xcd=`\x8a\xcb=\xe0Z\xd4=\xe0\x92\xdc=\x80j\xd9= \xa9\xcc=@%\xd2=@\x9b\xdc=\xc0y\xf1=\xe0\xc7\xd4=\xe0+\xda=\x00|\xc9=\xc0a\xdf=\x80]\xd1=\x80\x00\xdd=\xa0\x17\xd5=\xa0\x80\xd0=\x80\xa7\xd7=@\x8c\xc5=\xc0\x16\xdb= \x82\xcd=`\xfa\xc8=@\xe6\xdc=`1\xd8=\xe0\r\xe2='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g4650
(g4651
g4652
g4653
S'b'
tRp5025
(I1
(I4
I8
tg4655
I00
S'@[\xe0=\xa0]\xd0= \x17\xe3=\xc0\x95\xd7=\x00\x85\xd0=`\xf9\xd6=\xa0\x08\xe2=\xa0\x80\xcd=\xe0\x1d\xcb= \xf2\xd3=`3\xdc=\xe0\xde\xd8=\x00O\xcc=\x80\x80\xd1=\x80K\xdc= \x15\xf1=`f\xd4=@\x92\xd9=\xc0\xeb\xc8=`\xb8\xde=`\xa3\xd0=\x80d\xcc=\xa0\xc0\xd4=@\xea\xcf=\xa0F\xd7=\xc0\x1e\xc5=\xc0\xb5\xda=\x00\x08\xcd= \xa8\xc8=\xe0\x92\xdc=\xa0\xc9\xd7=\xa09\xe0='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg31
g4650
(g4651
g4652
g4653
S'b'
tRp5026
(I1
(I4
I8
tg4655
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp5027
(I1
(I4
I8
tg4655
I00
S'\x00\x00@@\x00\x00\xe0@\x00\x00\x00A\x00\x00@A\x00\x00\x80A\x00\x00\xb8A\x00\x00\xd0A\x00\x00\xf0A\x00\x00\x80?\x00\x00\xa0@\x00\x000A\x00\x00pA\x00\x00\x98A\x00\x00\xa0A\x00\x00\xd8A\x00\x00\xe8A\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x10A\x00\x00PA\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xf8A\x00\x00\x00@\x00\x00\xc0@\x00\x00 A\x00\x00`A\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xe0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g4670
(g4652
(I0
tS'b'
tRp5028
(I1
(I4
I8
tg4726
I00
(lp5029
Ve
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVi
aVe
aVe
aVe
aVe
aVe
aVe
aVe
aVe
atbstRp5030
(dp5031
g4660
(dp5032
g30
I00
sg4649
I01
sg28
I01
sg29
I01
sg32
I01
sg31
I01
sg4656
I01
sg27
I00
ssg4662
g5015
sg4663
(lp5033
g4649
ag4656
ag27
ag28
ag29
ag30
ag31
ag32
asg4665
(lp5034
I4
aI8
asbsg4667
g4738
sg4669
g4670
(g4652
(I0
tS'b'
tRp5035
(I1
(I4
I8
tg91
I01
S'\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
tbsg4672
I01
sg4673
I8
sg4674
I-1
sg4675
(lp5036
g1
(g4677
g4647
(dp5037
g4155
I1
sg4157
Va
sg4166
Vc
stRp5038
ag1
(g4677
g4647
(dp5039
g4155
I2
sg4157
Va
sg4166
Vd
stRp5040
ag1
(g4677
g4647
(dp5041
g4155
I3
sg4157
Vb
sg4166
Vc
stRp5042
ag1
(g4677
g4647
(dp5043
g4155
I4
sg4157
Vb
sg4166
Vd
stRp5044
asg4680
Nsg4681
g4622
sg4682
I32
sg4683
I0
sg4684
I32
sg4685
I01
sbag1
(g4635
g3
NtRp5045
(dp5046
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p5047
sg4640
(lp5048
sg4642
I207393264
sg11
g4784
sg6
g7
sg4644
I0
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp5049
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp5050
(I1
(I1
I0
tg4655
I00
S''
S''
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp5051
(I1
(I1
I0
tg4655
I00
S''
S''
NtbstRp5052
(dp5053
g4660
(dp5054
g4649
I01
sg4656
I01
ssg4662
g5045
sg4663
(lp5055
g4649
ag4656
asg4665
(lp5056
I1
aI0
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp5057
(I1
(I1
I0
tg91
I00
S''
tbsg4672
I01
sg4673
I0
sg4674
I-1
sg4675
(lp5058
Nasg4680
Nsg4681
I0
sg4682
I0
sg4683
I0
sg4684
I0
sg4685
I01
sbag1
(g4635
g3
NtRp5059
(dp5060
g4638
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p5061
sg4640
(lp5062
sg4642
I207393264
sg11
S'test_blocks'
p5063
sg6
g7
sg4644
I0
sg33
I01
sg34
g35
sg4645
g1
(g4646
g4647
(dp5064
g4649
g4650
(g4651
g4652
g4653
S'b'
tRp5065
(I1
(I1
I0
tg4655
I00
S''
S''
Ntbsg4656
g4650
(g4651
g4652
g4653
S'b'
tRp5066
(I1
(I1
I0
tg4655
I00
S''
S''
NtbstRp5067
(dp5068
g4660
(dp5069
g4649
I01
sg4656
I01
ssg4662
g5059
sg4663
(lp5070
g4649
ag4656
asg4665
(lp5071
I1
aI0
asbsg4667
g4668
sg4669
g4670
(g4652
(I0
tS'b'
tRp5072
(I1
(I1
I0
tg91
I00
S''
tbsg4672
I01
sg4673
I0
sg4674
I-1
sg4675
(lp5073
Nasg4680
Nsg4681
I0
sg4682
I0
sg4683
I0
sg4684
I0
sg4685
I01
sbasS'savePickle'
p5074
I00
sb.