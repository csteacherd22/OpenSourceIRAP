ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/IRAP/IRAP.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/IRAP/data/5_2016_May_05_1702
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'IRAP'
p12
sS'dataNames'
p13
(lp14
S'stimulus1'
p15
aS'stimulus2'
p16
aS'img_stimulus1'
p17
aS'img_stimulus2'
p18
aS'response_option_left'
p19
aS'response_option_right'
p20
aS'required_response_A.keys'
p21
aS'required_response_A.corr'
p22
aS'required_response_A.rt'
p23
aS'feedback_response_A.keys'
p24
aS'feedback_response_A.corr'
p25
aS'feedback_response_A.rt'
p26
aS'required_response_B.keys'
p27
aS'required_response_B.corr'
p28
aS'required_response_B.rt'
p29
aS'feedback_response_B.keys'
p30
aS'feedback_response_B.corr'
p31
aS'feedback_response_B.rt'
p32
asS'autoLog'
p33
I01
sS'extraInfo'
p34
(dp35
Vparticipant
p36
V5
sVUseMonkey
p37
Vn
sVgender
p38
V
sVage
p39
V
sS'frameRate'
p40
cnumpy.core.multiarray
scalar
p41
(cnumpy
dtype
p42
(S'f8'
I0
I1
tRp43
(I3
S'<'
NNNI-1
I-1
I0
tbS';\x00\xaa-x\xf7M@'
tRp44
sS'expName'
p45
g12
sS'date'
p46
V2016_May_05_1702
p47
sVStartingBlock
p48
Va
ssS'loopsUnfinished'
p49
(lp50
g1
(cpsychopy.data
TrialHandler
p51
g3
NtRp52
(dp53
S'origin'
p54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p55
sS'thisTrial'
p56
g1
(cpsychopy.data
TrialType
p57
c__builtin__
dict
p58
(dp59
Vresponse_option_left_location
p60
(lp61
F-0.29999999999999999
aF-0.59999999999999998
asVaccuracyCriterion
p62
I80
sVresponse_option_right_location
p63
(lp64
F0.29999999999999999
aF-0.59999999999999998
asVseconds
p65
g65
sVpercentCorrect
p66
Vpercent correct
p67
sVend_message
p68
VEnd of task.
p69
sVimage_stimulus1_location
p70
(lp71
I0
aF0.29999999999999999
asVspeed
p72
VSpeed:
p73
sVaccuracy_feedback_location
p74
(lp75
I0
aF-0.69999999999999996
asVmoving_response_options
p76
VFalse
p77
sVrule_A
p78
VRespond AS IF flowers are positive and insects are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p79
sVimage_stimulus2_location
p80
(lp81
I0
aF-0.29999999999999999
asVrule_B
p82
VRespond AS IF insects are positive and flowers are negative\u000a\u000aGo as quickly as you can while being accurate\u000a\u000aPress 'e' or 'i' to continue
p83
sVpress_message
p84
VPress 'e' or 'i' to continue
p85
sVintro_message
p86
VThis task will present you with pairs of words. \u000a\u000aYou will be given rules on how to respond to them. \u000a\u000aGo as quickly as you can while being accurate.\u000a\u000aPlace your fingers on the 'e' and 'i' keys. \u000aPress either one to continue.
p87
sVaim
p88
VAim for >80% and <2 seconds
p89
sVresponse_option_B
p90
VSimilar
p91
sVresponse_option_A
p92
VDifferent
p93
sVstimulus1_location
p94
(lp95
I0
aF0.20000000000000001
asVstimulus2_location
p96
(lp97
I0
aF-0.20000000000000001
asVn_pairs_test_blocks
p98
I3
sVmax_pairs_practice_blocks
p99
I4
sVlatencyCriterion
p100
I2
sVaccuracy
p101
VAccuracy:
p102
stRp103
sS'_exp'
p104
I213496304
sg11
S'task'
p105
sg6
g7
sS'thisRepN'
p106
I0
sg33
I01
sg34
g35
sS'data'
p107
g1
(cpsychopy.data
DataHandler
p108
g58
(dp109
S'ran'
p110
cnumpy.ma.core
_mareconstruct
p111
(cnumpy.ma.core
MaskedArray
p112
cnumpy
ndarray
p113
(I0
tp114
S'b'
tRp115
(I1
(I1
I1
tg42
(S'f4'
I0
I1
tRp116
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?'
S'\x00'
NtbsS'order'
p117
g111
(g112
g113
g114
S'b'
tRp118
(I1
(I1
I1
tg116
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp119
(dp120
S'isNumeric'
p121
(dp122
g110
I01
sg117
I01
ssS'trials'
p123
g52
sS'dataTypes'
p124
(lp125
g110
ag117
asS'dataShape'
p126
(lp127
I1
aI1
asbsS'method'
p128
S'sequential'
p129
sS'sequenceIndices'
p130
cnumpy.core.multiarray
_reconstruct
p131
(g113
(I0
tS'b'
tRp132
(I1
(I1
I1
tg42
(S'i4'
I0
I1
tRp133
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00'
tbsS'finished'
p134
I00
sS'nReps'
p135
I1
sS'nRemaining'
p136
I0
sS'trialList'
p137
(lp138
g103
asS'seed'
p139
NsS'thisIndex'
p140
g41
(g133
S'\x00\x00\x00\x00'
tRp141
sS'thisN'
p142
I0
sS'thisTrialN'
p143
I0
sS'nTotal'
p144
I1
sS'_warnUseOfNext'
p145
I01
sbag1
(g51
g3
NtRp146
(dp147
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p148
sg56
Nsg104
I213496304
sg11
S'practice_blocks'
p149
sg6
g7
sg106
I1
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp150
g110
g111
(g112
g113
g114
S'b'
tRp151
(I1
(I1
I4
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp152
(I1
(I1
I4
tg116
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01'
NtbstRp153
(dp154
g121
(dp155
g110
I01
sg117
I01
ssg123
g146
sg124
(lp156
g110
ag117
asg126
(lp157
I1
aI4
asbsg128
g129
sg130
g131
(g113
(I0
tS'b'
tRp158
(I1
(I1
I4
tg133
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsg134
I00
sg135
I4
sg136
I2
sg137
(lp159
Nasg139
Nsg140
g41
(g133
S'\x00\x00\x00\x00'
tRp160
sg142
I1
sg143
I0
sg144
I4
sg145
I01
sbag1
(g51
g3
NtRp161
(dp162
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p163
sg56
Nsg104
I213496304
sg11
S'practice_Afirst'
p164
sg6
g7
sg106
I0
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp165
g110
g111
(g112
g113
g114
S'b'
tRp166
(I1
(I1
I1
tg116
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp167
(I1
(I1
I1
tg116
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp168
(dp169
g121
(dp170
g110
I01
sg117
I01
ssg123
g161
sg124
(lp171
g110
ag117
asg126
(lp172
I1
aI1
asbsg128
g129
sg130
g131
(g113
(I0
tS'b'
tRp173
(I1
(I1
I1
tg133
I00
S'\x00\x00\x00\x00'
tbsg134
I00
sg135
I1
sg136
I0
sg137
(lp174
Nasg139
Nsg140
g41
(g133
S'\x00\x00\x00\x00'
tRp175
sg142
I0
sg143
I0
sg144
I1
sg145
I01
sbag1
(g51
g3
NtRp176
(dp177
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p178
sg56
g1
(g57
g58
(dp179
VtrialType
p180
I2
sVstimulus1_category
p181
Va
sVstimulus2_category
p182
Vd
stRp183
sg104
I213496304
sg11
S'practice_trials_Afirst'
p184
sg6
g7
sg106
I0
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp185
g23
g111
(g112
g113
g114
S'b'
tRp186
(I1
(I4
I8
tg116
I00
S'\xd0a\xc5>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg26
g111
(g112
g113
g114
S'b'
tRp187
(I1
(I4
I8
tg116
I00
S'\xc07\xc5>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg110
g111
(g112
g113
g114
S'b'
tRp188
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g131
(g113
(I0
tS'b'
tRp189
(I1
(I4
I8
tg42
(S'O4'
I0
I1
tRp190
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp191
S'i'
aS'--'
p192
aS'--'
p193
aS'--'
p194
aS'--'
p195
aS'--'
p196
aS'--'
p197
aS'--'
p198
aS'--'
p199
aS'--'
p200
aS'--'
p201
aS'--'
p202
aS'--'
p203
aS'--'
p204
aS'--'
p205
aS'--'
p206
aS'--'
p207
aS'--'
p208
aS'--'
p209
aS'--'
p210
aS'--'
p211
aS'--'
p212
aS'--'
p213
aS'--'
p214
aS'--'
p215
aS'--'
p216
aS'--'
p217
aS'--'
p218
aS'--'
p219
aS'--'
p220
aS'--'
p221
aS'--'
p222
atbsg24
g131
(g113
(I0
tS'b'
tRp223
(I1
(I4
I8
tg190
I00
(lp224
S'e'
aS'--'
p225
aS'--'
p226
aS'--'
p227
aS'--'
p228
aS'--'
p229
aS'--'
p230
aS'--'
p231
aS'--'
p232
aS'--'
p233
aS'--'
p234
aS'--'
p235
aS'--'
p236
aS'--'
p237
aS'--'
p238
aS'--'
p239
aS'--'
p240
aS'--'
p241
aS'--'
p242
aS'--'
p243
aS'--'
p244
aS'--'
p245
aS'--'
p246
aS'--'
p247
aS'--'
p248
aS'--'
p249
aS'--'
p250
aS'--'
p251
aS'--'
p252
aS'--'
p253
aS'--'
p254
aS'--'
p255
atbsg25
g111
(g112
g113
g114
S'b'
tRp256
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg22
g111
(g112
g113
g114
S'b'
tRp257
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp258
(I1
(I4
I8
tg116
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp259
(dp260
g121
(dp261
g23
I01
sg26
I01
sg110
I01
sg21
I00
sg117
I01
sg25
I01
sg22
I01
sg24
I00
ssg123
g176
sg124
(lp262
g110
ag117
ag21
ag22
ag23
ag24
ag25
ag26
asg126
(lp263
I4
aI8
asbsg128
S'random'
p264
sg130
g131
(g113
(I0
tS'b'
tRp265
(I1
(I4
I8
tg133
I01
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00'
tbsg134
I00
sg135
I8
sg136
I30
sg137
(lp266
g1
(g57
g58
(dp267
g180
I1
sg181
Va
sg182
Vc
stRp268
ag183
ag1
(g57
g58
(dp269
g180
I3
sg181
Vb
sg182
Vc
stRp270
ag1
(g57
g58
(dp271
g180
I4
sg181
Vb
sg182
Vd
stRp272
asg139
Nsg140
g41
(g133
S'\x01\x00\x00\x00'
tRp273
sg142
I1
sg143
I1
sg144
I32
sg145
I01
sbasS'saveWideText'
p274
I01
sS'thisEntry'
p275
(dp276
sS'version'
p277
S''
sS'_paramNamesSoFar'
p278
(lp279
g60
ag62
ag63
ag94
ag65
ag66
ag68
ag70
ag72
ag74
ag76
ag78
ag80
ag82
ag84
ag86
ag88
ag90
ag92
ag100
ag96
ag98
ag99
ag101
aVtrialType
p280
aVstimulus1_category
p281
aVstimulus2_category
p282
asS'entries'
p283
(lp284
(dp285
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p286
g141
sS'practice_Afirst.thisIndex'
p287
g41
(g133
S'\x00\x00\x00\x00'
tRp288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p289
NsS'task.thisN'
p290
I0
sg68
g69
sg280
I1
sg70
g71
sg15
Vrose
p291
sg16
Vfriendly
p292
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p293
I0
sS'practice_trials_Afirst.thisIndex'
p294
g41
(g133
S'\x00\x00\x00\x00'
tRp295
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
Vblank.png
p296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p297
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p298
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p299
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p300
NsS'practice_blocks.thisIndex'
p301
g41
(g133
S'\x00\x00\x00\x00'
tRp302
sg66
g67
sS'practice_trials_Afirst.thisN'
p303
I0
sS'task.thisRepN'
p304
I0
sg86
g87
sS'practice_Afirst.thisN'
p305
I0
sS'practice_trials_Afirst.thisRepN'
p306
I0
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p307
I0
sS'practice_blocks.thisRepN'
p308
I0
sg76
g77
sg45
g12
sg23
F0.70490288734436035
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p309
I0
sg98
I3
sg99
I4
sa(dp310
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p311
g141
sS'practice_Afirst.thisIndex'
p312
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p313
NsS'task.thisN'
p314
I0
sg68
g69
sg280
I4
sg70
g71
sg15
Vbee
p315
sg16
Vhostile
p316
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p317
I0
sS'practice_trials_Afirst.thisIndex'
p318
g41
(g133
S'\x03\x00\x00\x00'
tRp319
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p320
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p321
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p322
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p323
NsS'practice_blocks.thisIndex'
p324
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p325
I1
sS'task.thisRepN'
p326
I0
sg86
g87
sS'practice_Afirst.thisN'
p327
I0
sS'practice_trials_Afirst.thisRepN'
p328
I0
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p329
I0
sS'practice_blocks.thisRepN'
p330
I0
sg76
g77
sg45
g12
sg23
F0.21834516525268555
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p331
I1
sg98
I3
sg99
I4
sa(dp332
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p333
I0
sS'task.thisIndex'
p334
g141
sS'practice_Afirst.thisIndex'
p335
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p336
NsS'task.thisN'
p337
I0
sg68
g69
sg280
I2
sg70
g71
sg15
Vlilly
p338
sg16
Vmean
p339
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p340
I0
sS'practice_trials_Afirst.thisIndex'
p341
g41
(g133
S'\x01\x00\x00\x00'
tRp342
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p343
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p344
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p345
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p346
NsS'practice_blocks.thisIndex'
p347
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p348
I2
sS'task.thisRepN'
p349
I0
sg86
g87
sS'practice_Afirst.thisN'
p350
I0
sS'practice_trials_Afirst.thisRepN'
p351
I0
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p352
I0
sg26
F0.10049700736999512
sg76
g77
sg45
g12
sg23
F0.18427515029907227
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p353
I2
sg98
I3
sg99
I4
sa(dp354
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p355
I0
sS'task.thisIndex'
p356
g141
sS'practice_Afirst.thisIndex'
p357
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p358
NsS'task.thisN'
p359
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g315
sg16
Vpretty
p360
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p361
I0
sS'practice_trials_Afirst.thisIndex'
p362
g41
(g133
S'\x02\x00\x00\x00'
tRp363
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p364
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p365
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p366
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p367
NsS'practice_blocks.thisIndex'
p368
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p369
I3
sS'task.thisRepN'
p370
I0
sg86
g87
sS'practice_Afirst.thisN'
p371
I0
sS'practice_trials_Afirst.thisRepN'
p372
I0
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p373
I0
sg26
F0.067806005477905273
sg76
g77
sg45
g12
sg23
F0.13383293151855469
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p374
I3
sg98
I3
sg99
I4
sa(dp375
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p376
I0
sS'task.thisIndex'
p377
g141
sS'practice_Afirst.thisIndex'
p378
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p379
NsS'task.thisN'
p380
I0
sg68
g69
sg280
I1
sg70
g71
sg15
Vdaffodil
p381
sg16
Vhappy
p382
sg72
g73
sg24
S'e'
sS'practice_blocks.thisTrialN'
p383
I0
sS'practice_trials_Afirst.thisIndex'
p384
g41
(g133
S'\x00\x00\x00\x00'
tRp385
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p386
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p387
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p388
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p389
NsS'practice_blocks.thisIndex'
p390
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p391
I4
sS'task.thisRepN'
p392
I0
sg86
g87
sS'practice_Afirst.thisN'
p393
I0
sS'practice_trials_Afirst.thisRepN'
p394
I1
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p395
I0
sg26
F0.13407516479492188
sg76
g77
sg45
g12
sg23
F0.13440203666687012
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p396
I0
sg98
I3
sg99
I4
sa(dp397
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p398
g141
sS'practice_Afirst.thisIndex'
p399
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p400
NsS'task.thisN'
p401
I0
sg68
g69
sg280
I4
sg70
g71
sg15
Vmaggot
p402
sg16
g339
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p403
I0
sS'practice_trials_Afirst.thisIndex'
p404
g41
(g133
S'\x03\x00\x00\x00'
tRp405
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p406
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p407
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p408
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p409
NsS'practice_blocks.thisIndex'
p410
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p411
I5
sS'task.thisRepN'
p412
I0
sg86
g87
sS'practice_Afirst.thisN'
p413
I0
sS'practice_trials_Afirst.thisRepN'
p414
I1
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p415
I0
sS'practice_blocks.thisRepN'
p416
I0
sg76
g77
sg45
g12
sg23
F0.084998130798339844
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p417
I1
sg98
I3
sg99
I4
sa(dp418
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p419
I0
sS'task.thisIndex'
p420
g141
sS'practice_Afirst.thisIndex'
p421
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p422
NsS'task.thisN'
p423
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g381
sg16
Vpain
p424
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p425
I0
sS'practice_trials_Afirst.thisIndex'
p426
g41
(g133
S'\x01\x00\x00\x00'
tRp427
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p428
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p429
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p430
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p431
NsS'practice_blocks.thisIndex'
p432
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p433
I6
sS'task.thisRepN'
p434
I0
sg86
g87
sS'practice_Afirst.thisN'
p435
I0
sS'practice_trials_Afirst.thisRepN'
p436
I1
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p437
I0
sg26
F0.16625809669494629
sg76
g77
sg45
g12
sg23
F0.21764802932739258
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p438
I2
sg98
I3
sg99
I4
sa(dp439
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p440
I0
sS'task.thisIndex'
p441
g141
sS'practice_Afirst.thisIndex'
p442
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p443
NsS'task.thisN'
p444
I0
sg68
g69
sg280
I3
sg70
g71
sg15
Vspider
p445
sg16
g382
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p446
I0
sS'practice_trials_Afirst.thisIndex'
p447
g41
(g133
S'\x02\x00\x00\x00'
tRp448
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p449
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p450
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p451
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p452
NsS'practice_blocks.thisIndex'
p453
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p454
I7
sS'task.thisRepN'
p455
I0
sg86
g87
sS'practice_Afirst.thisN'
p456
I0
sS'practice_trials_Afirst.thisRepN'
p457
I1
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p458
I0
sg26
F0.25262212753295898
sg76
g77
sg45
g12
sg23
F0.25273680686950684
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p459
I3
sg98
I3
sg99
I4
sa(dp460
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p461
g141
sS'practice_Afirst.thisIndex'
p462
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p463
NsS'task.thisN'
p464
I0
sg68
g69
sg280
I4
sg70
g71
sg15
g315
sg16
g316
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p465
I0
sS'practice_trials_Afirst.thisIndex'
p466
g41
(g133
S'\x03\x00\x00\x00'
tRp467
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p468
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p469
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p470
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p471
NsS'practice_blocks.thisIndex'
p472
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p473
I8
sS'task.thisRepN'
p474
I0
sg86
g87
sS'practice_Afirst.thisN'
p475
I0
sS'practice_trials_Afirst.thisRepN'
p476
I2
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p477
I0
sS'practice_blocks.thisRepN'
p478
I0
sg76
g77
sg45
g12
sg23
F0.33550286293029785
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p479
I0
sg98
I3
sg99
I4
sa(dp480
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p481
I0
sS'task.thisIndex'
p482
g141
sS'practice_Afirst.thisIndex'
p483
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p484
NsS'task.thisN'
p485
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g291
sg16
g424
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p486
I0
sS'practice_trials_Afirst.thisIndex'
p487
g41
(g133
S'\x01\x00\x00\x00'
tRp488
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p489
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p490
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p491
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p492
NsS'practice_blocks.thisIndex'
p493
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p494
I9
sS'task.thisRepN'
p495
I0
sg86
g87
sS'practice_Afirst.thisN'
p496
I0
sS'practice_trials_Afirst.thisRepN'
p497
I2
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p498
I0
sg26
F0.51996302604675293
sg76
g77
sg45
g12
sg23
F0.53685808181762695
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p499
I1
sg98
I3
sg99
I4
sa(dp500
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p501
I0
sS'task.thisIndex'
p502
g141
sS'practice_Afirst.thisIndex'
p503
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p504
NsS'task.thisN'
p505
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g445
sg16
g360
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p506
I0
sS'practice_trials_Afirst.thisIndex'
p507
g41
(g133
S'\x02\x00\x00\x00'
tRp508
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p509
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p510
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p511
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p512
NsS'practice_blocks.thisIndex'
p513
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p514
I10
sS'task.thisRepN'
p515
I0
sg86
g87
sS'practice_Afirst.thisN'
p516
I0
sS'practice_trials_Afirst.thisRepN'
p517
I2
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p518
I0
sg26
F1.1732559204101562
sg76
g77
sg45
g12
sg23
F1.2227709293365479
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p519
I2
sg98
I3
sg99
I4
sa(dp520
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p521
g141
sS'practice_Afirst.thisIndex'
p522
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p523
NsS'task.thisN'
p524
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g291
sg16
Vgood
p525
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p526
I0
sS'practice_trials_Afirst.thisIndex'
p527
g41
(g133
S'\x00\x00\x00\x00'
tRp528
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p529
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p530
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p531
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p532
NsS'practice_blocks.thisIndex'
p533
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p534
I11
sS'task.thisRepN'
p535
I0
sg86
g87
sS'practice_Afirst.thisN'
p536
I0
sS'practice_trials_Afirst.thisRepN'
p537
I2
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p538
I0
sS'practice_blocks.thisRepN'
p539
I0
sg76
g77
sg45
g12
sg23
F0.26838898658752441
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p540
I3
sg98
I3
sg99
I4
sa(dp541
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p542
g141
sS'practice_Afirst.thisIndex'
p543
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p544
NsS'task.thisN'
p545
I0
sg68
g69
sg280
I4
sg70
g71
sg15
g402
sg16
Vhateful
p546
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p547
I0
sS'practice_trials_Afirst.thisIndex'
p548
g41
(g133
S'\x03\x00\x00\x00'
tRp549
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p550
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p551
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p552
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p553
NsS'practice_blocks.thisIndex'
p554
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p555
I12
sS'task.thisRepN'
p556
I0
sg86
g87
sS'practice_Afirst.thisN'
p557
I0
sS'practice_trials_Afirst.thisRepN'
p558
I3
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p559
I0
sS'practice_blocks.thisRepN'
p560
I0
sg76
g77
sg45
g12
sg23
F0.30251002311706543
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p561
I0
sg98
I3
sg99
I4
sa(dp562
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p563
I0
sS'task.thisIndex'
p564
g141
sS'practice_Afirst.thisIndex'
p565
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p566
NsS'task.thisN'
p567
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g381
sg16
g339
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p568
I0
sS'practice_trials_Afirst.thisIndex'
p569
g41
(g133
S'\x01\x00\x00\x00'
tRp570
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p571
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p572
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p573
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p574
NsS'practice_blocks.thisIndex'
p575
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p576
I13
sS'task.thisRepN'
p577
I0
sg86
g87
sS'practice_Afirst.thisN'
p578
I0
sS'practice_trials_Afirst.thisRepN'
p579
I3
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p580
I0
sg26
F0.30247092247009277
sg76
g77
sg45
g12
sg23
F0.36901187896728516
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p581
I1
sg98
I3
sg99
I4
sa(dp582
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p583
g141
sS'practice_Afirst.thisIndex'
p584
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p585
NsS'task.thisN'
p586
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g381
sg16
g525
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p587
I0
sS'practice_trials_Afirst.thisIndex'
p588
g41
(g133
S'\x00\x00\x00\x00'
tRp589
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p590
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p591
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p592
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p593
NsS'practice_blocks.thisIndex'
p594
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p595
I14
sS'task.thisRepN'
p596
I0
sg86
g87
sS'practice_Afirst.thisN'
p597
I0
sS'practice_trials_Afirst.thisRepN'
p598
I3
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p599
I0
sS'practice_blocks.thisRepN'
p600
I0
sg76
g77
sg45
g12
sg23
F0.21846508979797363
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p601
I2
sg98
I3
sg99
I4
sa(dp602
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p603
I0
sS'task.thisIndex'
p604
g141
sS'practice_Afirst.thisIndex'
p605
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p606
NsS'task.thisN'
p607
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g402
sg16
g292
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p608
I0
sS'practice_trials_Afirst.thisIndex'
p609
g41
(g133
S'\x02\x00\x00\x00'
tRp610
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p611
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p612
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p613
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p614
NsS'practice_blocks.thisIndex'
p615
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p616
I15
sS'task.thisRepN'
p617
I0
sg86
g87
sS'practice_Afirst.thisN'
p618
I0
sS'practice_trials_Afirst.thisRepN'
p619
I3
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p620
I0
sg26
F0.20050191879272461
sg76
g77
sg45
g12
sg23
F0.23389101028442383
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p621
I3
sg98
I3
sg99
I4
sa(dp622
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p623
I0
sS'task.thisIndex'
p624
g141
sS'practice_Afirst.thisIndex'
p625
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p626
NsS'task.thisN'
p627
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g402
sg16
g292
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p628
I0
sS'practice_trials_Afirst.thisIndex'
p629
g41
(g133
S'\x02\x00\x00\x00'
tRp630
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p631
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p632
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p633
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p634
NsS'practice_blocks.thisIndex'
p635
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p636
I16
sS'task.thisRepN'
p637
I0
sg86
g87
sS'practice_Afirst.thisN'
p638
I0
sS'practice_trials_Afirst.thisRepN'
p639
I4
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p640
I0
sg26
F0.1843559741973877
sg76
g77
sg45
g12
sg23
F0.23424506187438965
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p641
I0
sg98
I3
sg99
I4
sa(dp642
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p643
g141
sS'practice_Afirst.thisIndex'
p644
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p645
NsS'task.thisN'
p646
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g338
sg16
g525
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p647
I0
sS'practice_trials_Afirst.thisIndex'
p648
g41
(g133
S'\x00\x00\x00\x00'
tRp649
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p650
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p651
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p652
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p653
NsS'practice_blocks.thisIndex'
p654
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p655
I17
sS'task.thisRepN'
p656
I0
sg86
g87
sS'practice_Afirst.thisN'
p657
I0
sS'practice_trials_Afirst.thisRepN'
p658
I4
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p659
I0
sS'practice_blocks.thisRepN'
p660
I0
sg76
g77
sg45
g12
sg23
F0.10106587409973145
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p661
I1
sg98
I3
sg99
I4
sa(dp662
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p663
g141
sS'practice_Afirst.thisIndex'
p664
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p665
NsS'task.thisN'
p666
I0
sg68
g69
sg280
I4
sg70
g71
sg15
Vwasp
p667
sg16
g339
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p668
I0
sS'practice_trials_Afirst.thisIndex'
p669
g41
(g133
S'\x03\x00\x00\x00'
tRp670
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p671
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p672
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p673
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p674
NsS'practice_blocks.thisIndex'
p675
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p676
I18
sS'task.thisRepN'
p677
I0
sg86
g87
sS'practice_Afirst.thisN'
p678
I0
sS'practice_trials_Afirst.thisRepN'
p679
I4
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p680
I0
sS'practice_blocks.thisRepN'
p681
I0
sg76
g77
sg45
g12
sg23
F0.18488788604736328
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p682
I2
sg98
I3
sg99
I4
sa(dp683
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p684
I0
sS'task.thisIndex'
p685
g141
sS'practice_Afirst.thisIndex'
p686
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p687
NsS'task.thisN'
p688
I0
sg68
g69
sg280
I2
sg70
g71
sg15
Vdaisy
p689
sg16
g546
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p690
I0
sS'practice_trials_Afirst.thisIndex'
p691
g41
(g133
S'\x01\x00\x00\x00'
tRp692
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p693
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p694
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p695
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p696
NsS'practice_blocks.thisIndex'
p697
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p698
I19
sS'task.thisRepN'
p699
I0
sg86
g87
sS'practice_Afirst.thisN'
p700
I0
sS'practice_trials_Afirst.thisRepN'
p701
I4
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p702
I0
sg26
F0.30156993865966797
sg76
g77
sg45
g12
sg23
F0.35182785987854004
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p703
I3
sg98
I3
sg99
I4
sa(dp704
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p705
g141
sS'practice_Afirst.thisIndex'
p706
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p707
NsS'task.thisN'
p708
I0
sg68
g69
sg280
I4
sg70
g71
sg15
g667
sg16
g424
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p709
I0
sS'practice_trials_Afirst.thisIndex'
p710
g41
(g133
S'\x03\x00\x00\x00'
tRp711
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p712
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p713
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p714
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p715
NsS'practice_blocks.thisIndex'
p716
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p717
I20
sS'task.thisRepN'
p718
I0
sg86
g87
sS'practice_Afirst.thisN'
p719
I0
sS'practice_trials_Afirst.thisRepN'
p720
I5
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p721
I0
sS'practice_blocks.thisRepN'
p722
I0
sg76
g77
sg45
g12
sg23
F0.36861014366149902
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p723
I0
sg98
I3
sg99
I4
sa(dp724
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p725
I0
sS'task.thisIndex'
p726
g141
sS'practice_Afirst.thisIndex'
p727
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p728
NsS'task.thisN'
p729
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g689
sg16
g546
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p730
I0
sS'practice_trials_Afirst.thisIndex'
p731
g41
(g133
S'\x01\x00\x00\x00'
tRp732
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p733
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p734
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p735
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p736
NsS'practice_blocks.thisIndex'
p737
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p738
I21
sS'task.thisRepN'
p739
I0
sg86
g87
sS'practice_Afirst.thisN'
p740
I0
sS'practice_trials_Afirst.thisRepN'
p741
I5
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p742
I0
sg26
F0.20152401924133301
sg76
g77
sg45
g12
sg23
F0.26850485801696777
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p743
I1
sg98
I3
sg99
I4
sa(dp744
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p745
I0
sS'task.thisIndex'
p746
g141
sS'practice_Afirst.thisIndex'
p747
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p748
NsS'task.thisN'
p749
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g667
sg16
g360
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p750
I0
sS'practice_trials_Afirst.thisIndex'
p751
g41
(g133
S'\x02\x00\x00\x00'
tRp752
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p753
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p754
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p755
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p756
NsS'practice_blocks.thisIndex'
p757
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p758
I22
sS'task.thisRepN'
p759
I0
sg86
g87
sS'practice_Afirst.thisN'
p760
I0
sS'practice_trials_Afirst.thisRepN'
p761
I5
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p762
I0
sg26
F0.033967018127441406
sg76
g77
sg45
g12
sg23
F0.11758518218994141
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p763
I2
sg98
I3
sg99
I4
sa(dp764
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p765
g141
sS'practice_Afirst.thisIndex'
p766
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p767
NsS'task.thisN'
p768
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g689
sg16
g382
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p769
I0
sS'practice_trials_Afirst.thisIndex'
p770
g41
(g133
S'\x00\x00\x00\x00'
tRp771
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p772
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p773
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p774
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p775
NsS'practice_blocks.thisIndex'
p776
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p777
I23
sS'task.thisRepN'
p778
I0
sg86
g87
sS'practice_Afirst.thisN'
p779
I0
sS'practice_trials_Afirst.thisRepN'
p780
I5
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p781
I0
sS'practice_blocks.thisRepN'
p782
I0
sg76
g77
sg45
g12
sg23
F0.033699989318847656
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p783
I3
sg98
I3
sg99
I4
sa(dp784
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p785
I0
sS'task.thisIndex'
p786
g141
sS'practice_Afirst.thisIndex'
p787
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p788
NsS'task.thisN'
p789
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g445
sg16
g525
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p790
I0
sS'practice_trials_Afirst.thisIndex'
p791
g41
(g133
S'\x02\x00\x00\x00'
tRp792
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p793
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p794
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p795
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p796
NsS'practice_blocks.thisIndex'
p797
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p798
I24
sS'task.thisRepN'
p799
I0
sg86
g87
sS'practice_Afirst.thisN'
p800
I0
sS'practice_trials_Afirst.thisRepN'
p801
I6
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p802
I0
sg26
F0.23480486869812012
sg76
g77
sg45
g12
sg23
F0.28520703315734863
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p803
I0
sg98
I3
sg99
I4
sa(dp804
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p805
g141
sS'practice_Afirst.thisIndex'
p806
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p807
NsS'task.thisN'
p808
I0
sg68
g69
sg280
I4
sg70
g71
sg15
g667
sg16
g316
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p809
I0
sS'practice_trials_Afirst.thisIndex'
p810
g41
(g133
S'\x03\x00\x00\x00'
tRp811
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p812
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p813
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p814
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p815
NsS'practice_blocks.thisIndex'
p816
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p817
I25
sS'task.thisRepN'
p818
I0
sg86
g87
sS'practice_Afirst.thisN'
p819
I0
sS'practice_trials_Afirst.thisRepN'
p820
I6
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p821
I0
sS'practice_blocks.thisRepN'
p822
I0
sg76
g77
sg45
g12
sg23
F0.13429784774780273
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p823
I1
sg98
I3
sg99
I4
sa(dp824
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p825
I0
sS'task.thisIndex'
p826
g141
sS'practice_Afirst.thisIndex'
p827
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p828
NsS'task.thisN'
p829
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g338
sg16
g424
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p830
I0
sS'practice_trials_Afirst.thisIndex'
p831
g41
(g133
S'\x01\x00\x00\x00'
tRp832
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p833
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p834
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p835
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p836
NsS'practice_blocks.thisIndex'
p837
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p838
I26
sS'task.thisRepN'
p839
I0
sg86
g87
sS'practice_Afirst.thisN'
p840
I0
sS'practice_trials_Afirst.thisRepN'
p841
I6
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p842
I0
sg26
F0.11915493011474609
sg76
g77
sg45
g12
sg23
F0.21872305870056152
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p843
I2
sg98
I3
sg99
I4
sa(dp844
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p845
g141
sS'practice_Afirst.thisIndex'
p846
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p847
NsS'task.thisN'
p848
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g689
sg16
g360
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p849
I0
sS'practice_trials_Afirst.thisIndex'
p850
g41
(g133
S'\x00\x00\x00\x00'
tRp851
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p852
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p853
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p854
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p855
NsS'practice_blocks.thisIndex'
p856
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p857
I27
sS'task.thisRepN'
p858
I0
sg86
g87
sS'practice_Afirst.thisN'
p859
I0
sS'practice_trials_Afirst.thisRepN'
p860
I6
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p861
I0
sS'practice_blocks.thisRepN'
p862
I0
sg76
g77
sg45
g12
sg23
F0.017335891723632812
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p863
I3
sg98
I3
sg99
I4
sa(dp864
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p865
I0
sS'task.thisIndex'
p866
g141
sS'practice_Afirst.thisIndex'
p867
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p868
NsS'task.thisN'
p869
I0
sg68
g69
sg280
I3
sg70
g71
sg15
g445
sg16
g292
sg72
g73
sg24
S'i'
sS'practice_blocks.thisTrialN'
p870
I0
sS'practice_trials_Afirst.thisIndex'
p871
g41
(g133
S'\x02\x00\x00\x00'
tRp872
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p873
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p874
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p875
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p876
NsS'practice_blocks.thisIndex'
p877
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p878
I28
sS'task.thisRepN'
p879
I0
sg86
g87
sS'practice_Afirst.thisN'
p880
I0
sS'practice_trials_Afirst.thisRepN'
p881
I7
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p882
I0
sg26
F0.20176911354064941
sg76
g77
sg45
g12
sg23
F0.28531384468078613
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p883
I0
sg98
I3
sg99
I4
sa(dp884
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p885
I0
sS'task.thisIndex'
p886
g141
sS'practice_Afirst.thisIndex'
p887
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p888
NsS'task.thisN'
p889
I0
sg68
g69
sg280
I4
sg70
g71
sg15
g315
sg16
g546
sg72
g73
sg24
S'e'
sS'practice_blocks.thisTrialN'
p890
I0
sS'practice_trials_Afirst.thisIndex'
p891
g41
(g133
S'\x03\x00\x00\x00'
tRp892
sg78
g79
sg20
g91
sg281
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p893
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p894
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p895
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p896
NsS'practice_blocks.thisIndex'
p897
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p898
I29
sS'task.thisRepN'
p899
I0
sg86
g87
sS'practice_Afirst.thisN'
p900
I0
sS'practice_trials_Afirst.thisRepN'
p901
I7
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p902
I0
sg26
F0.067096948623657227
sg76
g77
sg45
g12
sg23
F0.10073590278625488
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p903
I1
sg98
I3
sg99
I4
sa(dp904
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p905
I0
sS'task.thisIndex'
p906
g141
sS'practice_Afirst.thisIndex'
p907
g288
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p908
NsS'task.thisN'
p909
I0
sg68
g69
sg280
I1
sg70
g71
sg15
g338
sg16
g382
sg72
g73
sg24
S'e'
sS'practice_blocks.thisTrialN'
p910
I0
sS'practice_trials_Afirst.thisIndex'
p911
g41
(g133
S'\x00\x00\x00\x00'
tRp912
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p913
I0
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p914
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p915
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p916
NsS'practice_blocks.thisIndex'
p917
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p918
I30
sS'task.thisRepN'
p919
I0
sg86
g87
sS'practice_Afirst.thisN'
p920
I0
sS'practice_trials_Afirst.thisRepN'
p921
I7
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p922
I0
sg26
F0.46823692321777344
sg76
g77
sg45
g12
sg23
F0.46956491470336914
sg80
g81
sg38
V
sg39
V
sg282
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p923
I2
sg98
I3
sg99
I4
sa(dp924
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p925
g141
sS'practice_Afirst.thisIndex'
p926
g288
sg21
S'e'
sg40
g44
sS'practice_Afirst.thisTrial'
p927
NsS'task.thisN'
p928
I0
sg68
g69
sg280
I2
sg70
g71
sg15
g291
sg16
g316
sg72
g73
sg24
NsS'practice_blocks.thisTrialN'
p929
I0
sS'practice_trials_Afirst.thisIndex'
p930
g41
(g133
S'\x01\x00\x00\x00'
tRp931
sg78
g79
sg20
g91
sg281
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p932
I0
sg96
g97
sg22
I1
sS'practice_Afirst.thisTrialN'
p933
I0
sg101
g102
sg19
g93
sS'task.thisTrialN'
p934
I0
sg25
I0
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p935
NsS'practice_blocks.thisIndex'
p936
g302
sg66
g67
sS'practice_trials_Afirst.thisN'
p937
I31
sS'task.thisRepN'
p938
I0
sg86
g87
sS'practice_Afirst.thisN'
p939
I0
sS'practice_trials_Afirst.thisRepN'
p940
I7
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p941
I0
sS'practice_blocks.thisRepN'
p942
I0
sg76
g77
sg45
g12
sg23
F0.16755008697509766
sg80
g81
sg38
V
sg39
V
sg282
Vd
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p943
I3
sg98
I3
sg99
I4
sa(dp944
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p945
g141
sg40
g44
sS'task.thisN'
p946
I0
sS'practice_trials_B.thisIndex'
p947
g41
(g133
S'\x01\x00\x00\x00'
tRp948
sg28
I1
sVtrialType
p949
I2
sg70
g71
sg15
g381
sg31
I0
sg16
g316
sg72
g73
sS'practice_blocks.thisTrialN'
p950
I0
sg78
g79
sg20
g91
sVstimulus1_category
p951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p952
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p953
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p954
NsS'practice_blocks.thisIndex'
p955
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p956
I0
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p957
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p958
I0
sS'task.thisRepN'
p959
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sVstimulus2_category
p960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p961
I0
sg29
F0.10012006759643555
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp962
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p963
g141
sg40
g44
sS'task.thisN'
p964
I0
sS'practice_trials_B.thisIndex'
p965
g41
(g133
S'\x00\x00\x00\x00'
tRp966
sg28
I1
sg949
I1
sg70
g71
sg15
g381
sg32
F0.10111498832702637
sg31
I1
sg16
g292
sg72
g73
sS'practice_blocks.thisTrialN'
p967
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p968
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p969
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p970
NsS'practice_blocks.thisIndex'
p971
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p972
I0
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p973
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p974
I1
sS'task.thisRepN'
p975
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p976
I1
sg29
F0.1183478832244873
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp977
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p978
g141
sg40
g44
sS'task.thisN'
p979
I0
sS'practice_trials_B.thisIndex'
p980
g41
(g133
S'\x02\x00\x00\x00'
tRp981
sg28
I1
sg949
I3
sg70
g71
sg15
g667
sg32
F0.11844706535339355
sg31
I1
sg16
g525
sg72
g73
sS'practice_blocks.thisTrialN'
p982
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p983
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p984
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p985
NsS'practice_blocks.thisIndex'
p986
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p987
I0
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p988
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p989
I2
sS'task.thisRepN'
p990
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p991
I2
sg29
F0.15112400054931641
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp992
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p993
g141
sg40
g44
sS'task.thisN'
p994
I0
sS'practice_trials_B.thisIndex'
p995
g41
(g133
S'\x03\x00\x00\x00'
tRp996
sg28
I1
sg949
I4
sg70
g71
sg15
g402
sg32
F0.017091989517211914
sg31
I1
sg16
g424
sg72
g73
sS'practice_blocks.thisTrialN'
p997
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p998
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p999
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1000
NsS'practice_blocks.thisIndex'
p1001
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1002
I0
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1003
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1004
I3
sS'task.thisRepN'
p1005
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1006
I3
sg29
F0.048956871032714844
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1007
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1008
g141
sg40
g44
sS'task.thisN'
p1009
I0
sS'practice_trials_B.thisIndex'
p1010
g41
(g133
S'\x00\x00\x00\x00'
tRp1011
sg28
I1
sg949
I1
sg70
g71
sg15
g338
sg32
F0.068198919296264648
sg31
I1
sg16
g360
sg72
g73
sS'practice_blocks.thisTrialN'
p1012
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1013
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1014
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1015
NsS'practice_blocks.thisIndex'
p1016
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1017
I1
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1018
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1019
I0
sS'task.thisRepN'
p1020
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1021
I4
sg29
F0.068480968475341797
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1022
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1023
g141
sg40
g44
sS'task.thisN'
p1024
I0
sS'practice_trials_B.thisIndex'
p1025
g41
(g133
S'\x01\x00\x00\x00'
tRp1026
sg28
I1
sg949
I2
sg70
g71
sg15
g381
sg32
F0.10142016410827637
sg31
I1
sg16
g546
sg72
g73
sS'practice_blocks.thisTrialN'
p1027
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1028
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1029
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1030
NsS'practice_blocks.thisIndex'
p1031
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1032
I1
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1033
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1034
I1
sS'task.thisRepN'
p1035
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1036
I5
sg29
F0.10166311264038086
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1037
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1038
g141
sg40
g44
sS'task.thisN'
p1039
I0
sS'practice_trials_B.thisIndex'
p1040
g41
(g133
S'\x03\x00\x00\x00'
tRp1041
sg28
I1
sg949
I4
sg70
g71
sg15
g445
sg32
F0.050679922103881836
sg31
I1
sg16
g316
sg72
g73
sS'practice_blocks.thisTrialN'
p1042
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1043
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1044
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1045
NsS'practice_blocks.thisIndex'
p1046
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1047
I1
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1048
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1049
I2
sS'task.thisRepN'
p1050
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1051
I6
sg29
F0.067928075790405273
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1052
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1053
g141
sg40
g44
sS'task.thisN'
p1054
I0
sS'practice_trials_B.thisIndex'
p1055
g41
(g133
S'\x02\x00\x00\x00'
tRp1056
sg28
I1
sg949
I3
sg70
g71
sg15
g402
sg31
I0
sg16
g360
sg72
g73
sS'practice_blocks.thisTrialN'
p1057
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1058
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1059
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1060
NsS'practice_blocks.thisIndex'
p1061
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1062
I1
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1063
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1064
I3
sS'task.thisRepN'
p1065
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1066
I7
sg29
F0.05121612548828125
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1067
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1068
g141
sg40
g44
sS'task.thisN'
p1069
I0
sS'practice_trials_B.thisIndex'
p1070
g41
(g133
S'\x00\x00\x00\x00'
tRp1071
sg28
I1
sg949
I1
sg70
g71
sg15
g689
sg31
I0
sg16
g360
sg72
g73
sS'practice_blocks.thisTrialN'
p1072
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1073
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1074
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1075
NsS'practice_blocks.thisIndex'
p1076
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1077
I2
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1078
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1079
I0
sS'task.thisRepN'
p1080
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1081
I8
sg29
F0.084462881088256836
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1082
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1083
g141
sg40
g44
sS'task.thisN'
p1084
I0
sS'practice_trials_B.thisIndex'
p1085
g41
(g133
S'\x01\x00\x00\x00'
tRp1086
sg28
I1
sg949
I2
sg70
g71
sg15
g291
sg32
F0.10086202621459961
sg31
I1
sg16
g316
sg72
g73
sS'practice_blocks.thisTrialN'
p1087
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1088
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1089
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1090
NsS'practice_blocks.thisIndex'
p1091
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1092
I2
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1093
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1094
I1
sS'task.thisRepN'
p1095
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1096
I9
sg29
F0.11760592460632324
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1097
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1098
g141
sg40
g44
sS'task.thisN'
p1099
I0
sS'practice_trials_B.thisIndex'
p1100
g41
(g133
S'\x02\x00\x00\x00'
tRp1101
sg28
I1
sg949
I3
sg70
g71
sg15
g315
sg32
F0.30161690711975098
sg31
I1
sg16
g382
sg72
g73
sS'practice_blocks.thisTrialN'
p1102
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1103
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1104
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1105
NsS'practice_blocks.thisIndex'
p1106
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1107
I2
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1108
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1109
I2
sS'task.thisRepN'
p1110
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1111
I10
sg29
F0.31846189498901367
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1112
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1113
g141
sg40
g44
sS'task.thisN'
p1114
I0
sS'practice_trials_B.thisIndex'
p1115
g41
(g133
S'\x03\x00\x00\x00'
tRp1116
sg28
I1
sg949
I4
sg70
g71
sg15
g402
sg32
F0.23504400253295898
sg31
I1
sg16
g424
sg72
g73
sS'practice_blocks.thisTrialN'
p1117
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1118
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1119
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1120
NsS'practice_blocks.thisIndex'
p1121
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1122
I2
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1123
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1124
I3
sS'task.thisRepN'
p1125
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1126
I11
sg29
F0.33482909202575684
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1127
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1128
g141
sg40
g44
sS'task.thisN'
p1129
I0
sS'practice_trials_B.thisIndex'
p1130
g41
(g133
S'\x03\x00\x00\x00'
tRp1131
sg28
I1
sg949
I4
sg70
g71
sg15
g445
sg32
F0.15153694152832031
sg31
I1
sg16
g546
sg72
g73
sS'practice_blocks.thisTrialN'
p1132
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1133
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1134
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1135
NsS'practice_blocks.thisIndex'
p1136
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1137
I3
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1138
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1139
I0
sS'task.thisRepN'
p1140
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1141
I12
sg29
F0.15175890922546387
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1142
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1143
g141
sg40
g44
sS'task.thisN'
p1144
I0
sS'practice_trials_B.thisIndex'
p1145
g41
(g133
S'\x00\x00\x00\x00'
tRp1146
sg28
I1
sg949
I1
sg70
g71
sg15
g338
sg32
F0.084106922149658203
sg31
I1
sg16
g525
sg72
g73
sS'practice_blocks.thisTrialN'
p1147
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1148
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1149
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1150
NsS'practice_blocks.thisIndex'
p1151
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1152
I3
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1153
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1154
I1
sS'task.thisRepN'
p1155
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1156
I13
sg29
F0.11825895309448242
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1157
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1158
g141
sg40
g44
sS'task.thisN'
p1159
I0
sS'practice_trials_B.thisIndex'
p1160
g41
(g133
S'\x02\x00\x00\x00'
tRp1161
sg28
I1
sg949
I3
sg70
g71
sg15
g667
sg31
I0
sg16
g292
sg72
g73
sS'practice_blocks.thisTrialN'
p1162
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1163
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1164
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1165
NsS'practice_blocks.thisIndex'
p1166
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1167
I3
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1168
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1169
I2
sS'task.thisRepN'
p1170
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1171
I14
sg29
F0.10131096839904785
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1172
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1173
g141
sg40
g44
sS'task.thisN'
p1174
I0
sS'practice_trials_B.thisIndex'
p1175
g41
(g133
S'\x01\x00\x00\x00'
tRp1176
sg28
I1
sg949
I2
sg70
g71
sg15
g689
sg31
I0
sg16
g546
sg72
g73
sS'practice_blocks.thisTrialN'
p1177
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1178
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1179
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1180
NsS'practice_blocks.thisIndex'
p1181
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1182
I3
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1183
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1184
I3
sS'task.thisRepN'
p1185
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1186
I15
sg29
F0.35188889503479004
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1187
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1188
g141
sg40
g44
sS'task.thisN'
p1189
I0
sS'practice_trials_B.thisIndex'
p1190
g41
(g133
S'\x03\x00\x00\x00'
tRp1191
sg28
I1
sg949
I4
sg70
g71
sg15
g445
sg32
F0.25135588645935059
sg31
I1
sg16
g546
sg72
g73
sS'practice_blocks.thisTrialN'
p1192
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1193
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1194
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1195
NsS'practice_blocks.thisIndex'
p1196
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1197
I4
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1198
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1199
I0
sS'task.thisRepN'
p1200
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1201
I16
sg29
F0.26845788955688477
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1202
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1203
g141
sg40
g44
sS'task.thisN'
p1204
I0
sS'practice_trials_B.thisIndex'
p1205
g41
(g133
S'\x02\x00\x00\x00'
tRp1206
sg28
I1
sg949
I3
sg70
g71
sg15
g315
sg31
I0
sg16
g360
sg72
g73
sS'practice_blocks.thisTrialN'
p1207
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1208
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1209
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1210
NsS'practice_blocks.thisIndex'
p1211
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1212
I4
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1213
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1214
I1
sS'task.thisRepN'
p1215
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1216
I17
sg29
F0.21832394599914551
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1217
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1218
g141
sg40
g44
sS'task.thisN'
p1219
I0
sS'practice_trials_B.thisIndex'
p1220
g41
(g133
S'\x01\x00\x00\x00'
tRp1221
sg28
I1
sg949
I2
sg70
g71
sg15
g291
sg32
F0.13410115242004395
sg31
I1
sg16
g339
sg72
g73
sS'practice_blocks.thisTrialN'
p1222
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1223
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1224
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1225
NsS'practice_blocks.thisIndex'
p1226
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1227
I4
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1228
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1229
I2
sS'task.thisRepN'
p1230
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1231
I18
sg29
F0.15195488929748535
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1232
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1233
g141
sg40
g44
sS'task.thisN'
p1234
I0
sS'practice_trials_B.thisIndex'
p1235
g41
(g133
S'\x00\x00\x00\x00'
tRp1236
sg28
I1
sg949
I1
sg70
g71
sg15
g291
sg32
F0.26774811744689941
sg31
I1
sg16
g525
sg72
g73
sS'practice_blocks.thisTrialN'
p1237
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1238
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1239
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1240
NsS'practice_blocks.thisIndex'
p1241
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1242
I4
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1243
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1244
I3
sS'task.thisRepN'
p1245
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1246
I19
sg29
F0.26805996894836426
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1247
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1248
g141
sg40
g44
sS'task.thisN'
p1249
I0
sS'practice_trials_B.thisIndex'
p1250
g41
(g133
S'\x03\x00\x00\x00'
tRp1251
sg28
I1
sg949
I4
sg70
g71
sg15
g445
sg32
F0.25277805328369141
sg31
I1
sg16
g424
sg72
g73
sS'practice_blocks.thisTrialN'
p1252
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1253
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1254
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1255
NsS'practice_blocks.thisIndex'
p1256
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1257
I5
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1258
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1259
I0
sS'task.thisRepN'
p1260
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1261
I20
sg29
F0.25320100784301758
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1262
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1263
g141
sg40
g44
sS'task.thisN'
p1264
I0
sS'practice_trials_B.thisIndex'
p1265
g41
(g133
S'\x02\x00\x00\x00'
tRp1266
sg28
I1
sg949
I3
sg70
g71
sg15
g667
sg32
F0.16909098625183105
sg31
I1
sg16
g382
sg72
g73
sS'practice_blocks.thisTrialN'
p1267
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1268
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1269
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1270
NsS'practice_blocks.thisIndex'
p1271
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1272
I5
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1273
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1274
I1
sS'task.thisRepN'
p1275
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1276
I21
sg29
F0.1693580150604248
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1277
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1278
g141
sg40
g44
sS'task.thisN'
p1279
I0
sS'practice_trials_B.thisIndex'
p1280
g41
(g133
S'\x01\x00\x00\x00'
tRp1281
sg28
I1
sg949
I2
sg70
g71
sg15
g689
sg32
F0.18474984169006348
sg31
I1
sg16
g339
sg72
g73
sS'practice_blocks.thisTrialN'
p1282
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1283
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1284
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1285
NsS'practice_blocks.thisIndex'
p1286
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1287
I5
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1288
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1289
I2
sS'task.thisRepN'
p1290
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1291
I22
sg29
F0.18505311012268066
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1292
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1293
g141
sg40
g44
sS'task.thisN'
p1294
I0
sS'practice_trials_B.thisIndex'
p1295
g41
(g133
S'\x00\x00\x00\x00'
tRp1296
sg28
I1
sg949
I1
sg70
g71
sg15
g689
sg32
F0.16808509826660156
sg31
I1
sg16
g382
sg72
g73
sS'practice_blocks.thisTrialN'
p1297
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1298
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1299
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1300
NsS'practice_blocks.thisIndex'
p1301
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1302
I5
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1303
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1304
I3
sS'task.thisRepN'
p1305
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1306
I23
sg29
F0.16834902763366699
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1307
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1308
g141
sg40
g44
sS'task.thisN'
p1309
I0
sS'practice_trials_B.thisIndex'
p1310
g41
(g133
S'\x00\x00\x00\x00'
tRp1311
sg28
I1
sg949
I1
sg70
g71
sg15
g381
sg31
I0
sg16
g292
sg72
g73
sS'practice_blocks.thisTrialN'
p1312
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1313
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1314
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1315
NsS'practice_blocks.thisIndex'
p1316
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1317
I6
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1318
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1319
I0
sS'task.thisRepN'
p1320
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1321
I24
sg29
F0.16864109039306641
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1322
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1323
g141
sg40
g44
sS'task.thisN'
p1324
I0
sS'practice_trials_B.thisIndex'
p1325
g41
(g133
S'\x01\x00\x00\x00'
tRp1326
sg28
I1
sg949
I2
sg70
g71
sg15
g338
sg32
F0.18397188186645508
sg31
I1
sg16
g339
sg72
g73
sS'practice_blocks.thisTrialN'
p1327
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1328
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1329
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1330
NsS'practice_blocks.thisIndex'
p1331
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1332
I6
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1333
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1334
I1
sS'task.thisRepN'
p1335
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1336
I25
sg29
F0.18468904495239258
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1337
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1338
g141
sg40
g44
sS'task.thisN'
p1339
I0
sS'practice_trials_B.thisIndex'
p1340
g41
(g133
S'\x03\x00\x00\x00'
tRp1341
sg28
I1
sg949
I4
sg70
g71
sg15
g667
sg31
I0
sg16
g316
sg72
g73
sS'practice_blocks.thisTrialN'
p1342
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1343
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1344
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1345
NsS'practice_blocks.thisIndex'
p1346
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1347
I6
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1348
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1349
I2
sS'task.thisRepN'
p1350
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1351
I26
sg29
F0.15119719505310059
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1352
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1353
g141
sg40
g44
sS'task.thisN'
p1354
I0
sS'practice_trials_B.thisIndex'
p1355
g41
(g133
S'\x02\x00\x00\x00'
tRp1356
sg28
I1
sg949
I3
sg70
g71
sg15
g315
sg32
F0.16870713233947754
sg31
I1
sg16
g525
sg72
g73
sS'practice_blocks.thisTrialN'
p1357
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1358
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1359
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1360
NsS'practice_blocks.thisIndex'
p1361
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1362
I6
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1363
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1364
I3
sS'task.thisRepN'
p1365
I0
sg30
S'e'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1366
I27
sg29
F0.18404102325439453
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1367
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1368
g141
sg40
g44
sS'task.thisN'
p1369
I0
sS'practice_trials_B.thisIndex'
p1370
g41
(g133
S'\x03\x00\x00\x00'
tRp1371
sg28
I1
sg949
I4
sg70
g71
sg15
g315
sg32
F0.10068702697753906
sg31
I1
sg16
g339
sg72
g73
sS'practice_blocks.thisTrialN'
p1372
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1373
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1374
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1375
NsS'practice_blocks.thisIndex'
p1376
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1377
I7
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1378
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1379
I0
sS'task.thisRepN'
p1380
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1381
I28
sg29
F0.11910080909729004
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1382
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1383
g141
sg40
g44
sS'task.thisN'
p1384
I0
sS'practice_trials_B.thisIndex'
p1385
g41
(g133
S'\x00\x00\x00\x00'
tRp1386
sg28
I1
sg949
I1
sg70
g71
sg15
g338
sg32
F0.45355892181396484
sg31
I1
sg16
g292
sg72
g73
sS'practice_blocks.thisTrialN'
p1387
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1388
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1389
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1390
NsS'practice_blocks.thisIndex'
p1391
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1392
I7
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1393
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1394
I1
sS'task.thisRepN'
p1395
I0
sg30
S'i'
sg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1396
I29
sg29
F0.48667097091674805
sg98
I3
sg99
I4
sg68
g69
sg27
S'e'
sa(dp1397
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1398
g141
sg40
g44
sS'task.thisN'
p1399
I0
sS'practice_trials_B.thisIndex'
p1400
g41
(g133
S'\x02\x00\x00\x00'
tRp1401
sg28
I1
sg949
I3
sg70
g71
sg15
g402
sg31
I0
sg16
g382
sg72
g73
sS'practice_blocks.thisTrialN'
p1402
I0
sg78
g79
sg20
g91
sg951
Vb
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1403
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1404
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1405
NsS'practice_blocks.thisIndex'
p1406
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1407
I7
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1408
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1409
I2
sS'task.thisRepN'
p1410
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vc
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1411
I30
sg29
F0.10107183456420898
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1412
g60
g61
sg62
I80
sg63
g64
sS'task.thisIndex'
p1413
g141
sg40
g44
sS'task.thisN'
p1414
I0
sS'practice_trials_B.thisIndex'
p1415
g41
(g133
S'\x01\x00\x00\x00'
tRp1416
sg28
I1
sg949
I2
sg70
g71
sg15
g291
sg31
I0
sg16
g424
sg72
g73
sS'practice_blocks.thisTrialN'
p1417
I0
sg78
g79
sg20
g91
sg951
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1418
I0
sg96
g97
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1419
I0
sg45
g12
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1420
NsS'practice_blocks.thisIndex'
p1421
g302
sg66
g67
sS'practice_trials_B.thisRepN'
p1422
I7
sg86
g87
sg46
g47
sg36
V5
sg74
g75
sS'practice_blocks.thisRepN'
p1423
I0
sg76
g77
sS'practice_trials_B.thisTrialN'
p1424
I3
sS'task.thisRepN'
p1425
I0
sg30
Nsg80
g81
sg38
V
sg39
V
sg960
Vd
sg88
g89
sg94
g95
sS'practice_trials_B.thisN'
p1426
I31
sg29
F0.21765899658203125
sg98
I3
sg99
I4
sg68
g69
sg27
S'i'
sa(dp1427
g60
g61
sg62
I80
sg63
g64
sS'practice_Afirst.thisTrialN'
p1428
I0
sS'task.thisIndex'
p1429
g141
sS'practice_Afirst.thisIndex'
p1430
g175
sg21
S'i'
sg40
g44
sS'practice_Afirst.thisTrial'
p1431
NsS'task.thisN'
p1432
I0
sg68
g69
sg180
I1
sg70
g71
sg15
g689
sg16
g382
sg72
g73
sg24
S'e'
sS'practice_blocks.thisTrialN'
p1433
I0
sS'practice_trials_Afirst.thisIndex'
p1434
g41
(g133
S'\x00\x00\x00\x00'
tRp1435
sg78
g79
sg20
g91
sg181
Va
sg82
g83
sg84
g85
sg17
g296
sg18
g296
sg90
g91
sg92
g93
sg100
I2
sS'practice_blocks.thisN'
p1436
I1
sg96
g97
sg22
I1
sS'practice_blocks.thisRepN'
p1437
I1
sg101
g102
sg19
g93
sS'task.thisTrialN'
p1438
I0
sg25
I1
sg37
Vn
sg65
g65
sg48
Va
sS'practice_blocks.thisTrial'
p1439
NsS'practice_blocks.thisIndex'
p1440
g160
sg66
g67
sS'practice_trials_Afirst.thisN'
p1441
I0
sS'task.thisRepN'
p1442
I0
sg86
g87
sS'practice_Afirst.thisN'
p1443
I0
sS'practice_trials_Afirst.thisRepN'
p1444
I0
sg46
g47
sg36
V5
sg74
g75
sS'practice_Afirst.thisRepN'
p1445
I0
sg26
F0.38519096374511719
sg76
g77
sg45
g12
sg23
F0.38551187515258789
sg80
g81
sg38
V
sg39
V
sg182
Vc
sg88
g89
sg94
g95
sS'practice_trials_Afirst.thisTrialN'
p1446
I0
sg98
I3
sg99
I4
sasS'loops'
p1447
(lp1448
g52
ag146
ag1
(g51
g3
NtRp1449
(dp1450
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1451
sg56
(lp1452
sg104
I213496304
sg11
g164
sg6
g7
sg106
I1
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp1453
g110
g111
(g112
g113
g114
S'b'
tRp1454
(I1
(I1
I1
tg116
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp1455
(I1
(I1
I1
tg116
I00
S'\x00\x00\x00\x00'
S'\x00'
NtbstRp1456
(dp1457
g121
(dp1458
g110
I01
sg117
I01
ssg123
g1449
sg124
(lp1459
g110
ag117
asg126
(lp1460
I1
aI1
asbsg128
g129
sg130
g131
(g113
(I0
tS'b'
tRp1461
(I1
(I1
I1
tg133
I00
S'\x00\x00\x00\x00'
tbsg134
I01
sg135
I1
sg136
I-1
sg137
(lp1462
Nasg139
Nsg140
g288
sg142
I1
sg143
I0
sg144
I1
sg145
I01
sbag1
(g51
g3
NtRp1463
(dp1464
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1465
sg56
(lp1466
sg104
I213496304
sg11
g184
sg6
g7
sg106
I8
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp1467
g23
g111
(g112
g113
g114
S'b'
tRp1468
(I1
(I4
I8
tg116
I00
S'\x84t4?\xb0\xa0\t>Hj\x89>P\xb5_>\xa0\xfb\xce=\x00\t\n=\x00\x04\x8e<\xd0j\xf0>\xa0\xb2<> \xdf^>\x88o\t? \xef\xbc>\xc8"\xb4>xy\x89>\xf0\xf8_>@\x92+>\x80\x0b\t>\xb8f\x81>\xc2\x83\x9c? \x81o>\xf0\xddo>\x80\xd0\xf0=\xa8\x06\x92>\xa8\x14\x92>\xe0\x95_>\x80\x13\xae=\x08\xc7\xab>\x98\xe2\x9a>@S=>x\xba\xbc>`\x85\t>\xa0N\xce='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
g111
(g112
g113
g114
S'b'
tRp1469
(I1
(I4
I8
tg116
I00
S'\x00\x00\x00\x00\x00K\t>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xbc\xef>`\xd1\xcd=\x90?*>L\x1c\x05?x\xdd\x9a>`g\x9a>P\\N>\x80\x07\xf4=\x00\x00\x00\x00\xe0\xdd\x8a=\xb0W\x81>@-\x96?`PM>\xd0\xc7<>\x00!\x0b=\xb0pp>\x90\x9cN>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 j\x89='
S'\x01\x00\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00'
Ntbsg110
g111
(g112
g113
g114
S'b'
tRp1470
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g131
(g113
(I0
tS'b'
tRp1471
(I1
(I4
I8
tg190
I00
(lp1472
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg24
g131
(g113
(I0
tS'b'
tRp1473
(I1
(I4
I8
tg190
I00
(lp1474
NaS'e'
aNaNaNaNaNaS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaNaNaNaS'e'
atbsg25
g111
(g112
g113
g114
S'b'
tRp1475
(I1
(I4
I8
tg116
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g111
(g112
g113
g114
S'b'
tRp1476
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp1477
(I1
(I4
I8
tg116
I00
S'\x00\x00\x00\x00\x00\x00\x80@\x00\x000A\x00\x00`A\x00\x00\x88A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xf0A\x00\x00\x00@\x00\x00\xc0@\x00\x00\x10A\x00\x00PA\x00\x00\x98A\x00\x00\xa8A\x00\x00\xd0A\x00\x00\xf8A\x00\x00@@\x00\x00\xe0@\x00\x00 A\x00\x00pA\x00\x00\x80A\x00\x00\xb0A\x00\x00\xc0A\x00\x00\xe0A\x00\x00\x80?\x00\x00\xa0@\x00\x00\x00A\x00\x00@A\x00\x00\x90A\x00\x00\xa0A\x00\x00\xc8A\x00\x00\xe8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1478
(dp1479
g121
(dp1480
g23
I01
sg26
I01
sg110
I01
sg21
I00
sg117
I01
sg25
I01
sg22
I01
sg24
I00
ssg123
g1463
sg124
(lp1481
g110
ag117
ag21
ag22
ag23
ag24
ag25
ag26
asg126
(lp1482
I4
aI8
asbsg128
g264
sg130
g131
(g113
(I0
tS'b'
tRp1483
(I1
(I4
I8
tg133
I01
S'\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
tbsg134
I01
sg135
I8
sg136
I-1
sg137
(lp1484
g1
(g57
g58
(dp1485
g280
I1
sg281
Va
sg282
Vc
stRp1486
ag1
(g57
g58
(dp1487
g280
I2
sg281
Va
sg282
Vd
stRp1488
ag1
(g57
g58
(dp1489
g280
I3
sg281
Vb
sg282
Vc
stRp1490
ag1
(g57
g58
(dp1491
g280
I4
sg281
Vb
sg282
Vd
stRp1492
asg139
Nsg140
g931
sg142
I32
sg143
I0
sg144
I32
sg145
I01
sbag1
(g51
g3
NtRp1493
(dp1494
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1495
sg56
(lp1496
sg104
I213496304
sg11
S'practice_trials_B'
p1497
sg6
g7
sg106
I8
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp1498
g30
g131
(g113
(I0
tS'b'
tRp1499
(I1
(I4
I8
tg190
I00
(lp1500
S'i'
aS'i'
aNaS'i'
aS'i'
aS'i'
aNaS'i'
aNaS'e'
aS'e'
aNaS'e'
aS'e'
aS'e'
aNaS'e'
aNaS'e'
aNaNaS'e'
aS'e'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
atbsg110
g111
(g112
g113
g114
S'b'
tRp1501
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g111
(g112
g113
g114
S'b'
tRp1502
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg29
g111
(g112
g113
g114
S'b'
tRp1503
(I1
(I4
I8
tg116
I00
S'``\xf2=\xc0?\x8c=\xe0\xfa\xac=\xc01\xf2=(?\x89>\xb0c,>@\xb0,>\xf0,\xf9>\xc0\x0b\xcd=\xc04\xd0=`\xdb\xf0=\xc8*\xb4>\x10\x9a\x1b>\x90~=> \x1f=>\x00\xe2^>@\xc0\x1a>\x00\xc8Q=p\r\xa3> |\xcf=P\x90_>0l->@u<>\xc0\xfe\xce=\x00\x87H=\xe0\x1d\x8b=\xb8n\xab>\xb0f\x1b>Ps\x89>\x90\xa3\x81>p\xd3\x1a> \xeb\xf3='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g111
(g112
g113
g114
S'b'
tRp1504
(I1
(I4
I8
tg116
I00
S'`\x15\xcf=\xe0\xab\x8b=\x00\x00\x00\x00@@\xac=H\x16\x89>\x80\x1e,>\x00\x00\x00\x00\xe08\xe8>\x00\x00\x00\x00`\xb5\xcf=\xc0\x90\xce=\x00\x00\x00\x00\xd0Q\t>\x10/=> c<>\x00\x00\x00\x00`\x94\xf2=\x00\x00\x00\x00\x88m\x9a>\x00\x00\x00\x00\x00\x00\x00\x000&->\x90\xc1,>\x00\x00\x00\x00\x80\x04\x8c<\xc0\x95O=`\xafp>\x80,\x1b>\xb8\xb1\x80> l\x81>\x00\x00\x00\x00\x005\xce='
S'\x00\x00\x01\x00\x00\x00\x01\x00\x01\x00\x00\x01\x00\x00\x00\x01\x00\x01\x00\x01\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00'
Ntbsg31
g111
(g112
g113
g114
S'b'
tRp1505
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp1506
(I1
(I4
I8
tg116
I00
S'\x00\x00\x80?\x00\x00\x80@\x00\x00\x00A\x00\x00PA\x00\x00\x98A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xe8A\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x10A\x00\x00pA\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xf8A\x00\x00\x00@\x00\x00\xe0@\x00\x00 A\x00\x00`A\x00\x00\x88A\x00\x00\xa8A\x00\x00\xd8A\x00\x00\xf0A\x00\x00@@\x00\x00\xc0@\x00\x000A\x00\x00@A\x00\x00\x80A\x00\x00\xa0A\x00\x00\xd0A\x00\x00\xe0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g131
(g113
(I0
tS'b'
tRp1507
(I1
(I4
I8
tg190
I00
(lp1508
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp1509
(dp1510
g121
(dp1511
g30
I00
sg110
I01
sg28
I01
sg29
I01
sg32
I01
sg31
I01
sg117
I01
sg27
I00
ssg123
g1493
sg124
(lp1512
g110
ag117
ag27
ag28
ag29
ag30
ag31
ag32
asg126
(lp1513
I4
aI8
asbsg128
g264
sg130
g131
(g113
(I0
tS'b'
tRp1514
(I1
(I4
I8
tg133
I01
S'\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00'
tbsg134
I01
sg135
I8
sg136
I-1
sg137
(lp1515
g1
(g57
g58
(dp1516
g949
I1
sg951
Va
sg960
Vc
stRp1517
ag1
(g57
g58
(dp1518
g949
I2
sg951
Va
sg960
Vd
stRp1519
ag1
(g57
g58
(dp1520
g949
I3
sg951
Vb
sg960
Vc
stRp1521
ag1
(g57
g58
(dp1522
g949
I4
sg951
Vb
sg960
Vd
stRp1523
asg139
Nsg140
g1416
sg142
I32
sg143
I0
sg144
I32
sg145
I01
sbag1
(g51
g3
NtRp1524
(dp1525
g54
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IRAP" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="norm" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="practice_postblock_B">\u000a      <CodeComponent name="practice_postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="practice_postblock_A">\u000a      <CodeComponent name="practice_postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="practice_aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="practice_latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_prac_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="practice_postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_response">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".4" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_B">\u000a      <CodeComponent name="postblock_code_B">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_B">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="postblock_A">\u000a      <CodeComponent name="postblock_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="aim_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="aim_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="latency_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="latency_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="press_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="press_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="postblock_response_A">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial_B">\u000a      <CodeComponent name="trial_code_B">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_B" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_B">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_B">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="trial_A">\u000a      <CodeComponent name="trial_code_A">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code_A" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_A&#10;    response_option_right = response_option_B&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="image_stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <ImageComponent name="image_stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulus1_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="stimulus2_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="required_response_A">\u000a        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response_A">\u000a        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="left_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="left_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="right_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="right_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="accuracy_feedback_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end_practice_blocks">\u000a      <CodeComponent name="end_practice_code">\u000a        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_practice_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    practice_blocks.finished=True&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="preblock_A">\u000a      <CodeComponent name="preblock_A_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;#msg variable just needs some value at start&#10;accuracyFeedback=''&#10;&#10;# To convert the moving_response_options String to a boolean:&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)  # Take any likely input from the blocks.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;&#10;&quot;&quot;&quot;&#10;Create sufficiently long lists of stimuli&#10;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_A">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="orange" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_A">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="preblock_B">\u000a      <CodeComponent name="preblock_B_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('categoryA_stimuli', 2)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('categoryB_stimuli', 2)&#10;stim2_catA_stimuli_many = generate_trials('categoryC_stimuli', 2)&#10;stim2_catB_stimuli_many = generate_trials('categoryD_stimuli', 2)&#10;img_stim1_catA_stimuli_many = generate_trials('categoryA_image_stimuli', 2)&#10;img_stim1_catB_stimuli_many = generate_trials('categoryB_image_stimuli', 2)&#10;img_stim2_catA_stimuli_many = generate_trials('categoryC_image_stimuli', 2)&#10;img_stim2_catB_stimuli_many = generate_trials('categoryD_image_stimuli', 2)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="rule_box_B">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="cyan" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="preblock_response_B">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="intro_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="intro_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.4" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="intro_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="intro_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="# Dependencies for response emulator&#10;from psychopy.hardware.emulator import ResponseEmulator&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# Assess if monkey should run based on dialogue box&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="task">\u000a      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="task" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'accuracyCriterion': 60, u'seconds': u'seconds', u'n_pairs_practice_blocks': 4, u'percentCorrect': u'percent correct', u'speed': u'Speed:', u'moving_response_options': u'False', u'rule_A': u&quot;Respond AS IF men are masculine and women are feminine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'rule_B': u&quot;Respond AS IF men are feminine and women are masculine\u005cn\u005cnUse the 'e' and 'i' keys&quot;, u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'response_option_B': u'Similar', u'response_option_A': u'Different', u'latencyCriterion': 2, u'n_pairs_test_blocks': 3, u'accuracy': u'Accuracy:'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Afirst"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="practice_trials_B"/>\u000a    <Routine name="practice_postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="practice_trials_Asecond"/>\u000a    <Routine name="practice_postblock_A"/>\u000a    <LoopTerminator name="practice_Asecond"/>\u000a    <Routine name="end_practice_blocks"/>\u000a    <LoopTerminator name="practice_blocks"/>\u000a    <LoopInitiator loopType="TrialHandler" name="test_blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="test_blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="Afirst">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Afirst"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Afirst"/>\u000a    <Routine name="preblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_B">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_B" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_B"/>\u000a    <LoopTerminator name="trials_B"/>\u000a    <Routine name="postblock_B"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Asecond">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="preblock_A"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="reptitions" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial_A"/>\u000a    <LoopTerminator name="trials_Asecond"/>\u000a    <Routine name="postblock_A"/>\u000a    <LoopTerminator name="Asecond"/>\u000a    <LoopTerminator name="test_blocks"/>\u000a    <Routine name="end"/>\u000a    <LoopTerminator name="task"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1526
sg56
(lp1527
sg104
I213496304
sg11
S'practice_Asecond'
p1528
sg6
g7
sg106
I0
sg33
I01
sg34
g35
sg107
g1
(g108
g58
(dp1529
g110
g111
(g112
g113
g114
S'b'
tRp1530
(I1
(I1
I0
tg116
I00
S''
S''
Ntbsg117
g111
(g112
g113
g114
S'b'
tRp1531
(I1
(I1
I0
tg116
I00
S''
S''
NtbstRp1532
(dp1533
g121
(dp1534
g110
I01
sg117
I01
ssg123
g1524
sg124
(lp1535
g110
ag117
asg126
(lp1536
I1
aI0
asbsg128
g129
sg130
g131
(g113
(I0
tS'b'
tRp1537
(I1
(I1
I0
tg133
I00
S''
tbsg134
I01
sg135
I0
sg136
I-1
sg137
(lp1538
Nasg139
Nsg140
I0
sg142
I0
sg143
I0
sg144
I0
sg145
I01
sbag161
ag176
asS'savePickle'
p1539
I00
sb.