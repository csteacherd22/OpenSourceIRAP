?mutate
library(plyr) #must import before dplyr
library(dplyr)
?mutate
?rowwise
?select
?group_by
?summarise
?filter
?mutate
?filter
?select
?rename
?spread
library(tidyr)
?spread
library("beanplot")
install.packages("beanplot")
library("beanplot")
par(mfrow = c(1, 2), mai = c(0.5, 0.5, 0.5, 0.1))
mu <- 2
si <- 0.6
c <- 500
bimodal <- c(rnorm(c/2, -mu, si), rnorm(c/2, mu, si))
uniform <- runif(c, -4, 4)
normal <- rnorm(c, 0, 1.5)
beanplot(bimodal,
uniform,
normal,
ylim = c(-7, 7),
main = "beanplot",
+ col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
beanplot(bimodal,
uniform,
normal,
ylim = c(-7, 7),
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
?beanplot
beanplot(bimodal,
uniform,
normal,
ylim = c(-7, 7),
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
study1_figure1 <- beanplot(study1$ratings_change_scores,
ylim = c(-7, 7),
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
study1 <- read.csv("/Users/Ian/Dropbox/Work/Studies/Learning via IAT CC/Study 1/Analysis/Dataset.csv")
study2 <- read.csv("/Users/Ian/Dropbox/Work/Studies/Learning via IAT CC/Study 2/Analysis/Dataset.csv")
study1_figure1 <- beanplot(study1$ratings_change_scores,
ylim = c(-7, 7),
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
study1_figure1 <- beanplot(study1$ratings_change_scores,
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
study1_figure1 <- beanplot(study1$ratings_change_scores,
main = "beanplot",
col = c("#CAB2D6", "#33A02C", "#B2DF8A"),
border = "#CAB2D6")
View(study1)
View(study1)
par(lend = 1, mai = c(0.8, 0.8, 0.5, 0.5))
beanplot(height ~ voice.part,
data = singer,
ll = 0.04,
main = "beanplot",
ylab = "body height (inch)",
side = "both",
border = NA,
col = list("black", c("grey", "white")))
legend("bottomleft",
fill = c("black", "grey"),
legend = c("Group 2", "Group 1"))
library("vioplot")
install.packages("vioplot")
install.packages("lattice")
library("vioplot")
data("singer", package = "lattice")
par(lend = 1, mai = c(0.8, 0.8, 0.5, 0.5))
beanplot(height ~ voice.part,
data = singer,
ll = 0.04,
main = "beanplot",
ylab = "body height (inch)",
side = "both",
border = NA,
col = list("black", c("grey", "white")))
legend("bottomleft",
fill = c("black", "grey"),
legend = c("Group 2", "Group 1"))
par(lend = 1, mai = c(0.8, 0.8, 0.5, 0.5))
beanplot(height ~ voice.part,
data = singer,
ll = 0.04,
main = "beanplot",
ylab = "body height (inch)",
side = "both",
border = NA,
col = list("black", c("grey", "white")))
legend("bottomleft",
fill = c("black", "grey"),
legend = c("Group 2", "Group 1"))
study1_figure1 <- pirateplot(formula = ratings_change_scores ~ condition,
data = study1,
ylab = "rating",
xlab = "Condition",
main = "Exp1 change in ratings")
library(yarrr)
library(readr)
study1_figure1 <- pirateplot(formula = ratings_change_scores ~ condition,
data = study1,
ylab = "rating",
xlab = "Condition",
main = "Exp1 change in ratings")
########################################################################
# Calculate D1 scores, accuracy and latency summary statistics for the
# Open Source IRAP (Implicit Relational Assessment Procedure)
auto_install_dependencies <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
}
packages <- c("plyr", "dplyr", "tidyr", "data.table")
auto_install_dependencies(packages)
devtools::check()
library(devtools)
devtools::check()
devtools::check()
