<PsychoPy2experiment version="1.82.01" encoding="utf-8">
  <Settings>
    <Param name="Show mouse" val="False" valType="bool" updates="None"/>
    <Param name="Data filename" val="u'data' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>
    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>
    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>
    <Param name="color" val="black" valType="str" updates="None"/>
    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>
    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>
    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>
    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'StartingBlock': u'a', u'UseMonkey': u'n'}" valType="code" updates="None"/>
    <Param name="Save csv file" val="False" valType="bool" updates="None"/>
    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>
    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>
    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>
    <Param name="expName" val="IRAP" valType="str" updates="None"/>
    <Param name="logging level" val="warning" valType="code" updates="None"/>
    <Param name="blendMode" val="avg" valType="str" updates="None"/>
    <Param name="Save excel file" val="False" valType="bool" updates="None"/>
    <Param name="Units" val="norm" valType="str" updates="None"/>
    <Param name="Save log file" val="True" valType="bool" updates="None"/>
    <Param name="Screen" val="1" valType="num" updates="None"/>
  </Settings>
  <Routines>
    <Routine name="practice_postblock_B">
      <CodeComponent name="practice_postblock_code_B">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="practice_postblock_code_B" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;prac_block_B_percentage_accuracy = (float(practice_trials_B.data['required_response_B.corr'].count()) - float(practice_trials_B.data['feedback_response_B.corr'].sum())) /  float(practice_trials_B.data['required_response_B.corr'].count()) * 100 &#10;prac_block_B_median_latency = np.median(practice_trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_B_percentage_accuracy', prac_block_B_percentage_accuracy)&#10;##thisExp.addData('prac_block_B_median_latency', prac_block_B_median_latency)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="practice_aim_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_aim_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="practice_accuracy_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_accuracy_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="practice_latency_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_latency_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="press_box_prac_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="press_box_prac_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="practice_postblock_response_B">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="practice_postblock_response_B" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="practice_postblock_A">
      <CodeComponent name="practice_postblock_code_A">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="practice_postblock_code_A" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    practice_trials_Afirst.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Afirst.data['required_response_A.corr'].count()) - float(practice_trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Afirst.data['required_response_A.rt'])&#10;&#10;try: &#10;    practice_trials_Asecond.data&#10;except NameError:&#10;    pass&#10;else:  # if it does exist, calculate block summary data&#10;    prac_block_A_percentage_accuracy = (float(practice_trials_Asecond.data['required_response_A.corr'].count()) - float(practice_trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(practice_trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    prac_block_A_median_latency = np.median(practice_trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, prac_block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, prac_block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('prac_block_A_percentage_accuracy', prac_block_A_percentage_accuracy)&#10;##thisExp.addData('prac_block_A_median_latency', prac_block_A_median_latency)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="practice_aim_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_aim_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="practice_accuracy_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_accuracy_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="practice_latency_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="practice_latency_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="press_box_prac_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="press_box_prac_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="practice_postblock_response_A">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="practice_postblock_response_A" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="end">
      <TextComponent name="end_box">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="end_box" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="end_response">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="end_response" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val=".4" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="postblock_B">
      <CodeComponent name="postblock_code_B">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="postblock_code_B" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;block_B_percentage_accuracy = (float(trials_B.data['required_response_B.corr'].count()) - float(trials_B.data['feedback_response_B.corr'].sum())) /  float(trials_B.data['required_response_B.corr'].count()) * 100 &#10;block_B_median_latency = np.median(trials_B.data['required_response_B.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_B_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_B_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_B_percentage_accuracy', block_B_percentage_accuracy)&#10;##thisExp.addData('block_B_median_latency', block_B_median_latency)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="aim_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="aim_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="accuracy_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="accuracy_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="latency_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="latency_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="press_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="press_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="postblock_response_B">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="postblock_response_B" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="postblock_A">
      <CodeComponent name="postblock_code_A">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="postblock_code_A" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# calculate summary stats&#10;try:  # first check which block was run by seeing if the object exists&#10;    trials_Afirst.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Afirst.data['required_response_A.corr'].count()) - float(trials_Afirst.data['feedback_response_A.corr'].sum())) /  float(trials_Afirst.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Afirst.data['required_response_A.rt'])&#10;&#10;try:&#10;    trials_Asecond.data&#10;except NameError:&#10;    continue&#10;else:  # if it does exist, calculate block summary data&#10;    block_A_percentage_accuracy = (float(trials_Asecond.data['required_response_A.corr'].count()) - float(trials_Asecond.data['feedback_response_A.corr'].sum())) /  float(trials_Asecond.data['required_response_A.corr'].count()) * 100 &#10;    block_A_median_latency = np.median(trials_Asecond.data['required_response_A.rt'])&#10;&#10;# set messages&#10;msg_accuracy = &quot;%s %i %s&quot; %(accuracy, block_A_percentage_accuracy, percentCorrect) &#10;msg_latency = &quot;%s %.2f %s&quot; %(speed, block_A_median_latency, seconds)&#10;&#10;### save summary stats to experiment handler so they're written to the csv file&#10;##thisExp.addData('block_A_percentage_accuracy', block_A_percentage_accuracy)&#10;##thisExp.addData('block_A_median_latency', block_A_median_latency)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="aim_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="aim_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$aim" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="accuracy_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="accuracy_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_accuracy" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="latency_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="latency_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$msg_latency" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.2]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="press_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="press_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$press_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -0.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="postblock_response_A">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="postblock_response_A" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_B">
      <CodeComponent name="trial_code_B">
        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;accuracyFeedback=''" valType="extendedCode" updates="constant"/>
        <Param name="name" val="trial_code_B" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&#10;    response_option_right = response_option_A&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'  # PATTERN REVERED FROM BLOCK A&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_B.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <ImageComponent name="image_stimulus1_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="flipVert" val="False" valType="bool" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="image_stimulus1_box_B" valType="code" updates="None"/>
        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="mask" val="None" valType="str" updates="constant"/>
        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>
        <Param name="interpolate" val="linear" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="texture resolution" val="128" valType="code" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>
        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>
        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>
      </ImageComponent>
      <ImageComponent name="image_stimulus2_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="flipVert" val="False" valType="bool" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="image_stimulus2_box_B" valType="code" updates="None"/>
        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="mask" val="None" valType="str" updates="constant"/>
        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>
        <Param name="interpolate" val="linear" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="texture resolution" val="128" valType="code" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>
        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>
        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>
      </ImageComponent>
      <TextComponent name="stimulus1_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulus1_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="stimulus2_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulus2_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="required_response_B">
        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="required_response_B" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="feedback_response_B">
        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="feedback_response_B" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="left_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="left_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="0" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="right_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="right_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="0" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="accuracy_feedback_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="accuracy_feedback_box_B" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="trial_A">
      <CodeComponent name="trial_code_A">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="trial_code_A" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(0.5, 'e'), (0.5, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# For each stimlulus, choose a random exemplar from the appropriate list&#10;# word stimulus 1&#10;if stimulus1_category == 'a':&#10;    stimulus1 = stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    stimulus1 = stim1_catB_stimuli_many.pop()&#10;&#10;# word stimulus 2&#10;if stimulus2_category == 'c':&#10;    stimulus2 = stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    stimulus2 = stim2_catB_stimuli_many.pop()&#10;&#10;# image stimulus 1&#10;if stimulus1_category == 'a':&#10;    img_stimulus1 = img_stim1_catA_stimuli_many.pop()&#10;elif stimulus1_category == 'b':&#10;    img_stimulus1 = img_stim1_catB_stimuli_many.pop()&#10;&#10;# image stimulus 2&#10;if stimulus2_category == 'c':&#10;    img_stimulus2 = img_stim2_catA_stimuli_many.pop()&#10;elif stimulus2_category == 'd':&#10;    img_stimulus2 = img_stim2_catB_stimuli_many.pop()&#10;&#10;# set correct and incorrect responses&#10;if string_to_booleanl(moving_response_options) == False:&#10;    response_option_left = response_option_B  # i.e., the focal trial type is the right hand one, for hand dominance&#10;    response_option_right = response_option_A&#10;    response_option_onset = 0  # response options are onscreen constantly&#10;    if (trialType == 1) or (trialType == 4):&#10;        required_allowed = 'i'&#10;        required_correct = 'i'&#10;        feedback_allowed = 'e'&#10;        feedback_correct = 'e'&#10;    elif (trialType == 2) or (trialType == 3):&#10;        required_allowed = 'e'&#10;        required_correct = 'e'&#10;        feedback_allowed = 'i'&#10;        feedback_correct = 'i'&#10;elif string_to_booleanl(moving_response_options) == True:&#10;    rand_positions = randint(1, 3)&#10;    response_option_onset = 0.4  # response options appear with stimuli&#10;    if rand_positions == 1:&#10;        response_option_left = response_option_B&#10;        response_option_right = response_option_A&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;    elif rand_positions == 2:&#10;        response_option_left = response_option_A&#10;        response_option_right = response_option_B&#10;        if (trialType == 1) or (trialType == 4):&#10;            required_allowed = 'e'&#10;            required_correct = 'e'&#10;            feedback_allowed = 'i'&#10;            feedback_correct = 'i'&#10;        elif (trialType == 2) or (trialType == 3):&#10;            required_allowed = 'i'&#10;            required_correct = 'i'&#10;            feedback_allowed = 'e'&#10;            feedback_correct = 'e'" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="# save exemplars to experiment handler so they're written to the csv file&#10;thisExp.addData('stimulus1', stimulus1)&#10;thisExp.addData('stimulus2', stimulus2)&#10;thisExp.addData('img_stimulus1', img_stimulus1)&#10;thisExp.addData('img_stimulus2', img_stimulus2)&#10;thisExp.addData('response_option_left', response_option_left)&#10;thisExp.addData('response_option_right', response_option_right)" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="# Accuracy feedback message&#10;if len(feedback_response_A.keys)&lt;1:&#10;    accuracyFeedback=&quot;&quot;&#10;else:&#10;    accuracyFeedback=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <ImageComponent name="image_stimulus1_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="flipVert" val="False" valType="bool" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="image_stimulus1_box_A" valType="code" updates="None"/>
        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="mask" val="None" valType="str" updates="constant"/>
        <Param name="pos" val="image_stimulus1_location" valType="code" updates="set every repeat"/>
        <Param name="interpolate" val="linear" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="texture resolution" val="128" valType="code" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>
        <Param name="image" val="$img_stimulus1" valType="str" updates="set every repeat"/>
        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>
      </ImageComponent>
      <ImageComponent name="image_stimulus2_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="flipVert" val="False" valType="bool" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="image_stimulus2_box_A" valType="code" updates="None"/>
        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="mask" val="None" valType="str" updates="constant"/>
        <Param name="pos" val="image_stimulus2_location" valType="code" updates="set every repeat"/>
        <Param name="interpolate" val="linear" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="texture resolution" val="128" valType="code" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>
        <Param name="image" val="$img_stimulus2" valType="str" updates="set every repeat"/>
        <Param name="size" val="[0.5, 0.5]" valType="code" updates="constant"/>
      </ImageComponent>
      <TextComponent name="stimulus1_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulus1_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$stimulus1" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="stimulus1_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="stimulus2_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulus2_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$stimulus2" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="stimulus2_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="required_response_A">
        <Param name="correctAns" val="$required_correct" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="required_response_A" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="feedback_response_A">
        <Param name="correctAns" val="$feedback_correct" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="feedback_response_A" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="left_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="left_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$response_option_left" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="response_option_left_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="0" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="right_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="right_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$response_option_right" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="response_option_right_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="0" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="$response_option_onset" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="accuracy_feedback_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="accuracy_feedback_box_A" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$accuracyFeedback" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="accuracy_feedback_location" valType="code" updates="set every repeat"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="end_practice_blocks">
      <CodeComponent name="end_practice_code">
        <Param name="Begin Experiment" val="# by default, don't do test blocks. Change elsewhere if mastery criteria are met.&#10;complete_test_blocks = 0" valType="extendedCode" updates="constant"/>
        <Param name="name" val="end_practice_code" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Assess if acc and latency mastery criteria were met&#10;if (prac_block_A_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_B_percentage_accuracy &gt;= accuracyCriterion) and (prac_block_A_median_latency &lt;= latencyCriterion) and (prac_block_B_median_latency &lt;= latencyCriterion):&#10;    complete_test_blocks = n_pairs_test_blocks # latter from blocks.xlsx&#10;    practice_blocks.finished = True" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
    </Routine>
    <Routine name="preblock_A">
      <CodeComponent name="preblock_A_code">
        <Param name="Begin Experiment" val="# msg variable just needs some value at start&#10;accuracyFeedback=''&#10;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="preblock_A_code" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="rule_box_A">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="rule_box_A" valType="code" updates="constant"/>
        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>
        <Param name="color" val="orange" valType="str" updates="constant"/>
        <Param name="text" val="$rule_A" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="preblock_response_A">
        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="preblock_response_A" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="preblock_B">
      <CodeComponent name="preblock_B_code">
        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="name" val="preblock_B_code" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# Option to simulates using ResponseEmulator:&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Generate list of stimuli for the block&#10;stim1_catA_stimuli_many = generate_trials('labelA_stimuli', 2, True)  # function and variable determined at begin exp.&#10;stim1_catB_stimuli_many = generate_trials('labelB_stimuli', 2, True)&#10;stim2_catA_stimuli_many = generate_trials('targetA_stimuli', 2, True)&#10;stim2_catB_stimuli_many = generate_trials('targetB_stimuli', 2, True)&#10;img_stim1_catA_stimuli_many = generate_trials('labelA_image_stimuli', 2, True)&#10;img_stim1_catB_stimuli_many = generate_trials('labelB_image_stimuli', 2, True)&#10;img_stim2_catA_stimuli_many = generate_trials('targetA_image_stimuli', 2, True)&#10;img_stim2_catB_stimuli_many = generate_trials('targetB_image_stimuli', 2, True)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="rule_box_B">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="rule_box_B" valType="code" updates="constant"/>
        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>
        <Param name="color" val="cyan" valType="str" updates="constant"/>
        <Param name="text" val="$rule_B" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="preblock_response_B">
        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="preblock_response_B" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions">
      <CodeComponent name="inst_code">
        <Param name="Begin Experiment" val="# Dependencies&#10;&#10;from psychopy.hardware.emulator import ResponseEmulator  #for response emulator&#10;import itertools  # for flattening lists of lists into lists&#10;import random  # for shuffling lists&#10;&#10;# Functions&#10;&#10;# Convert string to boolean.&#10;# Take any likely input from the task.xlsx file and convert to a boolean. This helps to idiot-proof the excel files.&#10;def string_to_booleanl(v):&#10;  return v.lower() in (&quot;yes&quot;, &quot;true&quot;, &quot;TRUE&quot;, &quot;True&quot;, &quot;t&quot;, &quot;T&quot;, &quot;1&quot;)&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier, shuffle_list):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    if shuffle_list == True:&#10;        random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;&#10;# Determine variables based on dialogue box&#10;&#10;# auto response monkey&#10;if str(expInfo['UseMonkey']) == 'y' or str(expInfo['UseMonkey']) == 'Y' or str(expInfo['UseMonkey']) == 'yes' or str(expInfo['UseMonkey']) == 't' or str(expInfo['UseMonkey']) == 'true' or str(expInfo['UseMonkey']) == 'True' or str(expInfo['UseMonkey']) == 'TRUE':&#10;    Monkey = True&#10;else:&#10;    Monkey = False&#10;&#10;# starting block&#10;if str(expInfo['StartingBlock']) == 'a' or str(expInfo['StartingBlock']) == 'A':&#10;    starting_block = 'a'&#10;    Afirst_nReps = 1&#10;    Asecond_nReps = 0&#10;elif str(expInfo['StartingBlock']) == 'b' or str(expInfo['StartingBlock']) == 'B':&#10;    starting_block = 'b'&#10;    Afirst_nReps = 0&#10;    Asecond_nReps = 1&#10;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="inst_code" valType="code" updates="None"/>
        <Param name="Begin Routine" val="# ResponseEmulator&#10;if Monkey:&#10;    simulated_responses = [(1.1, 'e'), (1.1, 'i')]  # simulated responses take the form (onsetTime, responseKey). You can simulate more than one.&#10;    responder = ResponseEmulator(simulated_responses)&#10;    responder.start()&#10;&#10;# Create sufficiently long lists of stimuli&#10;&quot;&quot;&quot;&#10;This allows us to keep the stimuli in an excel file across multiple lines, and to present them based on the categories &#10;set by the 'layout.xlsx' file. This allows for shuffled (counterbalanced pseudorandom) presentation of the stimuli examplars &#10;as well as the categories. &#10;&#10;The method to do this below is to first declare a dictionary to be populated from the exemplars conditions, but not in the usual way. &#10;Usually, psychopy would read across columns. If the stimuli were entered as a list within the excel file (e.g., ['male', 'female']) &#10;rather on seperate rows as they are now all we would have to do is multiply the length of the list to get enough exemplars. However, &#10;I wanted the stimuli file to be as use friendly as possible, so instead the below code allows you to enter the exemplars on seperate&#10;rows, and then populates the dict vertically from the rows. &#10;&quot;&quot;&quot;&#10;# Import stimuli exemplars&#10;exemplars = data.importConditions(stimulus_file)  # Import stimuli exemplars. stimulus_file is defined in task.xlsx&#10;&#10;# Determine nReps of trials loop based on number of exemplars&#10;reptitions = len(exemplars)&#10;&#10;&#10;# Generate a first, unshuffled list of the stimuli exemplars for saving to output file&#10;&#10;# 1. generate: no shuffling, multiplier = 1.&#10;labelA_stimuli_for_output = generate_trials('labelA_stimuli', 1, False)  # function and variable determined at begin exp.&#10;labelB_stimuli_for_output = generate_trials('labelB_stimuli', 1, False)&#10;targetA_stimuli_for_output = generate_trials('targetA_stimuli', 1, False)&#10;targetB_stimuli_for_output = generate_trials('targetB_stimuli', 1, False)&#10;labelA_image_stimuli_for_output = generate_trials('labelA_image_stimuli', 1, False)&#10;labelB_image_stimuli_for_output = generate_trials('labelB_image_stimuli', 1, False)&#10;targetA_image_stimuli_for_output = generate_trials('targetA_image_stimuli', 1, False)&#10;targetB_image_stimuli_for_output = generate_trials('targetB_image_stimuli', 1, False)&#10;&#10;# 2. save these lists to the trial handler to be written to csv&#10;thisExp.addData('labelA_stimuli_for_output', labelA_stimuli_for_output)&#10;thisExp.addData('labelB_stimuli_for_output', labelB_stimuli_for_output)&#10;thisExp.addData('targetA_stimuli_for_output', targetA_stimuli_for_output)&#10;thisExp.addData('targetB_stimuli_for_output', targetB_stimuli_for_output)&#10;thisExp.addData('labelA_image_stimuli_for_output', labelA_image_stimuli_for_output)&#10;thisExp.addData('labelB_image_stimuli_for_output', labelB_image_stimuli_for_output)&#10;thisExp.addData('targetA_image_stimuli_for_output', targetA_image_stimuli_for_output)&#10;thisExp.addData('targetB_image_stimuli_for_output', targetB_image_stimuli_for_output)" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="intro_box">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="intro_box" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.5" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$intro_message" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.4" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="intro_resp">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="intro_resp" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
        <Param name="syncScreenRefresh" val="True" valType="bool" updates="constant"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="task">
      <Param name="conditionsFile" val="task.xlsx" valType="str" updates="None"/>
      <Param name="name" val="task" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \n    flowers are positive\n    insects are negative\n\nGo as quickly as you can while being accurate\n\nPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \n    insects are positive \n    flowers are negative\n\nGo as quickly as you can while being accurate\n\nPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \n\nYou will be given rules on how to respond to them. \n\nGo as quickly as you can while being accurate.\n\nPlace your fingers on the 'e' and 'i' keys. \n\nPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'flower_insects_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}, {u'response_option_left_location': [-0.3, -0.6], u'accuracyCriterion': 0, u'response_option_right_location': [0.3, -0.6], u'end_message': u'End of task', u'image_stimulus1_location': [0, 0.3], u'speed': u'Speed:', u'rule_A': u&quot;Respond AS IF: \n    I am positive\n    Others are negative\n\nGo as quickly as you can while being accurate\n\nPress 'e' or 'i' to continue&quot;, u'rule_B': u&quot;Respond AS IF: \n    I am negative \n    Others are positive\n\nGo as quickly as you can while being accurate\n\nPress 'e' or 'i' to continue&quot;, u'press_message': u&quot;Press 'e' or 'i' to continue&quot;, u'intro_message': u&quot;This task will present you with pairs of words. \n\nYou will be given rules on how to respond to them. \n\nGo as quickly as you can while being accurate.\n\nPlace your fingers on the 'e' and 'i' keys. \n\nPress either one to continue.&quot;, u'response_option_B': u'Different', u'response_option_A': u'Similar', u'latencyCriterion': 2, u'stimulus2_location': [0, -0.2], u'accuracy': u'Accuracy:', u'seconds': u'seconds', u'percentCorrect': u'percent correct', u'stimulus_file': u'self_others_stimuli.xlsx', u'accuracy_feedback_location': [0, -0.7], u'moving_response_options': u'False', u'image_stimulus2_location': [0, -0.3], u'IRAP_name': u'flowers-insects demo IRAP', u'aim': u'Aim for &gt;80% and &lt;2 seconds', u'stimulus1_location': [0, 0.2], u'n_pairs_test_blocks': 1, u'max_pairs_practice_blocks': 4}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopInitiator loopType="TrialHandler" name="practice_blocks">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="practice_blocks" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="max_pairs_practice_blocks" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="practice_Afirst">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="practice_Afirst" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="preblock_A"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials_Afirst">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="practice_trials_Afirst" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_A"/>
    <LoopTerminator name="practice_trials_Afirst"/>
    <Routine name="practice_postblock_A"/>
    <LoopTerminator name="practice_Afirst"/>
    <Routine name="preblock_B"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials_B">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="practice_trials_B" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_B"/>
    <LoopTerminator name="practice_trials_B"/>
    <Routine name="practice_postblock_B"/>
    <LoopInitiator loopType="TrialHandler" name="practice_Asecond">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="practice_Asecond" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="preblock_A"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials_Asecond">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="practice_trials_Asecond" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_A"/>
    <LoopTerminator name="practice_trials_Asecond"/>
    <Routine name="practice_postblock_A"/>
    <LoopTerminator name="practice_Asecond"/>
    <Routine name="end_practice_blocks"/>
    <LoopTerminator name="practice_blocks"/>
    <LoopInitiator loopType="TrialHandler" name="test_blocks">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="test_blocks" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="complete_test_blocks" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="Afirst">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="Afirst" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="Afirst_nReps" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="preblock_A"/>
    <LoopInitiator loopType="TrialHandler" name="trials_Afirst">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="trials_Afirst" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_A"/>
    <LoopTerminator name="trials_Afirst"/>
    <Routine name="postblock_A"/>
    <LoopTerminator name="Afirst"/>
    <Routine name="preblock_B"/>
    <LoopInitiator loopType="TrialHandler" name="trials_B">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="trials_B" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_B"/>
    <LoopTerminator name="trials_B"/>
    <Routine name="postblock_B"/>
    <LoopInitiator loopType="TrialHandler" name="Asecond">
      <Param name="conditionsFile" val="" valType="str" updates="None"/>
      <Param name="name" val="Asecond" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="Asecond_nReps" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="None" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="preblock_A"/>
    <LoopInitiator loopType="TrialHandler" name="trials_Asecond">
      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>
      <Param name="name" val="trials_Asecond" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="reptitions" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'trialType': 1, u'stimulus1_category': u'a', u'stimulus2_category': u'c'}, {u'trialType': 2, u'stimulus1_category': u'a', u'stimulus2_category': u'd'}, {u'trialType': 3, u'stimulus1_category': u'b', u'stimulus2_category': u'c'}, {u'trialType': 4, u'stimulus1_category': u'b', u'stimulus2_category': u'd'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trial_A"/>
    <LoopTerminator name="trials_Asecond"/>
    <Routine name="postblock_A"/>
    <LoopTerminator name="Asecond"/>
    <LoopTerminator name="test_blocks"/>
    <Routine name="end"/>
    <LoopTerminator name="task"/>
  </Flow>
</PsychoPy2experiment>
